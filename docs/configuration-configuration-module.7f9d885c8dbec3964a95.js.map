{"version":3,"sources":["./src/app/configuration/configuration.component.html","./src/app/configuration/configuration-routing.module.ts","./src/app/configuration/configuration.component.ts","./src/app/configuration/configuration.module.ts"],"names":["routes","path","component","ConfigurationComponent","route","configService","ws","router","toastr","config","wiz_config","item","profileName","profileData","brandingConfig","editItem","canSubmit","fileConfig","sectionName","imageName","isUnique","customClass","cropper","aspectRatio","maintainAspectRatio","bgFileConfig","this","snapshot","paramMap","get","console","log","toggleLoader","getProfileData","getViewData","subscribe","res","setProfileData","getTheme","err","draft","error","responseCode","localStorage","setItem","JSON","stringify","key","parse","indexOf","siteURL","iName","split","pop","deleteFile","action","isPreview","setTheme","type","success","url","serializeUrl","createUrlTree","window","open","ConfigurationRoutingModule","forChild","ConfigurationModule","forRoot"],"mappings":"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","file":"configuration-configuration-module.7f9d885c8dbec3964a95.js","sourcesContent":["<div class=\"container configurationn-page mt-5\">\n  <h5>{{profileName}} - Configuration</h5>\n  <br />\n  <div>\n    <accordion [isAnimated]='true' [closeOthers]=\"true\">\n      <accordion-group class=\"ti-accordion p-0\">\n        <button class=\"btn btn-link btn-block clearfix\" accordion-heading type=\"button\">\n          <div class=\"pull-left float-left\">Branding</div>\n        </button>\n\n        <div class=\"col-md-12 col-sm-12\" *ngIf=\"brandingConfig\">\n          <div class=\"form-group\">\n            <label class=\"w-100\">Logo\n              <button *ngIf=\"brandingConfig?.logo\" class=\"btn btn-danger float-right btn-small\"\n                (click)=\"onDeleteImage('logo')\"><span class=\"material-icons-outlined\">delete</span></button>\n            </label>\n            <div>\n              <ibss-file-upload [fileConfig]=\"fileConfig\" (onSelectFile)=\"onSelectFile($event,'logo')\">\n              </ibss-file-upload>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"w-100\">Login Page - Background Image\n              <button *ngIf=\"brandingConfig?.backgroundImage\" class=\"btn btn-danger float-right btn-small\"\n                (click)=\"onDeleteImage('login.backgroundImage')\"><span class=\"material-icons-outlined\">delete</span></button>\n            </label>\n            <div>\n              <ibss-file-upload [fileConfig]=\"bgFileConfig\" (onSelectFile)=\"onSelectFile($event,'login.backgroundImage')\">\n              </ibss-file-upload>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"title\">Login Page - Welcome text</label>\n            <editor [apiKey]=\"config.tinyMCEKey\" [(ngModel)]=\"brandingConfig.login.text\"></editor>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"title\">Colors - Login Page</label>\n            <div class=\"color-palette-list\">\n              <div class=\"row\">\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Background</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\" [(ngModel)]=\"brandingConfig.login.bgcolor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Text</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\" [(ngModel)]=\"brandingConfig.login.textColor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Label</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\" [(ngModel)]=\"brandingConfig.login.labelColor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Button</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\" [(ngModel)]=\"brandingConfig.login.buttonColor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Button Text</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\"\n                      [(ngModel)]=\"brandingConfig.login.buttonTextColor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"title\">Colors - Menu</label>\n            <div class=\"color-palette-list\">\n              <div class=\"row\">\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Background</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\" [(ngModel)]=\"brandingConfig.menu.bgcolor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Text</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\" [(ngModel)]=\"brandingConfig.menu.textColor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Active Menu - Background</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\" [(ngModel)]=\"brandingConfig.menu.activeBgColor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n                <div class=\"col-md-3 col-xl-3\">\n                  <div class=\"cp\">\n                    <span class=\"title\">Active Menu - Text</span>\n                    <ngx-colors ngx-colors-trigger acceptLabel=\"Select\"\n                      [(ngModel)]=\"brandingConfig.menu.activeTextColor\">\n                    </ngx-colors>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"clearfix\">\n            <a type=\"button\" class=\"btn btn-primary btn-sm mx-1 float-right\" (click)=\"onAction('MODIFY', true)\">Preview</a>\n            <button type=\"button\" class=\"btn btn-primary btn-sm mx-1 float-right\" (click)=\"onAction('MODIFY', false)\"\n            target=\"_blank\">Save</button>\n            <button type=\"button\" *ngIf=\"canSubmit\" class=\"btn btn-primary btn-sm mx-1 float-right\" (click)=\"onAction('PUBLISH', false)\"\n            target=\"_blank\">Publish</button>\n          </div>\n        </div>\n\n      </accordion-group>\n    </accordion>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ConfigurationComponent } from './configuration.component';\r\nconst routes: Routes = [\r\n  { path: '', component: ConfigurationComponent },\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ConfigurationRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CONFIG } from '../config';\nimport { themeType } from '../enums/theme.enum';\nimport { ConfigurationService } from '../services/configuration.service';\nimport { IBSSFileConfig } from '../wizard/edit/file-upload/file-upload.component';\nimport { WIZARD_CONFIG, IBSSMAINITEM, IBSSDEFAULTITEM } from '../wizard/wizard.config';\nimport { WizardService } from '../wizard/wizard.service';\n\n@Component({\n  selector: 'ibss-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent implements OnInit {\n\n  config: typeof CONFIG = CONFIG;\n  wiz_config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\n  item: IBSSMAINITEM = new IBSSDEFAULTITEM();\n  \n  profileName: any = null;\n  profileData: any = null;\n  brandingConfig:any=  null;\n  editItem:any= {};\n  canSubmit = false;\n  fileConfig: IBSSFileConfig = {\n    sectionName:\"branding\",\n    imageName:\"branding1\",\n    isUnique: true,\n    customClass: \"branding-comp\",\n    cropper : {\n      aspectRatio: 1/1,\n      maintainAspectRatio:true\n    }\n  }\n\n  bgFileConfig: IBSSFileConfig = {\n    sectionName:\"branding\",\n    imageName:\"branding1\",\n    isUnique: true,\n    customClass: \"branding-comp\",\n    cropper : {\n      aspectRatio: 16/9,\n      maintainAspectRatio:true\n    }\n  }\n  \n  constructor(\n    private route: ActivatedRoute,\n    private configService: ConfigurationService,\n    private ws: WizardService,\n    private router: Router,\n    public toastr: ToastrService\n  ) {\n    const routeParams = this.route.snapshot.paramMap;\n    this.profileName = routeParams.get('Id');\n    console.log(\"profileName\", this.profileName);\n  }\n\n  ngOnInit(): void {\n    this.config.toggleLoader(true);\n    this.getProfileData();\n  }\n\n  getProfileData() {\n    this.ws.getViewData(this.profileName)\n    .subscribe((res:any)=>{\n      this.profileData = res.profileData ? res.profileData : null;\n      // if (!this.profileData) {\n      //   this.profileData = JSON.parse(JSON.stringify(this.wiz_config.IBSSWEBTEMPLATE2));\n      //   this.profileData.id = this.profileName;\n      //   this.profileData.title = this.profileName;\n      // }\n\n      this.ws.setProfileData(this.profileData);\n      this.getTheme();\n    }, (err)=>{\n      console.log(\"getTheme - error:\", err);\n    }) \n  }\n\n  getTheme() {\n    this.configService.getTheme(this.profileName, themeType.draft)\n    .subscribe((res: any) => {\n      console.log(\"getTheme - success : \", res);\n      if (res.error && res.error.responseCode === 0) {\n        this.canSubmit = true;\n        this.brandingConfig = res.profileData;\n      } else {\n        this.brandingConfig = {\n            \"logo\": \"http://impairbit.com/ibss_logo_big.png\",\n            \"login\": {\n                \"text\": \"Welcome to Impairbit\",\n                \"backgroundImage\": \"https://cdn.wallpapersafari.com/59/94/g7KCNA.jpg\",\n                \"bgcolor\": \"#0f87c2\",\n                \"textColor\": \"#ea4335\",\n                \"labelColor\": \"#34a853\",\n                \"buttonColor\": \"#fbbc05\",\n                \"buttonTextColor\": \"#fff\"\n            },\n            \"menu\": {\n                \"bgcolor\": \"#0f87c2\",\n                \"textColor\": \"#fff\",\n                \"activeBgColor\": \"#fff\",\n                \"activeTextColor\": \"#0f87c2\"\n            }\n        }\n      }\n      localStorage.setItem(\"themeConfig\", JSON.stringify(this.brandingConfig));\n      this.config.toggleLoader(false);\n    }, (err) => {\n      console.log(\"getTheme - error:\", err);\n    })\n  }\n\n  onSelectFile(res:any, key:any) {\n    console.log(\"onSelectFile\", res);\n    let editItem = JSON.parse(JSON.stringify(this.brandingConfig));\n\n    if (editItem[key] && editItem[key].indexOf(this.config.siteURL)!=-1) {\n\n      const imgName=JSON.parse(JSON.stringify(editItem[key])).split(\"/\")\n      const iName = imgName.pop();\n      const payload = {\n        \"sectionName\" : \"header\",\n        \"fileNames\" : [iName],\n        \"filePath\":editItem[key]\n      }\n      this.ws.deleteFile(payload)\n      .subscribe((res)=> {\n        console.log('deleteFile-success',res);\n      },(err)=> {\n        console.log('deleteFile-failure',err);\n      })\n    }\n    editItem[key] = res;\n    this.brandingConfig = JSON.parse(JSON.stringify(editItem));\n  }\n\n  onDeleteImage ( key:any) {\n    let editItem = JSON.parse(JSON.stringify(this.brandingConfig));\n\n    if (editItem[key] && editItem[key].indexOf(this.config.siteURL)!=-1) {\n      console.log(\"Deleting\", editItem[key]);\n      const imgName=JSON.parse(JSON.stringify(editItem[key])).split(\"/\")\n      const iName = imgName.pop();\n      const payload = {\n        \"sectionName\" : \"header\",\n        \"fileNames\" : [iName],\n        \"filePath\":editItem[key]\n      }\n      this.ws.deleteFile(payload)\n      .subscribe((res)=> {\n        console.log('deleteFile-success',res);\n      },(err)=> {\n        console.log('deleteFile-failure',err);\n      })\n    }\n    editItem[key] = null;\n    this.brandingConfig = JSON.parse(JSON.stringify(editItem));\n  }\n\n  onAction(action:any, isPreview:any = false) {\n    console.log(action, isPreview);\n    this.config.toggleLoader(true);\n    const payload= {\n      \"serviceData\": {\n        \"profileData\": this.brandingConfig,\n        \"profileName\": this.profileName,\n        \"profileType\": this.profileData.type,\n        \"requestType\": action\n        }\n    }\n    this.configService.setTheme(payload)\n    .subscribe((res) =>{\n      this.config.toggleLoader(false);\n\n      const msg = action===\"MODIFY\"? \"Saved Successfully\":\"Published Successfully\";\n      this.toastr.success(msg);\n      if (isPreview) {\n        const url = this.router.serializeUrl(\n          this.router.createUrlTree(['/preview/login/', this.profileName])\n        );\n      \n        window.open(url, '_blank');\n      }\n    }, (err) => {\n      this.config.toggleLoader(false);\n      this.toastr.error(\"Oops there was some issue in saving the data. Please try again after sometime! - \");\n    })\n  }\n\n\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigurationComponent } from './configuration.component';\nimport { ConfigurationRoutingModule } from './configuration-routing.module';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ColorSketchModule } from 'ngx-color/sketch';\nimport { NgxColorsModule } from 'ngx-colors';\nimport { NgxFileDropModule } from 'ngx-file-drop';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { NgxImageCompressService } from 'ngx-image-compress';\nimport { WizardService } from '../wizard/wizard.service';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { FileUploadComponent } from '../wizard/edit/file-upload/file-upload.component';\nimport { FileUploadModule } from '../wizard/edit/file-upload/file-upload.module';\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\n\n\n@NgModule({\n  declarations: [\n    ConfigurationComponent,\n  ],\n  imports: [\n    CommonModule,\n    ModalModule.forRoot(),\n    ConfigurationRoutingModule,\n    AccordionModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    NgxFileDropModule,\n    ColorSketchModule,\n    ImageCropperModule,\n    NgxColorsModule,\n    FileUploadModule,\n    EditorModule,\n  ],\n  providers: [\n    WizardService,\n    NgxImageCompressService,\n  ]  \n})\nexport class ConfigurationModule { }\n"],"sourceRoot":"webpack:///"}