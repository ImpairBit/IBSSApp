{"version":3,"sources":["./src/app/user-access-mgmt/create-user/create-user.component.html","./src/app/user-access-mgmt/create-user/create-user-routing.module.ts","./src/app/user-access-mgmt/create-user/create-user.component.ts","./src/app/user-access-mgmt/create-user/create-user.module.ts"],"names":["routes","path","component","CreateUserComponent","uamService","toastr","route","router","currentUserRole","config","isCategoryRoleSelected","isCategoryCodeSelected","isCreateButtonEnabled","isConfirmEnabled","isEmailValid","isFirstNameValid","isLastNameValid","isMobileNoValid","isUserRoleValid","isCategoryValid","isGroupValid","isAddUser","isRecordConfirmed","isModifyEnabled","confirmMessage","routerLink","header","categoryList","groupList","searchUser","firstName","lastName","mobile","emailId","createUser","serviceData","middleName","address1","address2","city","state","country","pin","phone","emailID","idType","idNo","userId","roleType","categoryCode","groupCode","branchCode","systemId","loginMaster","loginId","pinMaster","password","totalRecords","maxPageSize","searchBy","searchTerm","currentPage","itemsPerPage","sortOrder","isSearch","searchByOptions","id","value","this","params","subscribe","queryParams","ibssApp","localStorage","getItem","userRoles","JSON","parse","token","buildRoles","roles","rolesManager","forEach","role","managerRole","rolesManaging","length","fetchCategories","toggleLoader","res","console","log","error","responseCode","businessValidation","i","errorDesc","dataValidation","err","fetchGroups","setDefault","checkEmail","event","inp","String","fromCharCode","keyCode","test","preventDefault","regEx","email","toLowerCase","currentUrl","url","navigateByUrl","skipLocationChange","then","navigate","searchData","fetchUsers","page","totalPages","index","CreateUserRoutingModule","forChild","CreateUserModule","forRoot"],"mappings":"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","file":"user-access-mgmt-create-user-create-user-module.8b52f52bc686e1cdc52d.js","sourcesContent":["<div class=\"row justify-content-center\" *ngIf = \"!isRecordConfirmed && !isAddUser\">\r\n    <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">{{header}}</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"col-sm-12 col-lg-4 col-form-label\">Search By</label>\r\n                            <select class=\"form-control\" [(ngModel)]=\"searchBy\" name=\"searchOption\" id=\"searchOption\" >\r\n                                <option value=\"\">Select</option>\r\n                                <option *ngFor=\"let optn of searchByOptions\" [value]=\"optn.id\">{{optn.value}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"searchTerm\" class=\"col-sm-12 col-lg-4 col-form-label\">Search Term</label>\r\n                            <input type=\"text\" name=\"searchTerm\" id=\"searchTerm\" class=\"form-control\"\r\n                                required minlength=\"2\" maxlength=\"75\" [(ngModel)]=\"searchTerm\"\r\n                                placeholder=\"Search Term\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">                \r\n                <div class=\"clearfix\">\r\n                    <div class=\"float-right\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"onSearch()\"  [disabled]=\"searchBy.trim().length === 0 || searchTerm.trim().length < 3\">Search</button>\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n        <div class=\"site-table\" *ngIf=\"isSearch\">\r\n            <div class=\"ti-card\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"row\">      \r\n                        <div class=\"col\">\r\n                            <div class=\"clearfix\">\r\n                                <h5 class=\"my-0\">Search Results\r\n                                    <div class=\"float-right form-group col-4\" *ngIf=\"searchData?.length>0\">\r\n                                        <div class=\"input-group\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"\">Items</span>\r\n                                            </div>\r\n                                            <select class=\"form-control\" [(ngModel)]=\"itemsPerPage\" (change)=\"onSearch()\" >\r\n                                                <option value=\"5\">5</option>\r\n                                                <option value=\"10\">10</option>\r\n                                                <option value=\"25\">25</option>\r\n                                                <option value=\"50\">50</option>\r\n                                                <option value=\"75\">75</option>\r\n                                                <option value=\"100\">100</option>\r\n                                            </select>\r\n                                            <select class=\"form-control\" [(ngModel)]=\"sortOrder\" (change)=\"onSearch()\" >\r\n                                                <option value=\"asc\">(A-Z)</option>\r\n                                                <option value=\"desc\">(Z-A)</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"ti-responsive-table\">\r\n                <table >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Mobile</th>\r\n                            <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let result of searchData; let i=index;\">\r\n                            <td class=\"no\">{{ ((currentPage-1) * itemsPerPage) + (i+1) }}</td>\r\n                            <td data-label=\"Title\">{{result.firstName}}{{result.middleName?.trim()?.length > 0 ? \" \"+result.middleName:\"\"  }} {{result.lastName}}</td>\r\n                            <td data-label=\"Email\">{{result.emailID}}</td>\r\n                            <td data-label=\"Mobile\">{{result.mobile}}</td>\r\n                            <td data-label=\"Icons\" class=\"act-btns\">\r\n                                <a class=\"rounded-buttons btn purple\" (click) = \"onEditOfSearchResult(i)\">\r\n                                    <span class=\"material-icons-outlined\">edit</span>\r\n                                </a>\r\n                            </td>\r\n        \r\n                        </tr>\r\n                        <tr *ngIf=\"searchData?.length==0\">\r\n                            <td class=\"text-center\" colspan=\"5\"> <span class=\"material-icons-outlined\">error</span>\r\n                                &nbsp; No user found.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-center pagination-container p-3\">\r\n                    <pagination *ngIf=\"totalRecords > itemsPerPage\" [totalItems]=\"totalRecords\" [itemsPerPage]=\"itemsPerPage\" [maxSize]=\"maxPageSize\" (pageChanged)=\"pageChanged($event)\" [(ngModel)]=\"currentPage\"></pagination>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row justify-content-center\" *ngIf = \"!isRecordConfirmed && isAddUser\">\r\n    <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">{{header}}</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-5 col-form-label\">First Name<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"text\" name=\"firstName\" id=\"firstName\" class=\"form-control\" \r\n                            required minlength=\"2\" maxlength=\"75\" [(ngModel)] =\"createUser.serviceData.firstName\" \r\n                            [disabled] = \"isConfirmEnabled\" placeholder=\"First Name*\" #firstName=\"ngModel\" \r\n                            (keypress)=\"keyPressAlphabetsWithSpace($event)\">\r\n                        </div>\r\n                        <div *ngIf=\"firstName.invalid && firstName.touched\" class=\"alert text-danger\">\r\n                            <div *ngIf=\"firstName.errors?.required\">\r\n                                First Name is required.\r\n                            </div>\r\n                            <div *ngIf=\"firstName.errors?.minlength\">\r\n                                First Name must be at least 2 characters long.\r\n                            </div>                        \r\n                        </div>\r\n                        <div *ngIf = \"isFirstNameValid\" class=\"alert text-danger\">\r\n                            First Name is required.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-5 col-form-label\">Middle Name</label>\r\n                            <input type=\"text\" name=\"middleName\" id=\"middleName\" class=\"form-control\" \r\n                            minlength=\"2\" maxlength=\"75\" [(ngModel)] =\"createUser.serviceData.middleName\" \r\n                            [disabled] = \"isConfirmEnabled\" placeholder=\"Middle Name\" #middleName=\"ngModel\" \r\n                            (keypress)=\"keyPressAlphabetsWithSpace($event)\">\r\n                        </div>\r\n                        <div *ngIf=\"middleName.invalid && middleName.touched\" class=\"alert text-danger\">\r\n                            <div *ngIf=\"middleName.errors?.required\">\r\n                                Middle Name is required.\r\n                            </div>\r\n                            <div *ngIf=\"middleName.errors?.minlength\">\r\n                                Middle Name must be at least 2 characters long.\r\n                            </div>                          \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-5 col-form-label\">Last Name<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"text\" name=\"lastName\" id=\"lastName\" class=\"form-control\" \r\n                            required minlength=\"1\" maxlength=\"75\" [(ngModel)] =\"createUser.serviceData.lastName\" \r\n                            [disabled] = \"isConfirmEnabled\" placeholder=\"Last Name*\" #lastName=\"ngModel\"\r\n                            (keypress)=\"keyPressAlphabetsWithSpace($event)\">\r\n                        </div>\r\n                        <div *ngIf=\"lastName.invalid && lastName.touched\" class=\"alert text-danger\">\r\n                            <div *ngIf=\"lastName.errors?.required || isLastNameValid\">\r\n                                Last Name is required.\r\n                            </div>\r\n                            <div *ngIf=\"lastName.errors?.minlength\">\r\n                                Last Name must be at least 2 characters long.\r\n                            </div>                          \r\n                        </div>\r\n                        <div *ngIf = \"isLastNameValid\" class=\"alert text-danger\">\r\n                            Last Name is required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-5 col-form-label\">Mobile<span class=\"text-danger\">*</span></label>\r\n                            <!-- <ngx-intl-tel-input [cssClass]=\"'form-control'\" [preferredCountries]=\"preferredCountries\"\r\n                            [enableAutoCountrySelect]=\"true\" [enablePlaceholder]=\"true\" [searchCountryFlag]=\"true\"\r\n                            [searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\" [selectFirstCountry]=\"false\"\r\n                            [selectedCountryISO]=\"CountryISO.India\" maxLength=\"15\"\r\n                            [phoneValidation]=\"true\" [separateDialCode]=\"separateDialCode\"\r\n                            [numberFormat]=\"PhoneNumberFormat.National\" name=\"mobile\" id=\"mobile\" #mobile=\"ngModel\">\r\n                            </ngx-intl-tel-input> -->\r\n                            <input type=\"text\" name=\"mobile\" id=\"mobile\" class=\"form-control\" \r\n                            required minlength=\"10\" maxlength=\"10\" [(ngModel)] =\"createUser.serviceData.mobile\" \r\n                            placeholder=\"Mobile*\" #mobile=\"ngModel\" [disabled] = \"isModifyEnabled\"\r\n                            (keypress)=\"keyPressNumeric($event)\">\r\n                        </div>\r\n                        <div *ngIf=\"mobile.invalid && mobile.touched\" class=\"alert text-danger\">\r\n                            <div *ngIf=\"mobile.errors?.required || isMobileNoValid\">\r\n                                Mobile No is required.\r\n                            </div>\r\n                            <div *ngIf=\"mobile.errors?.minlength\">\r\n                                Mobile No should be 10 digits.\r\n                            </div>                          \r\n                        </div>\r\n                        <div *ngIf = \"isMobileNoValid\" class=\"alert text-danger\">\r\n                            Mobile No is required.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-5 col-form-label\">Email<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\"\r\n                            required minlength=\"5\" maxlength=\"75\" [(ngModel)] =\"createUser.serviceData.emailID\" \r\n                            placeholder=\"Email*\" #email=\"ngModel\" [disabled] = \"isModifyEnabled\">\r\n                        </div>\r\n                        <div *ngIf=\"email.invalid && email.touched\" class=\"alert text-danger\">\r\n                            <div *ngIf=\"email.errors?.required\">\r\n                                Email is required.\r\n                            </div>\r\n                            <div *ngIf=\"email.errors?.minlength\">\r\n                                Email should be atleast 5 digits.\r\n                            </div>                          \r\n                            <div *ngIf=\"isEmailValid\">\r\n                                Invalid Email Id, Please provide a valid email id.\r\n                            </div>\r\n                        </div>                    \r\n                    </div>\r\n                    \r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-12 col-lg-5 col-form-label\">User Role<span class=\"text-danger\">*</span></label>\r\n                            <select class=\"col-sm-12 col-lg-4\" \r\n                            class=\"form-control\" id=\"roleType\" name=\"roleType\" [disabled] = \"isConfirmEnabled || isModifyEnabled\"\r\n                            [(ngModel)] =\"createUser.serviceData.roleType\" #roleType=\"ngModel\" (change) = \"onSelectingRoles()\"\r\n                            >\r\n                            <option selected value=\"\">User Role*</option>\r\n                            <option *ngFor = \"let roles of userRoles\" [value]=roles.role>{{roles.desc}}</option>\r\n                        </select>                                                      \r\n                        </div>\r\n                        <div *ngIf=\"isUserRoleValid\" class=\"alert text-danger\">\r\n                            <div>\r\n                                Please select the User Role.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-5 col-form-label\">Category Code<span class=\"text-danger\">*</span></label>\r\n                            <select  class=\"form-control\" id=\"categoryCode\" name=\"categoryCode\" \r\n                            [disabled] = \"isCategoryRoleSelected || isConfirmEnabled\" [(ngModel)] =\"createUser.serviceData.categoryCode\" \r\n                            #categoryCodee=\"ngModel\" (change) = \"onSelectCategoryCode()\">\r\n                                <option selected value=\"\">Category Code*</option>\r\n                                <option *ngFor = \"let categoryCodeLst of categoryList\" [value]=categoryCodeLst.categoryCode>{{categoryCodeLst.categoryName}}</option>\r\n                            </select>                                                      \r\n                        </div>\r\n                        <div *ngIf=\"isCategoryValid\" class=\"alert text-danger\">\r\n                            <div>\r\n                                Please select the Category Code.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-5 col-form-label\">Group Code<span class=\"text-danger\">*</span></label>\r\n                            <select  class=\"form-control\" id=\"groupCode\" name=\"groupCode\" \r\n                            [disabled] = \"isCategoryCodeSelected || isConfirmEnabled\" [(ngModel)] =\"createUser.serviceData.groupCode\" \r\n                            #groupCode=\"ngModel\" (change) = \"onSelectingGroupCode()\">\r\n                                <option selected value=\"\">Group Code*</option>\r\n                                <option *ngFor = \"let groupCodeLst of groupList\" [value]=groupCodeLst.groupCode>{{groupCodeLst.groupName}}</option>\r\n                            </select>                                                      \r\n                        </div>\r\n                        <div *ngIf=\"isGroupValid\" class=\"alert text-danger\">\r\n                            <div>\r\n                                Please select the Group Code.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\" *ngIf=\"isCreateButtonEnabled\">                \r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">Cancel</button>                        \r\n                    </div>                      \r\n                    <div class=\"col-xl-1 col-md-2 col-sm-12\" *ngIf=\"!isConfirmEnabled\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"onSubmit()\">Submit</button>\r\n                    </div>\r\n                    <div class=\"col-xl-1 col-md-2 col-sm-12\" *ngIf=\"isConfirmEnabled\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"onConfirm()\">Confirm</button>\r\n                    </div>                         \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row justify-content-center\" *ngIf = \"isRecordConfirmed\">\r\n    <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">{{header}}</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"col-xl-12 col-sm-12\">\r\n                    <div class=\"form-group row\" [innerHTML]=\"confirmMessage\"></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">OK</button>                        \r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CreateUserComponent } from './create-user.component';\r\n\r\nconst routes: Routes = [{ path: '', component: CreateUserComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CreateUserRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { UAMService } from '../user-access-mgmt.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.scss']\r\n})\r\nexport class CreateUserComponent implements OnInit {\r\n  userRoles: any; \r\n  currentUserRole: String = \"\";\r\n  config: typeof CONFIG = CONFIG;\r\n  isCategoryRoleSelected: boolean = true;\r\n  isCategoryCodeSelected: boolean = true;  \r\n  isCreateButtonEnabled: boolean = false;\r\n  isConfirmEnabled: boolean = false;\r\n  isEmailValid: boolean = false;\r\n  isFirstNameValid: boolean = false;\r\n  isLastNameValid: boolean = false;\r\n  isMobileNoValid: boolean = false;\r\n  isUserRoleValid: boolean = false;\r\n  isCategoryValid: boolean = false;\r\n  isGroupValid: boolean = false;\r\n  isAddUser: boolean = true;\r\n  isRecordConfirmed: boolean = false;\r\n  isModifyEnabled: boolean = false;\r\n\r\n  confirmMessage: String = \"\";\r\n  routerLink: String = \"\";\r\n  header: String = \"\";\r\n\r\n  categoryList: any = [];\r\n  groupList: any = [];\r\n  searchData: any;\r\n\r\n  searchUser = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    mobile: \"\",\r\n    emailId: \"\"\r\n  };\r\n\r\n  createUser = {\r\n    serviceData :{\r\n      firstName : \"\"\r\n      ,middleName: \"\"\r\n      ,lastName: \"\"\r\n      ,address1: \"\"\r\n      ,address2: \"\"\r\n      ,city: \"\"\r\n      ,state: \"\"\r\n      ,country: \"\"\r\n      ,pin: \"\"\r\n      ,phone: \"\"\r\n      ,mobile: \"\"\r\n      ,emailID: \"\"\r\n      ,idType: \"\"\r\n      ,idNo: \"\"\r\n      ,userId: \"\"\r\n      ,roleType: \"\"\r\n      ,categoryCode: \"\"\r\n      ,groupCode: \"\" \r\n      ,branchCode: \"\"\r\n      ,systemId: \"\"\r\n      ,loginMaster: [\r\n        {\r\n          loginId : \"\"\r\n        },\r\n        {\r\n          loginId : \"\"\r\n        }\r\n      ]\r\n      ,pinMaster: {\r\n        password: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  totalRecords = 0;\r\n  maxPageSize = 5;\r\n  searchBy = \"\";\r\n  searchTerm = \"\";\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n  sortOrder = \"asc\";\r\n  isSearch = false;\r\n\r\n  searchByOptions: any = [\r\n    {\r\n      id:\"firstName\",\r\n      value:\"First Name\"\r\n    },\r\n    {\r\n      id:\"lastName\",\r\n      value:\"Last Name\"\r\n    },\r\n    {\r\n      id:\"mobile\",\r\n      value:\"Mobile\"\r\n    },\r\n    {\r\n      id:\"emailId\",\r\n      value:\"Email\"\r\n    },\r\n  ]\r\n\r\n  constructor(\r\n    public uamService: UAMService,\r\n    public toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(queryParams => {\r\n      let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n      this.userRoles = this.config.userRoles;\r\n      if (ibssApp) {\r\n        ibssApp = JSON.parse(ibssApp);\r\n      }\r\n      this.routerLink = queryParams['Id'];\r\n      if(this.routerLink == \"add\"){\r\n        this.isAddUser = true;\r\n        this.header = \"Create User\";\r\n      }else{\r\n        this.isAddUser = false;\r\n        this.header = \"Modify User\";\r\n      }\r\n  \r\n      this.currentUserRole = ibssApp.token.roleType;\r\n      this.buildRoles(this.config.userRoles)    \r\n    }); \r\n  }\r\n\r\n  buildRoles(roles: any){\r\n    roles.rolesManager.forEach((role: any) => {\r\n      if(this.currentUserRole === role.managerRole){\r\n        this.userRoles = role.rolesManaging;\r\n      }  \r\n    });\r\n  }\r\n\r\n  onSelectingRoles(){\r\n    this.isUserRoleValid = false;\r\n    this.categoryList = [];\r\n    this.isCategoryRoleSelected = true;\r\n\r\n    if(this.createUser.serviceData.roleType.length == 0){\r\n      this.isUserRoleValid = true;\r\n      return;\r\n    }    \r\n    this.fetchCategories();\r\n  }\r\n\r\n  fetchCategories(){\r\n    this.config.toggleLoader(true);\r\n    this.uamService.fetchCategories(this.createUser.serviceData.roleType)\r\n    .subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.categoryList = res.serviceData;\r\n        this.isCategoryRoleSelected = false; \r\n        this.config.toggleLoader(false);\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                  this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }        \r\n        this.config.toggleLoader(false);      \r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      this.config.toggleLoader(false);\r\n    });\r\n  }\r\n\r\n  onSelectCategoryCode(){\r\n\r\n    this.createUser.serviceData.groupCode = \"\";\r\n    this.groupList = [];\r\n    this.isCategoryCodeSelected = true;\r\n\r\n    if(this.createUser.serviceData.categoryCode.length == 0){\r\n      this.isCategoryValid = true;\r\n      return;\r\n    }\r\n    this.fetchGroups();    \r\n  }\r\n\r\n  fetchGroups(){\r\n    this.config.toggleLoader(true);\r\n      this.uamService.fetchGroups(this.createUser.serviceData.categoryCode, this.createUser.serviceData.roleType)\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        if(res.error && res.error.responseCode == 0){\r\n          this.groupList = res.serviceData;\r\n          this.isCategoryCodeSelected = false;          \r\n          this.config.toggleLoader(false);\r\n        } else {\r\n          if (res.error) {\r\n              if (res.error.businessValidation.length > 0) {\r\n                  for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                    this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                  }\r\n              }\r\n              if (res.error.dataValidation.length > 0) {\r\n                  for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                    this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                  }\r\n              }\r\n          } else if (res.responseCode == -1) {\r\n              this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n          }        \r\n          this.config.toggleLoader(false);  \r\n        }\r\n      }, (err: any) => {\r\n        this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        this.config.toggleLoader(false);\r\n      });\r\n  }\r\n\r\n  onSelectingGroupCode(){\r\n    this.isCreateButtonEnabled = false;\r\n\r\n    if(this.createUser.serviceData.groupCode.length == 0){\r\n      this.isGroupValid = true;\r\n      return;\r\n    }\r\n\r\n    this.isCreateButtonEnabled = true;\r\n  }\r\n  \r\n  onSubmit(){\r\n    this.setDefault();\r\n    if(this.createUser.serviceData.firstName.length == 0){\r\n      this.isFirstNameValid = true;      \r\n      return;\r\n    }\r\n\r\n    if(this.createUser.serviceData.lastName.length ==0){\r\n      this.isLastNameValid = true;\r\n      return;\r\n    }\r\n\r\n    if(this.createUser.serviceData.mobile.length ==0){\r\n      this.isMobileNoValid = true;\r\n      return;\r\n    }\r\n\r\n    if(!this.checkEmail(this.createUser.serviceData.emailID) || this.createUser.serviceData.emailID.length == 0){\r\n      this.isEmailValid = true;\r\n      return;\r\n    } \r\n\r\n    if(this.createUser.serviceData.roleType.length == 0){\r\n      this.isUserRoleValid = true;\r\n      return;\r\n    }\r\n\r\n    if(this.createUser.serviceData.categoryCode.length == 0){\r\n      this.isCategoryValid = true;\r\n      return;\r\n    }\r\n\r\n    if(this.createUser.serviceData.groupCode.length == 0){\r\n      this.isGroupValid = true;\r\n      return;\r\n    }\r\n    \r\n    if(!this.isModifyEnabled){\r\n      this.createUser.serviceData.loginMaster[0].loginId = this.createUser.serviceData.emailID;\r\n      this.createUser.serviceData.loginMaster[1].loginId = this.createUser.serviceData.mobile;      \r\n    }\r\n\r\n    this.isConfirmEnabled = true;\r\n  }\r\n  onConfirm(){\r\n    if(this.createUser.serviceData.mobile.length ==0){\r\n      this.isMobileNoValid = true;\r\n      return;\r\n    }\r\n\r\n    if(!this.checkEmail(this.createUser.serviceData.emailID) || this.createUser.serviceData.emailID.length == 0){\r\n      this.isEmailValid = true;\r\n      return;\r\n    } \r\n\r\n    this.config.toggleLoader(true);\r\n    if(!this.isModifyEnabled){\r\n      this.createUser.serviceData.mobile = \"+91-\" + this.createUser.serviceData.mobile;    \r\n    }\r\n    this.uamService.createUser(this.createUser)\r\n    .subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.isRecordConfirmed = true;\r\n        if(this.isAddUser && !this.isModifyEnabled){\r\n          this.confirmMessage = \"User is Created successfully and the temporary password for the created user is <b>\" + res.serviceData.pinMaster.password + \"</b>\";\r\n        }else{\r\n          this.confirmMessage = \"User is Modified Successfully.\";\r\n        }\r\n        this.config.toggleLoader(false);\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                  this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }        \r\n        this.config.toggleLoader(false);  \r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      this.config.toggleLoader(false);\r\n    });\r\n  }\r\n  keyPressAlphabetsWithSpace(event: any) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n\r\n    if (/^[a-zA-Z ]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  keyPressNumeric(event: any) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n\r\n    if (/^[0-9]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkEmail(value:String) {\r\n    return this.config.regEx.email.test(value.toLowerCase());\r\n  };\r\n\r\n  setDefault(){\r\n    this.isEmailValid = false;\r\n    this.isFirstNameValid = false;\r\n    this.isLastNameValid = false;\r\n    this.isMobileNoValid = false;\r\n    this.isUserRoleValid = false;\r\n    this.isCategoryValid = false;\r\n    this.isGroupValid = false;\r\n  }\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;    \r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n         this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n \r\n  \r\n  onSearch(){\r\n    this.searchData =[];\r\n    this.currentPage = 1;\r\n    this.fetchUsers();\r\n  }\r\n  \r\n  pageChanged(event: PageChangedEvent): void {\r\n    this.currentPage = event.page;\r\n    this.fetchUsers();\r\n  }\r\n  \r\n  fetchUsers(){\r\n    this.config.toggleLoader(true);\r\n    const extendedUrl = `${this.searchBy}/${this.searchTerm}/${(this.currentPage-1)}/${this.itemsPerPage}/${this.sortOrder}`;\r\n    this.uamService.fetchUsers(extendedUrl)\r\n    .subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.searchData = res.serviceData;\r\n        this.totalRecords = res.totalPages > 1 ? res.totalPages * this.itemsPerPage : res.serviceData.length;\r\n        this.isSearch = true;\r\n        this.config.toggleLoader(false);        \r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                  this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }        \r\n        this.config.toggleLoader(false);  \r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      this.config.toggleLoader(false);\r\n    });\r\n  }\r\n  \r\n  async onEditOfSearchResult(index: any){\r\n    this.createUser.serviceData = this.searchData[index];\r\n    this.isModifyEnabled = true;\r\n    this.fetchCategories();\r\n    this.fetchGroups();    \r\n    this.isAddUser = true;\r\n    this.isCreateButtonEnabled = true\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CreateUserRoutingModule } from './create-user-routing.module';\r\nimport { CreateUserComponent } from './create-user.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UAMService } from '../user-access-mgmt.service';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateUserComponent\r\n  ],\r\n  imports: [\r\n\r\n    CommonModule,\r\n    CreateUserRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    UAMService\r\n  ]\r\n})\r\nexport class CreateUserModule { }\r\n"],"sourceRoot":"webpack:///"}