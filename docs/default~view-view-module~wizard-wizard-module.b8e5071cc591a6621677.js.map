{"version":3,"sources":["./src/app/directives/margintop.directive.ts","./src/app/layouts/common/introduction/introduction1/introduction1.component.html","./src/app/layouts/common/introduction/introduction1/introduction1.component.ts","./src/app/layouts/common/introduction/introduction2/introduction2.component.html","./src/app/layouts/common/introduction/introduction2/introduction2.component.ts","./src/app/pipes/safe.pipe.ts","./src/app/layouts/common/introduction/introduction3/introduction3.component.html","./src/app/layouts/common/introduction/introduction3/introduction3.component.ts","./src/app/layouts/common/introduction/introduction4/introduction4.component.html","./src/app/layouts/common/introduction/introduction4/introduction4.component.ts","./src/app/layouts/common/introduction/introduction.component.html","./src/app/layouts/common/introduction/introduction.component.ts","./src/app/wizard/edit/edit-text/edit-text.component.html","./src/app/wizard/edit/edit-text/edit-text.component.ts","./src/app/layouts/common/about/about1/about1.component.html","./src/app/layouts/common/about/about1/about1.component.ts","./src/app/layouts/common/about/about2/about2.component.html","./src/app/layouts/common/about/about2/about2.component.ts","./src/app/layouts/common/about/about4/about4.component.ts","./src/app/layouts/common/about/about4/about4.component.html","./src/app/layouts/common/about/about.component.html","./src/app/layouts/common/about/about.component.ts","./src/app/layouts/common/gallery/gallery1/gallery1.component.html","./src/app/layouts/common/gallery/gallery1/gallery1.component.ts","./src/app/layouts/common/gallery/gallery2/gallery2.component.html","./src/app/layouts/common/gallery/gallery2/gallery2.component.ts","./src/app/layouts/common/gallery/gallery.component.html","./src/app/layouts/common/gallery/gallery.component.ts","./src/app/layouts/common/contact/contact1/contact1.component.html","./src/app/layouts/common/contact/contact1/contact1.component.ts","./src/app/layouts/common/contact/contact2/contact2.component.html","./src/app/layouts/common/contact/contact2/contact2.component.ts","./src/app/layouts/common/contact/contact.component.html","./src/app/layouts/common/contact/contact.component.ts","./src/app/layouts/common/peoples/peoples1/peoples1.component.html","./src/app/layouts/common/peoples/peoples1/peoples1.component.ts","./src/app/layouts/common/peoples/peoples2/peoples2.component.html","./src/app/layouts/common/peoples/peoples2/peoples2.component.ts","./src/app/layouts/common/peoples/peoples.component.html","./src/app/layouts/common/peoples/peoples.component.ts","./src/app/layouts/common/banner/banner1/banner1.component.html","./src/app/layouts/common/banner/banner1/banner1.component.ts","./src/app/layouts/common/banner/banner.component.html","./src/app/layouts/common/banner/banner.component.ts","./src/app/layouts/common/videos/youtube-videos/youtube-videos.component.html","./src/app/layouts/common/videos/youtube-videos/youtube-videos.component.ts","./src/app/layouts/common/services/service1/service1.component.html","./src/app/layouts/common/services/service1/service1.component.ts","./src/app/layouts/common/services/service2/service2.component.html","./src/app/layouts/common/services/service2/service2.component.ts","./src/app/layouts/common/services/service.component.html","./src/app/layouts/common/services/service.component.ts","./src/app/layouts/web/templates-container/templates-container.component.html","./src/app/layouts/web/templates-container/templates-container.component.ts","./src/app/services/style.service.ts","./src/app/wizard/edit/edit-text/edit-text.module.ts","./src/app/layouts/common/footer/footer1/footer1.component.html","./src/app/layouts/common/footer/footer1/footer1.component.ts","./src/app/layouts/common/footer/footer2/footer2.component.ts","./src/app/layouts/common/footer/footer2/footer2.component.html","./src/app/layouts/common/footer/footer3/footer3.component.html","./src/app/layouts/common/footer/footer3/footer3.component.ts","./src/app/layouts/common/footer/footer.component.html","./src/app/layouts/common/footer/footer.component.ts","./src/app/layouts/common/headers/header1/header1.component.html","./src/app/layouts/common/headers/header1/header1.component.ts","./src/app/layouts/common/headers/header2/header2.component.html","./src/app/layouts/common/headers/header2/header2.component.ts","./src/app/layouts/common/headers/header3/header3.component.html","./src/app/layouts/common/headers/header3/header3.component.ts","./src/app/layouts/common/headers/header.component.html","./src/app/layouts/common/headers/header.component.ts","./node_modules/@angular/youtube-player/__ivy_ngcc__/fesm2015/youtube-player.js","./src/app/layouts/web/layout/layout.module.ts","./src/app/pipes/sanitiize.pipe.ts","./node_modules/ng2-animate-on-scroll/__ivy_ngcc__/fesm2015/ng2-animate-on-scroll.js","./src/app/layouts/web/layout/layout.component.ts","./src/app/layouts/web/layout/layout.component.html"],"names":["IBSSMarginTop","elementRef","ibssMarginTop","config","headerEle","document","getElementById","setTimeout","scrollHeight","height","this","nativeElement","style","marginTop","getElementsByTagName","scrollPaddingTop","Introduction1Component","showEdit","isDummy","isEdit","introContent","isView","intro1Items","console","log","JSON","parse","stringify","Introduction2Component","content","SafePipe","sanitizer","url","bypassSecurityTrustResourceUrl","Introduction3Component","_lightbox","isValidDOB","bio","dob","isValid","image","open","src","viewImage","Introduction4Component","IntroductionComponent","ws","ngZone","onNav","onAction","introComponents","id","title","customOptions","loop","mouseDrag","touchDrag","pullDrag","dots","navSpeed","navText","responsive","0","items","400","740","940","nav","editItems","editSlide","selected","hasCaption","captions","heading","inputPayload","setEditData","temp","run","push","length","toString","onSelectSlide","index","$","modal","d","Number","event","target","files","file","reader","FileReader","onload","e","result","readAsDataURL","splice","emit","component","template","modifyIndex","action","EditTextComponent","focusOut","editMode","data","About1Component","isNew","aboutContent","field","onFocusOut","About2Component","lat","lng","date","moment","format","time","About4Component","AboutComponent","about1Content","editItem","feature","icon","topfeatures","Gallery1Component","galleryContent","selectedGroup","selectedImage","Gallery2Component","GalleryComponent","toastr","_lightboxConfig","upload","images","imageCaption","group","showZoom","showRotate","centerVertically","fitImageInViewPort","gallery1Content","trim","forEach","tempimage","toLowerCase","gIndx","groupsTitle","indexOf","groups","count","msg","error","i","Contact1Component","profileName","contactContent","Contact2Component","http","canSend","_saveUrl","getBaseURL","RESOURCES","validateFields","fields","ibssApp","localStorage","getItem","headers","append","post","subscribe","res","responseCode","success","resetFields","businessValidation","errorDesc","dataValidation","valid","validationMsg","value","mandatoryFields","emptyFields","canSave","required","undefined","type","regEx","email","test","parseInt","onSendMessage","ContactComponent","contact1Content","Peoples1Component","peoples1Content","Peoples2Component","peoples2Content","createGroups","peoples","collection","Array","from","Math","ceil","_","slice","PeoplesComponent","Banner1Component","isValidDate","formattedDate","page","replace","BannerComponent","banner1Items","YoutubeVideosComponent","videoId","youtubeUrl","videoSrc","Service1Component","Service2Component","ServiceComponent","service1Content","TemplatesContainerComponent","cdref","isLoading","onClick","templateRefs","headerComponent","introComponent","aboutComponent","galleryComponent","contactComponent","footerComponent","peoplesComponent","bannerComponent","videoComponent","serviceComponent","detectChanges","elementId","evt","StyleService","_headElement","_cssStyleSheet","styleSheets","headElement","find","s","disabled","href","startsWith","window","location","origin","media","mediaText","createCssStyleSheet","selectorText","styleName","rule","getStyleRule","styles","Object","keys","styleSheetElement","createElement","appendChild","sheet","cssStyleSheet","rules","cssRules","r","CSSStyleRule","insertRule","EditTextModule","Footer1Component","footerContent","Footer2Component","copyrightText","Footer3Component","FooterComponent","footer1Content","links","font","link","Header1Component","editHeader","headerContent","pages","map","indx","hasSupPages","subPages","Header2Component","marriageDate","hasSubPages","onMenuToggle","isMenuOpen","Header3Component","HeaderComponent","styleService","header1Content","hNum","class","setStyle","name","logoImage","YouTubePlayerModule","ɵmod","ɵinj","factory","t","LayoutModule","forRoot","apiKey","libraries","SanitizePipe","html","bypassSecurityTrustHtml","ScrollService","scrollSub","resizeSub","manageScrollPos","scrollObs","resizeObs","pos","pageYOffset","unsubscribe","ɵfac","ɵprov","token","AnimateOnScrollDirective","renderer","scroll","offset","animationName","isVisible","useScroll","threshold","IntersectionObserver","entries","entry","isIntersecting","addAnimationClass","root","rootMargin","observe","manageVisibility","getWinHeight","getOffsetTop","offsetTop","winHeight","setClass","classes","c","split","addClass","innerHeight","getBoundingClientRect","viewportTop","top","clientTop","ɵdir","selectors","inputs","AnimateOnScrollModule","ngModule","providers","imports","WebLayoutComponent","viewportScroller","titleService","metaService","updateFontFamily","scrollToAnchor","fonts","fontUri","substring","fId","setAttribute","head","selector","ele","setTitle","initTags","join","property","siteTag","updateTag","contents","initContents","t1","t2","t3","toUpperCase"],"mappings":"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","file":"default~view-view-module~wizard-wizard-module.b8e5071cc591a6621677.js","sourcesContent":["import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\nimport { CONFIG } from '../config';\r\n\r\n@Directive({\r\n  selector: '[ibssMarginTop]',\r\n})\r\nexport class IBSSMarginTop implements OnChanges {\r\n  \r\n  @Input() ibssMarginTop = -1;\r\n  config: typeof CONFIG = CONFIG;\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnChanges(): void {\r\n    const headerEle = document.getElementById(\"ibss-common-header\");\r\n   setTimeout(()=>{\r\n      if (headerEle && headerEle.scrollHeight > 0 ) {\r\n        const height = (headerEle.scrollHeight) +\"px\";\r\n        if (this.ibssMarginTop === 1 && this.elementRef.nativeElement.style.marginTop != height) {\r\n            // console.log(\"marginTop\", this.elementRef.nativeElement.style.marginTop);\r\n            this.elementRef.nativeElement.style.marginTop = height;\r\n            const HTMLTag = document.getElementsByTagName(\"html\") as any;\r\n            HTMLTag[0].style.scrollPaddingTop = height;\r\n        }\r\n      }\r\n    }, 500);\r\n  }\r\n}","<div class=\"ibss-common-introduction1\" id=\"Home\">\r\n  <div class=\"main-banner header-text\" id=\"top\">\r\n    <div id=\"carouselCaptions_{{index}}\" class=\"carousel slide\" data-ride=\"carousel\">\r\n      <!-- <ol class=\"carousel-indicators\">\r\n        <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"0\" class=\"active\"></li>\r\n        <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"1\"></li>\r\n        <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"2\"></li>\r\n      </ol> -->\r\n      <div class=\"carousel-inner\">\r\n        <div class=\"carousel-item\" *ngFor=\"let item of intro1Items?.content;let i=index\" [ngClass]=\"{'active': i===0}\">\r\n          <img [src]=\"item.image\" class=\"d-block w-100\" alt=\"\">\r\n          <div class=\"carousel-caption d-none d-md-block\" *ngIf=\"item?.hasCaption\">\r\n            <h5>{{item?.captions?.heading}}</h5>\r\n            <div [innerHTML]=\"item?.captions?.content | ibssSanitize\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <a class=\"carousel-control-prev\" *ngIf=\"intro1Items?.content?.length>0\" href=\"#carouselCaptions_{{index}}\" role=\"button\" data-slide=\"prev\">\r\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"sr-only\">Previous</span>\r\n      </a>\r\n      <a class=\"carousel-control-next\" *ngIf=\"intro1Items?.content?.length>0\" href=\"#carouselCaptions_{{index}}\" role=\"button\" data-slide=\"next\">\r\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"sr-only\">Next</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n  <!-- <div class=\"scroll-down scroll-to-section\" *ngIf=\"isEdit\"><a href=\"javascript:void(0)\" (click)=\"OpenEditModal()\"><i class=\"fas fa-edit\" aria-hidden=\"true\"></i>\r\n  </a></div> -->\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'ibss-common-introduction1',\r\n  templateUrl: './introduction1.component.html',\r\n  styleUrls: ['./introduction1.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class Introduction1Component implements OnInit, OnChanges  {\r\n  showEdit = false;\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() introContent: boolean = false;\r\n  @Input() index: any;\r\n  @Input() isView: boolean = false;\r\n  intro1Items: any = [];\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  ngOnChanges() {\r\n    console.log('this.introContent', this.introContent);\r\n    this.intro1Items = JSON.parse(JSON.stringify(this.introContent));\r\n  }\r\n  \r\n}\r\n","\r\n<div class=\"ibss-common-introduction2 ibss-common-bg\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"   [style.color]=\"content?.colors?.text\">\r\n  <div class=\"ww-section\" id=\"couple\">\r\n      <div class=\"container\">\r\n        <h2 [style.color]=\"content?.colors?.title\" class=\"h1 text-center pb-3 description\" data-aos=\"zoom-in-down\" data-aos-duration=\"1000\">{{content?.title}}</h2>\r\n        <div class=\"row text-center\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"mt-3\"><img class=\"img-fluid w-75\" [src]=\"content?.groom?.image\" alt=\"Groom\" data-aos=\"flip-left\" data-aos-duration=\"1000\"/>\r\n              <h3 class=\"h2 description pt-3\" [style.color]=\"content?.colors?.name\" [innerHTML]=\"content?.groom?.name | ibssSanitize\"></h3>\r\n              <div class=\"ww-social-links\" >\r\n                <a class=\"btn btn-link\" [style.color]=\"content?.colors?.icon\" *ngFor=\"let link of content?.groom?.links\" [hidden]=\"(link?.link=='')\" [href]=\"link.link\"><i [class]=\"link.font\" aria-hidden=\"true\"></i></a>\r\n              </div>\r\n              <div class=\"pt-3 text-left\" [style.color]=\"content?.colors?.text\" [innerHTML]=\"content?.groom?.about | ibssSanitize\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"mt-3\"><img class=\"img-fluid w-75\" [src]=\"content?.bride?.image\" alt=\"Bride\" data-aos=\"flip-right\" data-aos-duration=\"1000\"/>\r\n              <h3 class=\"h2 description pt-3\" [style.color]=\"content?.colors?.name\" [innerHTML]=\"content?.bride?.name | ibssSanitize\"></h3>\r\n              <div class=\"ww-social-links\" >\r\n                <a class=\"btn btn-link\" [style.color]=\"content?.colors?.icon\" *ngFor=\"let link of content?.bride?.links\" [hidden]=\"(link?.link=='')\" [href]=\"link.link\"><i [class]=\"link.font\" aria-hidden=\"true\"></i></a>\r\n              </div>\r\n              <div class=\"pt-3 text-left\" [style.color]=\"content?.colors?.text\" [innerHTML]=\"content?.bride?.about | ibssSanitize\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>","import { Component, Input, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-common-introduction2',\r\n  templateUrl: './introduction2.component.html',\r\n  styleUrls: ['./introduction2.component.scss']\r\n})\r\nexport class Introduction2Component implements OnChanges {\r\n  showEdit = false;\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() introContent: boolean = false;\r\n  @Input() index: any;\r\n  @Input() isView: boolean = false;\r\n  content: any = [];\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n    console.log('this.introContent', this.introContent);\r\n    this.content = JSON.parse(JSON.stringify(this.introContent));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safe' })\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  transform(url:string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n} ","<div class=\"ibss-common-introduction3 ibss-common-bg\"\r\n  [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"\r\n  [style.color]=\"content?.colors?.text\">\r\n  <div class=\"ww-section\" id=\"couple\">\r\n    <div class=\"cover-image-view\" (click)=\"viewImage(content?.backgroundImage)\"></div>\r\n    <h2 [style.color]=\"content?.colors?.title\" class=\"h1 text-center pb-3 title\" data-aos=\"zoom-in-down\"\r\n      data-aos-duration=\"1000\">{{content?.title}}</h2>\r\n    <div class=\"container-fluid rounded\" [ngStyle]=\"{'background-image':  (content?.cardBgImage ? 'url(' + content?.cardBgImage + ')': ''), 'background-color': content?.colors?.cardBgColor}\">\r\n      <div class=\"text-center profile-img\">\r\n        <img role=\"button\" [src]=\"content?.bio?.image | safe\" class=\"rounded\" (click)=\"viewImage(content?.bio?.image)\">\r\n      </div>\r\n      <div class=\"row bio-contents\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"mt-1 text-center p-3\">\r\n            <h3 class=\"h2\" [style.color]=\"content?.colors?.name\" [innerHTML]=\"content?.bio?.fullName\"></h3>\r\n            <div class=\"row pt-3\">\r\n              <div class=\"col\" [style.color]=\"content?.colors?.text\" *ngIf=\"content?.bio?.email\">\r\n                {{content?.bio?.email}}</div>\r\n              <div class=\"col\" [style.color]=\"content?.colors?.text\" *ngIf=\"isValidDOB\"> {{ content?.bio?.dob |\r\n                date: 'dd/MM/YYYY'}}</div>\r\n            </div>\r\n            <div class=\"pt-3\" [style.color]=\"content?.colors?.text\" [innerHTML]=\"content?.bio?.about | ibssSanitize\">\r\n            </div>\r\n            <div class=\"ww-social-links\">\r\n              <a class=\"btn btn-link\" [style.color]=\"content?.colors?.icon\"\r\n                *ngFor=\"let link of content?.bio?.socialLinks\" [hidden]=\"(link?.link=='')\" [href]=\"link.link\" target=\"_blank\"><i\r\n                  [class]=\"link.font\" aria-hidden=\"true\"></i></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, OnChanges } from '@angular/core';\r\nimport * as moment from 'moment-timezone';\r\nimport { Lightbox } from 'ngx-lightbox';\r\n@Component({\r\n  selector: 'ibss-common-introduction3',\r\n  templateUrl: './introduction3.component.html',\r\n  styleUrls: ['./introduction3.component.scss']\r\n})\r\nexport class Introduction3Component implements OnChanges {\r\n  showEdit = false;\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() introContent: boolean = false;\r\n  @Input() index: any;\r\n  @Input() isView: boolean = false;\r\n  isValidDOB: any = false;\r\n  content: any = [];\r\n  constructor(\r\n    private _lightbox: Lightbox\r\n  ) { }\r\n\r\n  ngOnChanges() {\r\n    console.log('this.introContent', this.introContent);\r\n    this.content = JSON.parse(JSON.stringify(this.introContent));\r\n    this.isValidDOB = moment(this.content.bio.dob).isValid();\r\n\r\n  }\r\n\r\n  viewImage(image: any) {\r\n    const album: any = [\r\n      {\r\n        src: image\r\n      }\r\n    ]\r\n    this._lightbox.open(album, 0)\r\n  }\r\n}\r\n","<div class=\"ibss-common-introduction4 ibss-common-bg\"\n  [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"\n  [style.color]=\"content?.colors?.text\">\n  <div class=\"vg-page page-about\" id=\"about\">\n    <div class=\"container py-5\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 py-3\">\n          <div class=\"img-place wow fadeInUp\">\n            <img src=\"../../../../../assets/images/web/templates/template8/person.jpg\" alt=\"\">\n          </div>\n        </div>\n        <div class=\"col-lg-6 offset-lg-1 wow fadeInRight\">\n          <h1 class=\"fw-light\" [innerHTML]=\"content?.title | ibssSanitize\"></h1>\n          <h5 class=\"fg-theme mb-3\" [innerHTML]=\"content?.role | ibssSanitize\"></h5>\n          <p [innerHTML]=\"content?.description | ibssSanitize\"></p>\n          <ul class=\"theme-list\" [style] =\"{'--timeline-bgColor':content?.colors?.timelineConnecter}\">\n            <li [style] =\"{'--timeline-liBgColor':content?.colors?.timelineFill,'--timeline-liBorderColor':content?.colors?.timelineBorder}\"><b>From:</b> <span [innerHTML]=\"content?.from | ibssSanitize\"></span></li>\n            <li [style] =\"{'--timeline-liBgColor':content?.colors?.timelineFill,'--timeline-liBorderColor':content?.colors?.timelineBorder}\"><b>Lives In:</b><span [innerHTML]=\"content?.livingIn | ibssSanitize\"></span></li>\n            <li [style] =\"{'--timeline-liBgColor':content?.colors?.timelineFill,'--timeline-liBorderColor':content?.colors?.timelineBorder}\"><b>Age:</b> <span [innerHTML]=\"content?.age | ibssSanitize\"></span></li>\n            <li [style] =\"{'--timeline-liBgColor':content?.colors?.timelineFill,'--timeline-liBorderColor':content?.colors?.timelineBorder}\"><b>Gender:</b> <span [innerHTML]=\"content?.gender | ibssSanitize\"></span></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"container py-5\">\n      <h1 class=\"text-center fw-normal wow fadeIn\" [innerHTML]=\"content?.mySkills?.title | ibssSanitize\"></h1>\n      <div class=\"row py-3\">\n        <div class=\"col-md-6\" *ngFor=\"let type of content?.mySkills?.types\">\n          <div class=\"px-lg-3\">\n            <h4 class=\"wow fadeInUp\" [innerHTML]=\"type?.title | ibssSanitize\"></h4>\n            <div class=\"progress-wrapper wow fadeInUp\" *ngFor=\"let skill of type?.skills\">\n              <span class=\"caption\" [innerHTML]=\"skill?.name | ibssSanitize\"></span>\n              <div class=\"progress\">\n                <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{'width': skill?.proficiency+'%', 'background-color': content?.colors?.barColor}\" aria-valuenow=\"75\" aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">{{skill?.proficiency}}%</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"container pt-5\">\n      <h1 class=\"text-center fw-normal wow fadeIn\" [innerHTML]=\"content?.timelines?.title | ibssSanitize\"></h1>\n      <div class=\"row\">\n        <div class=\"col-md-6 wow fadeInRight\" *ngFor=\"let type of content?.timelines?.types\">\n          <h2 class=\"fw-normal\" [innerHTML]=\"type?.title | ibssSanitize\"></h2>\n          <ul class=\"timeline mt-4 pr-md-5\" [style] =\"{'--timeline-bgColor':content?.colors?.timelineConnecter}\">\n            <li *ngFor=\"let timelineItem of type.items\" [style] =\"{'--timeline-liBgColor':content?.colors?.timelineFill,'--timeline-liBorderColor':content?.colors?.timelineBorder}\">\n              <div class=\"title\" [style.backgroundColor]=\"content?.colors?.timelineHeading\" >{{timelineItem?.start | date:type?.type}}<span *ngIf=\"type?.showEnd == true\"> - {{timelineItem?.end | date:type?.type}}</span></div>\n              <div class=\"details\">\n                <h5 [innerHTML]=\"timelineItem?.title | ibssSanitize\"></h5>\n                <small class=\"fg-theme\" [innerHTML]=\"timelineItem?.subTitle | ibssSanitize\"></small>\n                <p [innerHTML]=\"timelineItem?.description | ibssSanitize\"></p>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnChanges } from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport { Lightbox } from 'ngx-lightbox';\n\n@Component({\n  selector: 'ibss-common-introduction4',\n  templateUrl: './introduction4.component.html',\n  styleUrls: ['./introduction4.component.scss']\n})\nexport class Introduction4Component implements OnChanges {\n  showEdit = false;\n  @Input() isDummy: boolean = true;\n  @Input() isEdit: boolean = false;\n  @Input() introContent: any;\n  @Input() index: any;\n  @Input() isView: boolean = false;\n  content: any = [];\n  constructor(\n    private _lightbox: Lightbox\n  ) { }\n\n  ngOnChanges() {\n    console.log('this.introContent', this.introContent);\n    this.content = JSON.parse(JSON.stringify(this.introContent));\n\n  }\n\n  viewImage(image: any) {\n    const album: any = [\n      {\n        src: image\n      }\n    ]\n    this._lightbox.open(album, 0)\n  }\n}\n","<div class=\"ibss-common-introduction\" id=\"{{menuId}}\" [ibssMarginTop]=\"isEdit ? -1 : index\">\r\n\r\n  <ibss-common-introduction1 *ngIf=\"content.id === 'IBSSCOMMONINTRO1'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n    [introContent]=\"content\" (onNav)=\"onNavigate($event)\" [index]=\"index\"></ibss-common-introduction1>\r\n\r\n  <ibss-common-introduction2 *ngIf=\"content.id === 'IBSSCOMMONINTRO2'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n    [introContent]=\"content\" (onNav)=\"onNavigate($event)\" [index]=\"index\"></ibss-common-introduction2>\r\n\r\n  <ibss-common-introduction3 *ngIf=\"content.id === 'IBSSCOMMONINTRO3'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n    [introContent]=\"content\" (onNav)=\"onNavigate($event)\" [index]=\"index\"></ibss-common-introduction3>\r\n\r\n  <ibss-common-introduction4 *ngIf=\"content.id === 'IBSSCOMMONINTRO4'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n    [introContent]=\"content\" (onNav)=\"onNavigate($event)\" [index]=\"index\"></ibss-common-introduction4>\r\n    \r\n  <div *ngIf=\"!isView\" class=\"edit-selection\">\r\n    <div class=\"buttons\">\r\n      <a type=\"button\" class=\"btn btn-primary\" (click)=\"onEdit()\">\r\n        <span class=\"material-icons-round\"> edit </span>\r\n        <span class=\"btn-edit\">Edit</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, NgZone, OnChanges, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o/lib/models/owl-options.model';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'ibss-common-introduction',\r\n  templateUrl: './introduction.component.html',\r\n  styleUrls: ['./introduction.component.scss']\r\n})\r\nexport class IntroductionComponent implements OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() isView: boolean= false;\r\n  @Input() menuId: any;\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n\r\n  introComponents = [\r\n    {\r\n      id:\"IBSSCOMMONINTRO1\",\r\n      title:\"Intro Layout 1\"\r\n    },\r\n    {\r\n      id:\"IBSSCOMMONINTRO2\",\r\n      title:\"Intro Layout 2\"\r\n    },\r\n    {\r\n      id:\"IBSSCOMMONINTRO3\",\r\n      title:\"Intro Layout 3\"\r\n    }\r\n  ]\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: false,\r\n    touchDrag: false,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      400: {\r\n        items: 2\r\n      },\r\n      740: {\r\n        items: 3\r\n      },\r\n      940: {\r\n        items: 4\r\n      }\r\n    },\r\n    nav: true\r\n  }\r\n\r\n  intro1Items = [];\r\n  editItems:any = [];\r\n  editSlide:any = {\r\n    selected: \"\",\r\n    image: null,\r\n    hasCaption:false,\r\n    captions: {\r\n      heading: \"\",\r\n      content: \"\"\r\n    }\r\n  }\r\n\r\n  content :any;\r\n\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  constructor(private ws: WizardService, private ngZone: NgZone) { }\r\n\r\n  ngOnChanges() {\r\n\r\n    let content = this.config.intro1Items;\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    } \r\n\r\n    this.intro1Items = JSON.parse(JSON.stringify(content));\r\n\r\n    this.setEditData();\r\n  }\r\n\r\n  onCancel() {\r\n    this.setEditData();\r\n  }\r\n\r\n  setEditData() {\r\n    this.editItems = JSON.parse(JSON.stringify(this.intro1Items))\r\n    this.content = JSON.parse(JSON.stringify(this.intro1Items))\r\n  }\r\n  onAddSlide() {\r\n    const temp:any = {\r\n      selected: \"\",\r\n      image: \"../../../../assets/images/web/layout1/slide-01.jpg\",\r\n      hasCaption:true,\r\n      captions: {\r\n        heading: \"Slide Label\",\r\n        content: \"Nulla vitae elit libero, a pharetra augue mollis interdum.\"\r\n      }\r\n    }\r\n    this.ngZone.run(()=>{\r\n      this.editItems.push(temp);\r\n      this.editSlide.selected=(this.editItems.length-1).toString();\r\n      this.onSelectSlide();\r\n    });\r\n\r\n  }\r\n\r\n  OpenEditModal(index:any) {\r\n    $('#editIntroModal_'+index).modal('show');\r\n  }\r\n\r\n  onSelectSlide() {\r\n\r\n    this.editSlide.image = null,\r\n    this.editSlide.hasCaption = false,\r\n    this.editSlide.captions = {\r\n      heading: \"\",\r\n      content: \"\"\r\n    }\r\n\r\n    if (this. editSlide.selected && this. editSlide.selected!= \"\") { \r\n      const d = JSON.parse(JSON.stringify(this.editItems[Number(this.editSlide.selected)]));\r\n      this.editSlide.image = d.image;\r\n      this.editSlide.hasCaption = d.hasCaption;\r\n      this.editSlide.captions = d.captions;\r\n    }\r\n  }\r\n\r\n  readURL(event: any): void {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = e => {\r\n        // this.editItems[Number(this.editSlide.selected)].image = reader.result\r\n        this.editSlide.image = reader.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  onUpdate() {\r\n    this.ngZone.run(()=>{\r\n      if (this.editSlide.selected && this.editSlide.selected!=\"\") {\r\n        this.editItems[Number(this.editSlide.selected)].image = this.editSlide.image;\r\n        this.editItems[Number(this.editSlide.selected)].hasCaption = this.editSlide.hasCaption;\r\n        this.editItems[Number(this.editSlide.selected)].captions = this.editSlide.captions;\r\n      } else {\r\n        this.editItems.push({\r\n          image :this.editSlide.image,\r\n          hasCaption: this.editSlide.hasCaption,\r\n          captions: this.editSlide.captions\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    this.editItems.splice(Number(this.editSlide.selected),1);\r\n    this.editSlide.selected = \"\";\r\n  }\r\n\r\n  onDone() {\r\n    this.intro1Items = JSON.parse(JSON.stringify(this.editItems));\r\n    this.content.content = JSON.parse(JSON.stringify(this.intro1Items))\r\n    this.onAction.emit({index:this.index, component:{ id: \"introComponent\", template:JSON.parse(JSON.stringify(this.content))}});\r\n\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n  onModify(index: any) {\r\n    this.ws.modifyIndex = index;\r\n  }\r\n\r\n  onEdit() {\r\n    const params:any = {\r\n      action:\"edit\",\r\n      component:this.content,\r\n      index:this.index\r\n    }\r\n\r\n    this.onAction.emit(params);\r\n  }\r\n}\r\n","<div *ngIf='!editMode' (click)='editMode=true' class='cell'>{{ data}}</div>\r\n<input *ngIf='editMode' (focusout)=\"onFocusOut()\" [(ngModel)]='data' class='cellInput'\r\n  appAutofocus type='text' (focusout)=\"editMode=false\">\r\n\r\n  <!-- <editor  *ngIf='editMode' [apiKey]=\"config.tinyMCEKey\" [(ngModel)]=\"data\"></editor> -->\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CONFIG } from 'src/app/config';\r\n\r\n@Component({\r\n  selector: 'ibss-edit-text',\r\n  templateUrl: './edit-text.component.html',\r\n  styleUrls: ['./edit-text.component.scss']\r\n})\r\nexport class EditTextComponent implements OnInit {\r\n\r\n  @Input() data: any;\r\n  @Output() focusOut: EventEmitter<any> = new EventEmitter<any>();\r\n  config: typeof CONFIG = CONFIG;\r\n  editMode = false;\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onFocusOut() {\r\n    this.focusOut.emit(this.data);\r\n  }\r\n}\r\n","<div class=\"ibss-common-about1\">\r\n  <section class=\"section px-5 ibss-common-bg\" id=\"about\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"  [style.color]=\"content?.fontColor\">\r\n      <div class=\"container mx-auto\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-md-6 col-xs-12\">\r\n            <div class=\"left-text-content\">\r\n              <div class=\"section-heading\">\r\n                <!-- <h6 [style.color]=\"content?.titleFontColor\">{{ content?.title }}</h6> -->\r\n                <ibss-edit-text [data]='content?.title' (focusOut)='onFocusOut(\"title\",$event)'></ibss-edit-text>\r\n                <h2 [style.color]=\"content?.captionFontColor\">{{ content?.caption }}</h2>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-sm-6\" *ngFor=\"let feature of content?.topfeatures\">\r\n                  <div class=\"service-item\">\r\n                    <!-- <img src=\"../../../../assets/images/web/layout1/service-item-01.png\" alt=\"\"> -->\r\n                    <div class=\"features-icon\">\r\n                      <!-- <i class=\"fa {{feature?.icon}}\" aria-hidden=\"true\"></i> -->\r\n                      <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <h4  [style.color]=\"content?.fontColor\">{{feature?.title}}</h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6 col-md-6 col-xs-12\">\r\n            <div class=\"right-text-content\">\r\n              <p  [style.color]=\"content?.fontColor\" [innerHTML]=\"content?.description | ibssSanitize\"></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-common-about1',\r\n  templateUrl: './about1.component.html',\r\n  styleUrls: ['./about1.component.scss']\r\n})\r\nexport class About1Component implements OnInit, OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isNew: boolean = true;\r\n  @Input() isView: boolean = false;\r\n  @Input() aboutContent: any =  {};\r\n  @Input() index: any;\r\n  @Output() onNav = new EventEmitter();\r\n  content: any;\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n  ngOnChanges() {\r\n    this.content = JSON.parse(JSON.stringify(this.aboutContent));\r\n  }\r\n\r\n  onFocusOut(field:any, content:any) {\r\n    console.log(field, content);\r\n  }\r\n} \r\n","<div class=\"ibss-common-about2\">\r\n    <div class=\"ww-section ibss-common-bg\" id=\"events\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\" >\r\n        <div class=\"container ww-wedding-event\">\r\n          <h2 class=\"h1 text-center pb-3 description\" [style.color]=\"content?.colors?.title\" data-aos=\"zoom-in-down\" data-aos-duration=\"1000\">{{content?.title}}</h2>\r\n          <div class=\"my-3\" *ngFor=\"let event of content?.events\">\r\n            <div class=\"h4\" [style.color]=\"content?.colors?.heading\" [innerHTML]=\"event?.name | ibssSanitize\"></div>\r\n            <ul [style.color]=\"content?.colors?.text\">\r\n              <li class=\"pt-2\" [style.color]=\"content?.colors?.text\" *ngIf=\"event?.date\"><i class=\" far fa-calendar-alt\"></i><span class=\"pl-2\"   >{{getFormattedDate(event.date)}} {{getFormattedTime(event.time)}}</span></li>\r\n              <li class=\"pt-2\" *ngIf=\"event?.location?.trim().length>0\"  [style.color]=\"content?.colors?.text\"><i class=\"fas fa-map-marker-alt\"></i> Location:<div class=\"pt-2\" [style.color]=\"content?.colors?.text\" [innerHTML]=\"event?.location\"></div></li>\r\n            </ul>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 \" *ngIf=\"event?.para1?.length>0\" [innerHTML]=\"event?.para1 | ibssSanitize\"  [style.color]=\"content?.colors?.text\" ></div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-7 col-sm-12\">\r\n                <div [innerHTML]=\"event?.description | ibssSanitize\"  [style.color]=\"content?.colors?.text\" ></div>\r\n              </div>\r\n              <div class=\"col-md-5 col-sm-12\">\r\n                <img class=\"img-fluid w-100\" [src]=\"event?.image\" data-aos=\"fade-down-right\" data-aos-duration=\"1000\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\"  *ngIf=\"event?.para2?.length>0\" [innerHTML]=\"event?.para2 | ibssSanitize\"  [style.color]=\"content?.colors?.text\" ></div>\r\n            </div>\r\n\r\n            <div class=\"row mt-2\" *ngIf=\"event?.showMap && event?.mapConfig\">\r\n              <div class=\"col-md-12\" >\r\n                <agm-map [latitude]=\"event?.mapConfig?.lat\" [longitude]=\"event?.mapConfig?.lng\" [zoom]=\"event?.mapConfig?.zoom\">\r\n                  <agm-marker [latitude]=\"event?.mapConfig?.lat\" [longitude]=\"event?.mapConfig?.lng\" [markerDraggable]=\"false\">\r\n                    <agm-info-window>\r\n                      <strong>{{event?.mapConfig?.label}}</strong>\r\n                      <div [innerHTML]=\"event?.mapConfig?.address | ibssSanitize\"></div>\r\n                    </agm-info-window>\r\n                  </agm-marker>\r\n                </agm-map>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport * as moment from 'moment';\r\n@Component({\r\n  selector: 'ibss-common-about2',\r\n  templateUrl: './about2.component.html',\r\n  styleUrls: ['./about2.component.scss']\r\n})\r\nexport class About2Component implements OnChanges {\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isNew: boolean = true;\r\n  @Input() isView: boolean = false;\r\n  @Input() aboutContent: any =  {};\r\n  @Input() index: any;\r\n  @Output() onNav = new EventEmitter();\r\n\r\n  lat = 51.678418;\r\n  lng = 7.809007;\r\n  content: any;\r\n  constructor() { }\r\n\r\n\r\n  ngOnChanges() {\r\n    this.content = JSON.parse(JSON.stringify(this.aboutContent));\r\n  }\r\n\r\n  getFormattedDate(date:any) {\r\n    return moment(date).format('Do MMMM YYYY');\r\n  }\r\n\r\n  getFormattedTime(time:any) {\r\n    return moment(time).format('hh:mm a')\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'ibss-common-about4',\n  templateUrl: './about4.component.html',\n  styleUrls: ['./about4.component.scss']\n})\nexport class About4Component implements OnInit, OnChanges {\n\n  @Input() isDummy: boolean = true;\n  @Input() isEdit: boolean = false;\n  @Input() isNew: boolean = true;\n  @Input() isView: boolean = false;\n  @Input() aboutContent: any =  {};\n  @Input() index: any;\n  @Output() onNav = new EventEmitter();\n  content: any;\n  constructor() { }\n\n  ngOnInit() { }\n  ngOnChanges() {\n    this.content = JSON.parse(JSON.stringify(this.aboutContent));\n  }\n\n  onFocusOut(field:any, content:any) {\n    console.log(field, content);\n  }\n} \n","<div class=\"ibss-common-about4\">\n  <div class=\"vg-page page-about ibss-common-bg\" id=\"about\">\n    <div class=\"container py-5\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 py-3\">\n          <div class=\"img-place wow fadeInUp\">\n            <img src=\"../../../../../assets/images/web/templates/template8/person.jpg\" alt=\"\">\n          </div>\n        </div>\n        <div class=\"col-lg-6 offset-lg-1 wow fadeInRight\">\n          <h1 class=\"fw-light\">Stephen Doe</h1>\n          <h5 class=\"fg-theme mb-3\">UI/UX & Web Designer</h5>\n          <p class=\"text-muted\">There are many variations of passages of Lorem Ipsum available, but the majority have\n            suffered alteration in some form but the majority have suffered alteration in some</p>\n          <ul class=\"theme-list\">\n            <li><b>From:</b> Texas, US</li>\n            <li><b>Lives In:</b> Texas, US</li>\n            <li><b>Age:</b> 25</li>\n            <li><b>Gender:</b> Male</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"container py-5\">\n      <h1 class=\"text-center fw-normal wow fadeIn\">My Skills</h1>\n      <div class=\"row py-3\">\n        <div class=\"col-md-6\">\n          <div class=\"px-lg-3\">\n            <h4 class=\"wow fadeInUp\">Coding skills</h4>\n            <div class=\"progress-wrapper wow fadeInUp\">\n              <span class=\"caption\">JavaScript</span>\n              <div class=\"progress\">\n                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 86%;\" aria-valuenow=\"75\" aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">86%</div>\n              </div>\n            </div>\n            <div class=\"progress-wrapper wow fadeInUp\">\n              <span class=\"caption\">PHP</span>\n              <div class=\"progress\">\n                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 80%;\" aria-valuenow=\"75\" aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">80%</div>\n              </div>\n            </div>\n            <div class=\"progress-wrapper wow fadeInUp\">\n              <span class=\"caption\">HTML + CSS</span>\n              <div class=\"progress\">\n                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 100%;\" aria-valuenow=\"75\" aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">100%</div>\n              </div>\n            </div>\n            <div class=\"progress-wrapper wow fadeInUp\">\n              <span class=\"caption\">Phyton</span>\n              <div class=\"progress\">\n                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 90%;\" aria-valuenow=\"75\" aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">90%</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"px-lg-3\">\n            <h4 class=\"wow fadeInUp\">Design Skills</h4>\n            <div class=\"progress-wrapper wow fadeInUp\">\n              <span class=\"caption\">UI / UX Design</span>\n              <div class=\"progress\">\n                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 92%;\" aria-valuenow=\"75\" aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">92%</div>\n              </div>\n            </div>\n            <div class=\"progress-wrapper wow fadeInUp\">\n              <span class=\"caption\">Web Design</span>\n              <div class=\"progress\">\n                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 99%;\" aria-valuenow=\"75\" aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">99%</div>\n              </div>\n            </div>\n            <div class=\"progress-wrapper wow fadeInUp\">\n              <span class=\"caption\">Logo Design</span>\n              <div class=\"progress\">\n                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 79%;\" aria-valuenow=\"75\" aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">79%</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"container pt-5\">\n      <div class=\"row\">\n        <div class=\"col-md-6 wow fadeInRight\">\n          <h2 class=\"fw-normal\">Education</h2>\n          <ul class=\"timeline mt-4 pr-md-5\">\n            <li>\n              <div class=\"title\">2010</div>\n              <div class=\"details\">\n                <h5>Specialize of course</h5>\n                <small class=\"fg-theme\">University of Study</small>\n                <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered</p>\n              </div>\n            </li>\n            <li>\n              <div class=\"title\">2009</div>\n              <div class=\"details\">\n                <h5>Specialize of course</h5>\n                <small class=\"fg-theme\">University of Study</small>\n                <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered</p>\n              </div>\n            </li>\n            <li>\n              <div class=\"title\">2008</div>\n              <div class=\"details\">\n                <h5>Specialize of course</h5>\n                <small class=\"fg-theme\">University of Study</small>\n                <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered</p>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div class=\"col-md-6 wow fadeInRight\" data-wow-delay=\"200ms\">\n          <h2 class=\"fw-normal\">Experience</h2>\n          <ul class=\"timeline mt-4 pr-md-5\">\n            <li>\n              <div class=\"title\">2017 - Current</div>\n              <div class=\"details\">\n                <h5>Specialize of course</h5>\n                <small class=\"fg-theme\">University of Study</small>\n                <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered</p>\n              </div>\n            </li>\n            <li>\n              <div class=\"title\">2014</div>\n              <div class=\"details\">\n                <h5>Specialize of course</h5>\n                <small class=\"fg-theme\">University of Study</small>\n                <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered</p>\n              </div>\n            </li>\n            <li>\n              <div class=\"title\">2011</div>\n              <div class=\"details\">\n                <h5>Specialize of course</h5>\n                <small class=\"fg-theme\">University of Study</small>\n                <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered</p>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","  <div class=\"ibss-common-about\" id=\"{{menuId}}\"  [ibssMarginTop]=\"isEdit ? -1 : index\">\r\n\r\n    <ibss-common-about1 *ngIf=\"content.id === 'IBSSCOMMONABOUT1'\" [aboutContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-about1>\r\n    <ibss-common-about2  *ngIf=\"content.id === 'IBSSCOMMONABOUT2'\" [aboutContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-about2>\r\n    <ibss-common-about4  *ngIf=\"content.id === 'IBSSCOMMONABOUT4'\" [aboutContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-about4>\r\n\r\n    <div *ngIf=\"!isView\" class=\"edit-selection\">\r\n      <div class=\"buttons\" >\r\n        <a type=\"button\" class=\"btn btn-primary\" (click)=\"onEdit()\">\r\n          <span class=\"material-icons-round\"> edit </span>\r\n            <span class=\"btn-edit\">Edit</span>\r\n          </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'ibss-common-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnChanges  {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() isView = false;\r\n  @Input() menuId: any;\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  content: any;\r\n  editItem :any;\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  \r\n  constructor(private ws: WizardService) { }\r\n\r\n  ngOnChanges() {\r\n    let content = this.config.about1Content;\r\n    console.log(\"AboutComponent\",content);\r\n    console.log(\"AboutComponent\",this.isEdit);\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    }\r\n    this.content = JSON.parse(JSON.stringify(content));\r\n    this.setEditData();\r\n  \r\n  }\r\n\r\n  onCancel() {\r\n    this.setEditData();\r\n  }\r\n\r\n  setEditData() {\r\n    this.editItem = JSON.parse(JSON.stringify(this.content));\r\n    this.editItem.feature = \"\";\r\n  }\r\n\r\n  onDelete() {\r\n\r\n  }\r\n\r\n  onDone() {\r\n    this.content = JSON.parse(JSON.stringify(this.editItem));\r\n    this.onAction.emit({index:this.index, component:{ id: \"aboutComponent\", template:JSON.parse(JSON.stringify(this.content))}});\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n  onAddFeature() {\r\n\r\n    let temp = {\r\n      icon:\"fa-check-circle\",\r\n      title: JSON.parse(JSON.stringify(this.editItem.feature))\r\n    }\r\n    this.editItem.topfeatures.push(temp);\r\n  }\r\n\r\n\r\n  onDeleteFeature(index: any) {\r\n    this.editItem.topfeatures.splice(index, 1);\r\n  }\r\n\r\n  onModify(index: any) {\r\n    this.ws.modifyIndex = index;\r\n  }\r\n\r\n  OpenEditModal(index: any) {\r\n    $('#editAboutModal_'+index).modal('show');\r\n  }\r\n\r\n  onEdit() {\r\n    const params:any = {\r\n      action:\"edit\",\r\n      component:this.content,\r\n      index:this.index\r\n    }\r\n\r\n    this.onAction.emit(params);\r\n  }\r\n}\r\n","<div class=\"ibss-common-gallery1\">\r\n  <section class=\"section px-5 .ibss-common-bg\" id=\"projects\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"  [style.color]=\"content?.fontColor\">\r\n    <div class=\"container mx-auto\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"section-heading\">\r\n            <h6 [style.color]=\"content?.titleFontColor\"> {{ content?.title }}</h6>\r\n            <h2 [style.color]=\"content?.captionFontColor\">{{ content?.caption }}</h2>\r\n          </div>\r\n          <div class=\"filters\">\r\n            <ul>\r\n              <li [style.color]=\"selectedGroup=='all'? content?.activeColor : content?.fontColor\" (click)=\"selectedGroup='all'\">All</li>\r\n              <li [style.color]=\"selectedGroup==group?.title ? content?.activeColor : content?.fontColor\" *ngFor=\"let group of content?.groups\" (click)=\"selectedGroup = group?.title\">{{ group?.title }} ({{ group?.count }})</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-9\">\r\n          <div class=\"filters-content\">\r\n            <div class=\"row grid\">\r\n              <div *ngFor=\"let image of content?.images; let i = index\" class=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\" [hidden]=\"image?.group != selectedGroup && selectedGroup!='all'\">\r\n                <div class=\"item\">\r\n                  <a href=\"javascript:void(0)\" (click)=\"onViewImage(i, image)\" data-title=\"image?.group\"><img\r\n                      [src]=\"image?.data\" alt=\"image?.group\"></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"ViewGalleryModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\r\n  aria-labelledby=\"ViewGalleryModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"ViewGalleryModalLabel\">{{ selectedImage?.group }}</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body bg-light text-center\">\r\n        <img style=\"width:60%\" [src]=\"selectedImage?.data\" alt=\"selectedImage?.group\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'ibss-common-gallery1',\r\n  templateUrl: './gallery1.component.html',\r\n  styleUrls: ['./gallery1.component.scss']\r\n})\r\nexport class Gallery1Component implements OnInit, OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() galleryContent: any =  {};\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  content: any;\r\n  selectedGroup:any ='all';\r\n  selectedImage:any = null;\r\n  constructor() {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.content = JSON.parse(JSON.stringify(this.galleryContent));\r\n  }\r\n\r\n  onViewImage(index: any, image: any) {\r\n    this.selectedImage = image;\r\n    $('#ViewGalleryModal').modal('show');\r\n  }\r\n}\r\n","<div class=\"ibss-common-gallery2\">\r\n  <div class=\"ww-section ibss-common-bg\"  [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"   id=\"gallery\">\r\n    <div class=\"ww-photo-gallery\">\r\n      <div class=\"container\">\r\n        <h2 class=\"h1 text-center pb-3 ww-title description\" data-aos=\"zoom-in-down\" data-aos-duration=\"1000\" [style.color]=\"content?.colors?.title\">{{content?.title}}\r\n        </h2>\r\n        <div class=\"col-md-12 text-center ww-category-filter mb-4\">\r\n         <div class=\"d-flex justify-content-center mb-2\">\r\n          <a class=\"btn btn-outline-primary ww-filter-button\" [ngStyle]=\"{'background': selectedGroup===''? content?.colors?.text: content?.colors?.textBg,'color': selectedGroup===''? content?.colors?.textBg: content?.colors?.text,'border-color': selectedGroup===''? content?.colors?.textBg: content?.colors?.text  }\" href=\"javascript:void(0)\" data-filter=\"all\"\r\n          (click)=\"selectedGroup=''\" [ngClass]=\"{'active': selectedGroup===''}\">All</a>\r\n        <a class=\"btn btn-outline-primary ww-filter-button\" [ngStyle]=\"{'background': selectedGroup===group? content?.colors?.text: content?.colors?.textBg,'color': selectedGroup===group? content?.colors?.textBg: content?.colors?.text,'border-color': selectedGroup===group? content?.colors?.textBg: content?.colors?.text  }\" href=\"javascript:void(0)\"\r\n          *ngFor=\"let group of content?.groupsTitle\" (click)=\"selectedGroup=group\"\r\n          [ngClass]=\"{'active': selectedGroup===group}\">{{group}}</a>\r\n         </div>\r\n          <div class=\"ww-gallery\" data-aos=\"fade-zoom-in\" data-aos-easing=\"ease-in-back\" data-aos-delay=\"300\"\r\n            data-aos-duration=\"1000\" data-aos-offset=\"0\">\r\n            <div class=\"card-columns\">\r\n              <div class=\"card\" *ngFor=\"let image of content?.images\"\r\n                [hidden]=\"selectedGroup!='' && selectedGroup!=image?.group\">\r\n                <a href=\"javascript:void(0)\" (click)=\"onViewImage(image?.data)\" data-toggle=\"lightbox\"\r\n                  data-gallery=\"ww-gallery\"><img class=\"img-fluid\" [src]=\"image?.data\" alt=\"Gallery Pic 1\" /></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { Lightbox } from 'ngx-lightbox';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'ibss-common-gallery2',\r\n  templateUrl: './gallery2.component.html',\r\n  styleUrls: ['./gallery2.component.scss']\r\n})\r\nexport class Gallery2Component implements OnInit, OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() galleryContent: any =  {};\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  content: any;\r\n  selectedGroup:any ='';\r\n  selectedImage:any = null;\r\n  constructor(\r\n    private _lightbox: Lightbox\r\n  ) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.content = JSON.parse(JSON.stringify(this.galleryContent));\r\n  }\r\n\r\n  onViewImage(image: any) {\r\n    this.selectedImage = image;\r\n    const album:any = [\r\n      {\r\n        src:image\r\n      }\r\n    ]\r\n    this._lightbox.open(album, 0)\r\n  }\r\n}\r\n","<div class=\"ibss-common-gallery\" id=\"{{menuId}}\" [ibssMarginTop]=\"isEdit ? -1 : index\">\r\n\r\n  <ibss-common-gallery1 *ngIf=\"content.id === 'IBSSCOMMONGALLERY1'\" [galleryContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-gallery1>\r\n  <ibss-common-gallery2 *ngIf=\"content.id === 'IBSSCOMMONGALLERY2'\" [galleryContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-gallery2>\r\n\r\n  <div *ngIf=\"!isView\" class=\"edit-selection\">\r\n    <div class=\"buttons\" >\r\n      <a type=\"button\" class=\"btn btn-primary \" (click)=\"onEdit()\">\r\n        <span class=\"material-icons-round\"> edit </span>\r\n        <span class=\"btn-edit\">Edit</span>  \r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { LightboxConfig } from 'ngx-lightbox';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'ibss-common-gallery',\r\n  templateUrl: './gallery.component.html',\r\n  styleUrls: ['./gallery.component.scss']\r\n})\r\nexport class GalleryComponent implements OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() menuId: any;\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  content: any;\r\n  editItem: any;\r\n  upload: any = {\r\n    images: [],\r\n    imageCaption: \"\",\r\n    group: \"\"\r\n  };\r\n  selectedGroup:any = 'all';\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  constructor(public toastr: ToastrService,private ws: WizardService, private _lightboxConfig: LightboxConfig) {\r\n    _lightboxConfig.showZoom = true;\r\n    _lightboxConfig.showRotate = true;\r\n    _lightboxConfig.centerVertically = true;\r\n    _lightboxConfig.fitImageInViewPort = true;\r\n   }\r\n\r\n  ngOnChanges() {\r\n    let content:any = this.config.gallery1Content;\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    }\r\n    this.content = JSON.parse(JSON.stringify(content));\r\n\r\n\r\n    this.setEditData();\r\n  }\r\n\r\n  onDone() {\r\n    this.content = JSON.parse(JSON.stringify(this.editItem));\r\n    this.selectedGroup = \"all\";\r\n    this.onAction.emit({index:this.index, component:{ id: \"galleryComponent\", template:JSON.parse(JSON.stringify(this.content))}});\r\n  }\r\n\r\n  onCancel() {\r\n    this.setEditData();\r\n  }\r\n\r\n  setEditData() {\r\n    this.editItem = JSON.parse(JSON.stringify(this.content));\r\n    this.upload.images = [];\r\n    this.upload.group = \"\";\r\n  }\r\n\r\n  onAdd() {\r\n    if (this.upload.group && this.upload.group.trim().length > 0 && this.upload.images.length > 0) {\r\n\r\n      this.upload.images.forEach((image: any) => {\r\n        let tempimage = {\r\n          group: JSON.parse(JSON.stringify(this.upload.group)),\r\n          data: image\r\n        }\r\n        this.editItem.images.push(tempimage);\r\n      });\r\n\r\n      let group = this.upload.group.trim().toLowerCase();\r\n      let gIndx = this.editItem.groupsTitle.indexOf(group);\r\n      if (gIndx == -1) {\r\n        this.editItem.groupsTitle.push(group);\r\n        this.editItem.groups.push({\r\n          count: this.upload.images.length,\r\n          title: JSON.parse(JSON.stringify(this.upload.group.trim()))\r\n        });\r\n      } else {\r\n        this.editItem.groups[gIndx].count = this.editItem.groups[gIndx].count + this.upload.images.length;\r\n      }\r\n\r\n      this.upload.images = [];\r\n      this.upload.imageCaption = \"\";\r\n      this.upload.group = \"\";\r\n    } else {\r\n      let msg = \"\";\r\n      if (!this.upload.group || this.upload.group.trim().length == 0) {\r\n        msg = \"Please enter the Group name\";\r\n      } else {\r\n        msg = \"Please select atleast 1 image\";\r\n      }\r\n\r\n      this.toastr.error(msg);\r\n    }\r\n  }\r\n\r\n  onNavigate(id: any) {\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n\r\n  onDeleteImage(index: any, image: any) {\r\n    let group = image.group.toLowerCase();\r\n    let gIndx = this.editItem.groupsTitle.indexOf(group);\r\n    if (gIndx != -1) {\r\n      this.editItem.images.splice(index, 1);\r\n      this.editItem.groups[gIndx].count--;\r\n      if (this.editItem.groups[gIndx].count == 0) {\r\n        this.editItem.groups.splice(gIndx, 1);\r\n        this.editItem.groupsTitle.splice(gIndx, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  readURL(event: any): void {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      for (let i = 0; i < event.target.files.length; i++) {\r\n        const file = event.target.files[i];\r\n        const reader = new FileReader();\r\n        reader.onload = e => {\r\n          this.upload.images.push(reader.result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  onModify(index: any) {\r\n    this.ws.modifyIndex = index;\r\n  }\r\n\r\n  OpenEditModal(index: any) {\r\n    $('#editGalleryModal_'+index).modal('show');\r\n  }\r\n\r\n  onEdit() {\r\n    const params:any = {\r\n      action:\"edit\",\r\n      component:this.content,\r\n      index:this.index\r\n    }\r\n\r\n    this.onAction.emit(params);\r\n  }\r\n}\r\n","<div class=\"ibss-common-contact1\">\r\n  <section class=\"section px-5 ibss-common-bg\" id=\"contact-us\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"  [style.color]=\"content?.fontColor\">\r\n    <div class=\"container mx-auto\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-4 col-xs-12\">\r\n          <div class=\"left-text-content\">\r\n            <div class=\"section-heading\">\r\n              <h6 [style.color]=\"content?.titleFontColor\">{{ content?.title }}</h6>\r\n              <h2 [style.color]=\"content?.captionFontColor\">{{ content?.caption }} </h2>\r\n            </div>\r\n            <ul class=\"contact-info\">\r\n              <li *ngIf=\"content?.phone?.trim().length > 0\"><div class=\"contact-icon\" [style.background-color]=\"content?.iconBgColor\"><i [style.color]=\"content?.iconColor\" class=\"fa fa-phone\" aria-hidden=\"true\"></i></div> {{ content?.phone}}</li>\r\n              <li *ngIf=\"content?.email?.trim().length > 0\"><div class=\"contact-icon\" [style.background-color]=\"content?.iconBgColor\"><i [style.color]=\"content?.iconColor\" class=\"fa fa-envelope\" aria-hidden=\"true\"></i></div>{{ content?.email }}</li>\r\n              <li *ngIf=\"content?.site?.trim().length > 0\"><div class=\"contact-icon\" [style.background-color]=\"content?.iconBgColor\"><i [style.color]=\"content?.iconColor\" class=\"fa fa-globe\" aria-hidden=\"true\"></i></div>{{ content?.site}}</li>\r\n              <li *ngIf=\"content?.address?.trim().length > 0\"><div class=\"contact-icon\" [style.background-color]=\"content?.iconBgColor\"><i [style.color]=\"content?.iconColor\" class=\"fa fa-map-marker\" aria-hidden=\"true\"></i></div>{{ content?.address}}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-8 col-md-8 col-xs-12\">\r\n          <div class=\"contact-form\">\r\n            <form id=\"contact\" action=\"\" method=\"get\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-sm-12\">\r\n                  <fieldset>\r\n                    <input name=\"name\" type=\"text\" id=\"name\" placeholder=\"Your Name *\" required=\"\">\r\n                  </fieldset>\r\n                </div>\r\n                <div class=\"col-md-6 col-sm-12\">\r\n                  <fieldset>\r\n                    <input name=\"phone\" type=\"text\" id=\"phone\" placeholder=\"Your Phone\" required=\"\">\r\n                  </fieldset>\r\n                </div>\r\n                <div class=\"col-md-6 col-sm-12\">\r\n                  <fieldset>\r\n                    <input name=\"email\" type=\"email\" id=\"email2\" placeholder=\"Your Email *\" required=\"\">\r\n                  </fieldset>\r\n                </div>\r\n                <div class=\"col-md-6 col-sm-12\">\r\n                  <fieldset>\r\n                    <input name=\"subject\" type=\"text\" id=\"subject\" placeholder=\"Subject\">\r\n                  </fieldset>\r\n                </div>\r\n                <div class=\"col-lg-12\">\r\n                  <fieldset>\r\n                    <textarea name=\"message\" rows=\"6\" id=\"message\" placeholder=\"Message\" required=\"\"></textarea>\r\n                  </fieldset>\r\n                </div>\r\n                <div class=\"col-lg-12\">\r\n                  <fieldset>\r\n                    <button type=\"submit\" id=\"form-submit2\" class=\"main-button-icon\" [style.background-color]=\"content?.buttonColor\">{{content?.buttonText}} <i\r\n                        class=\"fa fa-arrow-right\"></i></button>\r\n                  </fieldset>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-common-contact1',\r\n  templateUrl: './contact1.component.html',\r\n  styleUrls: ['./contact1.component.scss']\r\n})\r\nexport class Contact1Component implements OnInit, OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isView = false;\r\n  @Input() profileName:any = \"\";\r\n  @Input() contactContent: any =  {};\r\n  @Output() onNav = new EventEmitter();\r\n  content: any;\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n  ngOnChanges() {\r\n    this.content = JSON.parse(JSON.stringify(this.contactContent));\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-contact2\">\r\n  <div class=\"ww-section ww-rsvp-detail ibss-common-bg\" id=\"rsvp\" [ngStyle]=\"{'background-image': 'url(' + content?.image + ')', 'background-color': content?.colors?.background}\" [style.color]=\"content?.colors?.text\">\r\n    <div class=\"container\" data-aos=\"zoom-in-up\" data-aos-duration=\"1000\">\r\n      <div class=\"col text-center\">\r\n        <h2 class=\"h1 ww-title pb-3\" data-aos=\"zoom-in-down\" data-aos-duration=\"1000\"[style.color]=\"content?.colors?.title\">{{content?.title}}</h2>\r\n      </div>\r\n      <div class=\"row ww-rsvp-form\">\r\n        <div class=\"col\"  *ngIf=\"content?.contactInfo\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <div class=\"left-text-content\">\r\n                <div class=\"section-heading\">\r\n                  <h6 [style.color]=\"content?.colors?.text\">{{ content?.contactInfo?.title }}</h6>\r\n                  <h2 [style.color]=\"content?.colors?.text\">{{ content?.contactInfo?.caption }} </h2>\r\n                </div>\r\n                <ul class=\"contact-info\">\r\n                  <li *ngIf=\"content?.contactInfo?.phone?.trim().length > 0\"><div class=\"contact-icon\" [style.background-color]=\"content?.iconBgColor\"><i [style.color]=\"content?.iconColor\" class=\"fa fa-phone\" aria-hidden=\"true\"></i></div> {{ content?.contactInfo?.phone}}</li>\r\n                  <li *ngIf=\"content?.contactInfo?.email?.trim().length > 0\"><div class=\"contact-icon\" [style.background-color]=\"content?.iconBgColor\"><i [style.color]=\"content?.iconColor\" class=\"fa fa-envelope\" aria-hidden=\"true\"></i></div>{{ content?.contactInfo?.email }}</li>\r\n                  <li *ngIf=\"content?.contactInfo?.site?.trim().length > 0\"><div class=\"contact-icon\" [style.background-color]=\"content?.iconBgColor\"><i [style.color]=\"content?.iconColor\" class=\"fa fa-globe\" aria-hidden=\"true\"></i></div>{{ content?.contactInfo?.site}}</li>\r\n                  <li *ngIf=\"content?.contactInfo?.address?.trim().length > 0\"><div class=\"contact-icon\" [style.background-color]=\"content?.iconBgColor\"><i [style.color]=\"content?.iconColor\" class=\"fa fa-map-marker\" aria-hidden=\"true\"></i></div>{{ content?.contactInfo?.address}}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" *ngIf=\"content?.showMap && content?.mapConfig\">\r\n            <div class=\"col-md-12\" >\r\n              <agm-map [latitude]=\"content?.mapConfig?.lat\" [longitude]=\"content?.mapConfig?.lng\" [zoom]=\"content?.mapConfig?.zoom\">\r\n                <agm-marker [latitude]=\"content?.mapConfig?.lat\" [longitude]=\"content?.mapConfig?.lng\" [markerDraggable]=\"false\">\r\n                  <agm-info-window>\r\n                    <strong>{{content?.mapConfig?.label}}</strong>\r\n                    <div [innerHTML]=\"content?.mapConfig?.address | ibssSanitize\"></div>\r\n                  </agm-info-window>\r\n                </agm-marker>\r\n              </agm-map>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"card-body\">\r\n            <div class=\"form-group\" *ngFor=\"let field of content?.fields; let i=index;\">\r\n              <label [style.color]=\"content?.colors?.label\">{{field?.label}} <span *ngIf=\"field?.required\">*</span></label>\r\n              <input *ngIf=\"field?.type=='text'\" class=\"form-control\" type=\"text\" [(ngModel)]=\"field.value\"/>\r\n              <input *ngIf=\"field?.type=='number'\" class=\"form-control\" type=\"number\" [(ngModel)]=\"field.value\"/>\r\n              <input *ngIf=\"field?.type=='email'\" class=\"form-control\"type=\"email\" [(ngModel)]=\"field.value\"/>\r\n              <select *ngIf=\"field?.type=='dropdown'\" class=\"form-control\" [(ngModel)]=\"field.value\">\r\n                <option value=\"\">Select</option>\r\n                <option *ngFor=\"let option of field?.options.split(',')\" [value]=\"option\">{{option}}</option>\r\n              </select>\r\n              <textarea *ngIf=\"field?.type=='textarea'\" class=\"form-control\" name=\"message\" rows=\"4\" [(ngModel)]=\"field.value\"></textarea>\r\n              <small class=\"bold\" [style.color]=\"content?.colors?.label\" *ngIf=\"!field?.valid\">{{field?.validationMsg}}</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"col text-center\">\r\n            <button class=\"btn\" type=\"button\" [disabled]=\"!canSend\" (click)=\"onSendMessage()\" [style.color]=\"content?.colors?.buttonTxt\" [style.background]=\"content?.colors?.buttonBg\">{{content?.sendButtonText}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { API } from 'src/app/enums/api.enum';\r\n\r\n@Component({\r\n  selector: 'ibss-common-contact2',\r\n  templateUrl: './contact2.component.html',\r\n  styleUrls: ['./contact2.component.scss']\r\n})\r\nexport class Contact2Component implements OnInit, OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isView = false;\r\n  @Input() contactContent: any =  {};\r\n  @Input() profileName:any = \"\";\r\n  @Output() onNav = new EventEmitter();\r\n  config:typeof CONFIG = CONFIG;\r\n  content: any;\r\n  canSend = true;\r\n  \r\n  _saveUrl = this.config.getBaseURL(API.RESOURCES) + \"/email/write\";\r\n\r\n  constructor(\r\n    private toastr:ToastrService,\r\n    public http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n  ngOnChanges() {\r\n    this.content = JSON.parse(JSON.stringify(this.contactContent));\r\n  }\r\n\r\n  onSendMessage() {\r\n    this.canSend = false;\r\n    const isValid = this.validateFields();\r\n\r\n    if (isValid) {\r\n      console.log(this.content.fields);\r\n\r\n      let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n      if (ibssApp) {\r\n        ibssApp = JSON.parse(ibssApp);\r\n      }\r\n      let headers: HttpHeaders = new HttpHeaders();\r\n      headers = headers.append('Accept', 'application/json');\r\n      headers = headers.append('Content-Type', 'application/json');\r\n      headers = headers.append(\"X-HTTP-Method\", \"POST\");\r\n\r\n\r\n      const params = {\r\n        \"serviceData\": {\r\n          \"contactType\": 1,\r\n          \"profileData\": { \"message\": this.content.fields },\r\n          \"profileName\": this.profileName\r\n        }\r\n      }\r\n      this.http.post(this._saveUrl, params, { headers: headers })\r\n      .subscribe((res: any) => {\r\n        console.log('signup success', res);\r\n        this.canSend = true;\r\n        if (res.error && res.error.responseCode == 0) {\r\n          this.toastr.success(\"Sent successfully\");\r\n          this.resetFields();\r\n        } else {\r\n          if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n              for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n              }\r\n            }\r\n\r\n            if (res.error.dataValidation.length > 0) {\r\n              for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n              }\r\n            }\r\n          } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"OOPS!!!, Please try again after sometimes\");\r\n          }\r\n\r\n        }\r\n      }, (error) => {\r\n        this.canSend = true;\r\n        this.toastr.error(\"OOPS!!!, Please try again after sometimes\");\r\n      })\r\n\r\n    } else {\r\n      this.canSend = true;\r\n    }\r\n\r\n  }\r\n\r\n  resetFields() {\r\n    this.content.fields.forEach((field:any) => {\r\n      field.valid = true;\r\n      field.validationMsg = \"\";\r\n      field.value = \"\";\r\n    });\r\n  }\r\n\r\n  validateFields() {\r\n    let mandatoryFields = 0;\r\n    let emptyFields = 0;\r\n    let canSave = true;\r\n    this.content.fields.forEach((field:any) => {\r\n      field.valid = true;\r\n      field.validationMsg = \"\";\r\n\r\n      let validationMsg = \"\";\r\n      let valid = true;\r\n      if (field.required) {\r\n        mandatoryFields++;\r\n      } \r\n      if (field.value!=null &&  field.value!=undefined) {\r\n          if (field.value==\"\") {\r\n            validationMsg = \"This Field is required\";\r\n            valid = false;\r\n            emptyFields++;\r\n          } else if (field.type == \"email\" && !this.config.regEx.email.test(field.type.toLowerCase())) {\r\n              validationMsg = \"Please enter a valid email address\";\r\n              valid = false;\r\n          } else if (field.type == \"number\" && parseInt(field.type)<0) {\r\n            validationMsg = \"Please enter a valid data\";\r\n            valid = false;\r\n          }\r\n      } else {\r\n        emptyFields++;\r\n      }\r\n\r\n      if (field.required) {\r\n        field.validationMsg = validationMsg;\r\n        field.valid = valid;\r\n        canSave = valid;\r\n      }\r\n    });\r\n\r\n    if(mandatoryFields === 0 && emptyFields > 1) {\r\n      canSave=false;\r\n    }\r\n    \r\n    return canSave;\r\n\r\n  }\r\n}\r\n","<div class=\"ibss-common-contact\" id=\"{{menuId}}\" [ibssMarginTop]=\"isEdit ? -1 : index\">\r\n\r\n  <ibss-common-contact1 [profileName]=\"profileName\" *ngIf=\"content.id === 'IBSSCOMMONCONTACT1'\" [contactContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-contact1>\r\n  <ibss-common-contact2 [profileName]=\"profileName\" *ngIf=\"content.id === 'IBSSCOMMONCONTACT2'\"[contactContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-contact2>\r\n\r\n\r\n  <div *ngIf=\"!isView\" class=\"edit-selection\">\r\n    <div class=\"buttons\" >\r\n      <a type=\"button\" class=\"btn btn-primary\" (click)=\"onEdit()\">\r\n        <span class=\"material-icons-round\"> edit </span>\r\n        <span class=\"btn-edit\">Edit</span> \r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'ibss-common-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnChanges  {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() isView: boolean = false;\r\n  @Input() menuId: any;\r\n  @Input() profileName: any = \"\";\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  content: any;\r\n  editItem :any;\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  \r\n  constructor(private ws: WizardService) { }\r\n\r\n  ngOnChanges() {\r\n    let content = this.config.contact1Content;\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    }\r\n    this.content = JSON.parse(JSON.stringify(content));\r\n    this.setEditData();\r\n  }\r\n\r\n  onDelete() {\r\n\r\n  }\r\n\r\n  onCancel() {\r\n    this.setEditData();\r\n  }\r\n\r\n  setEditData() {\r\n    this.editItem = JSON.parse(JSON.stringify(this.content));\r\n  }\r\n\r\n  onDone() {\r\n    this.content = JSON.parse(JSON.stringify(this.editItem));\r\n    this.onAction.emit({index:this.index, component:{ id: \"contactComponent\", template:JSON.parse(JSON.stringify(this.content))}});\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n  onAddFeature() {\r\n\r\n    let temp = {\r\n      icon:\"fa-check-circle\",\r\n      title: JSON.parse(JSON.stringify(this.editItem.feature))\r\n    }\r\n    this.editItem.topfeatures.push(temp);\r\n  }\r\n\r\n\r\n  onDeleteFeature(index: any) {\r\n    this.editItem.topfeatures.splice(index, 1);\r\n  }\r\n\r\n  onModify(index: any) {\r\n    this.ws.modifyIndex = index;\r\n  }\r\n\r\n  OpenEditModal(index: any) {\r\n    $('#editContactModal_'+index).modal('show');\r\n  }\r\n\r\n  onEdit() {\r\n    const params:any = {\r\n      action:\"edit\",\r\n      component:this.content,\r\n      index:this.index\r\n    }\r\n\r\n    this.onAction.emit(params);\r\n  }\r\n}\r\n","<div class=\"ibss-common-peoples1\">\r\n  <div class=\"ww-section ibss-common-bg\" id=\"people\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"  >\r\n    <div class=\"container ww-couple-friends\">\r\n      <h2 class=\"h1 text-center pt-3 description\" data-aos=\"zoom-in-down\" data-aos-duration=\"1000\"\r\n        [style.color]=\"content?.colors?.title\">{{content?.title}}\r\n      </h2>\r\n      <div class=\"carousel slide\" id=\"ww-carouselIndicator\" data-ride=\"carousel\" data-aos=\"zoom-in-up\"\r\n        data-aos-duration=\"1000\">\r\n        <ol class=\"carousel-indicators\">\r\n          <li class=\"active\" data-target=\"#ww-carouselIndicator\" data-slide-to=\"0\"></li>\r\n          <li data-target=\"#ww-carouselIndicator\" data-slide-to=\"1\"></li>\r\n        </ol>\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4\" *ngFor=\"let gm of content?.groomsMen\">\r\n                <div class=\"card d-block mb-3\"><img class=\"card-img-top\" [src]=\"gm?.image\" />\r\n                  <div class=\"card-body text-center\">\r\n                    <div class=\"h5\" [style.color]=\"content?.colors?.name\">{{gm?.name}}</div>\r\n                    <p class=\"mb-0\" [style.color]=\"content?.colors?.text\">{{gm?.relation}}</p>\r\n                    <p [style.color]=\"content?.colors?.text\">{{gm?.side}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4\" *ngFor=\"let bm of content?.bridesMaid\">\r\n                <div class=\"card d-block mb-3\"><img class=\"card-img-top\" [src]=\"bm?.image\" />\r\n                  <div class=\"card-body text-center\">\r\n                    <div class=\"h5\" [style.color]=\"content?.colors?.name\">{{bm?.name}}</div>\r\n                    <p class=\"mb-0\" [style.color]=\"content?.colors?.text\">{{bm?.relation}}</p>\r\n                    <p [style.color]=\"content?.colors?.text\">{{bm?.side}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { AbstractType, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-common-peoples1',\r\n  templateUrl: './peoples1.component.html',\r\n  styleUrls: ['./peoples1.component.scss']\r\n})\r\nexport class Peoples1Component implements OnChanges {\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isNew: boolean = true;\r\n  @Input() isView: boolean = false;\r\n  @Input() peoples1Content: any =  {};\r\n  @Input() index: any;\r\n  @Output() onNav = new EventEmitter();\r\n  content: any;\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n    this.content = JSON.parse(JSON.stringify(this.peoples1Content));\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-peoples2\">\r\n    <div class=\"ww-section ibss-common-bg\" id=\"people{{index}}\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"  >\r\n      <div class=\"container ww-couple-friends\">\r\n        <h2 class=\"h1 text-center pt-3 description\" data-aos=\"zoom-in-down\" data-aos-duration=\"1000\"\r\n          [style.color]=\"content?.colors?.title\">{{content?.title}}\r\n        </h2>\r\n        <div class=\"carousel slide\" id=\"ww-carouselIndicator{{index}}\" data-ride=\"carousel\" data-aos=\"zoom-in-up\"\r\n          data-aos-duration=\"1000\">\r\n          <ol class=\"carousel-indicators\">\r\n            <li [ngClass]=\"{'active': i===0}\" *ngFor=\"let group of content?.groups;let i = index\" attr.data-target=\"{{'#ww-carouselIndicator'+index}}\" [attr.data-slide-to]=\"i\"></li>\r\n          </ol>\r\n          <div class=\"carousel-inner\">\r\n            <div class=\"carousel-item\" [ngClass]=\"{'active': i===0}\" *ngFor=\"let group of content?.groups;let i=index;\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4\" *ngFor=\"let people of group;\">\r\n                  <div class=\"card d-block mb-3\"><img class=\"card-img-top\" [src]=\"people?.image\" />\r\n                    <div class=\"card-body text-center\">\r\n                      <div class=\"h5\" [style.color]=\"content?.colors?.name\">{{people?.name}}</div>\r\n                      <p class=\"mb-0\" [style.color]=\"content?.colors?.text\">{{people?.relation}}</p>\r\n                      <p [style.color]=\"content?.colors?.text\" [innerHTML]=\"people.description | ibssSanitize\"></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"carousel-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4\" *ngFor=\"let bm of content?.bridesMaid\">\r\n                  <div class=\"card d-block mb-3\"><img class=\"card-img-top\" [src]=\"bm?.image\" />\r\n                    <div class=\"card-body text-center\">\r\n                      <div class=\"h5\" [style.color]=\"content?.colors?.name\">{{bm?.name}}</div>\r\n                      <p class=\"mb-0\" [style.color]=\"content?.colors?.text\">{{bm?.relation}}</p>\r\n                      <p [style.color]=\"content?.colors?.text\">{{bm?.side}}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-common-peoples2',\r\n  templateUrl: './peoples2.component.html',\r\n  styleUrls: ['./peoples2.component.scss']\r\n})\r\nexport class Peoples2Component implements OnChanges {\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isNew: boolean = true;\r\n  @Input() isView: boolean = false;\r\n  @Input() peoples2Content: any =  {};\r\n  @Input() index: any;\r\n  @Output() onNav = new EventEmitter();\r\n  content: any;\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n    this.content = JSON.parse(JSON.stringify(this.peoples2Content));\r\n\r\n    this.content.groups = this.createGroups(this.content.peoples);\r\n    console.log(\"Peoples2Component\", this.content);\r\n  }\r\n\r\n  createGroups(collection: any){\r\n    const size = 3;\r\n    return Array.from(\r\n        new Array(Math.ceil(collection.length / size)),\r\n        (_, i) => collection.slice(i * size, i * size + size)\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-peoples\" id=\"{{menuId}}\" [ibssMarginTop]=\"isEdit ? -1 : index\">\r\n\r\n    <ibss-common-peoples1 *ngIf=\"content.id === 'IBSSCOMMONPEOPLES1'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n      [peoples1Content]=\"content\" (onNav)=\"onNavigate($event)\" [index]=\"index\"></ibss-common-peoples1>\r\n    <ibss-common-peoples2 *ngIf=\"content.id === 'IBSSCOMMONPEOPLES2'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n      [peoples2Content]=\"content\" (onNav)=\"onNavigate($event)\" [index]=\"index\"></ibss-common-peoples2>\r\n\r\n  \r\n      <div *ngIf=\"!isView\" class=\"edit-selection\">\r\n        <div class=\"buttons\" >\r\n          <a type=\"button\" class=\"btn btn-primary\" (click)=\"onEdit()\">\r\n            <span class=\"material-icons-round\"> edit </span>\r\n            <span class=\"btn-edit\">Edit</span>  \r\n          </a>\r\n        </div>\r\n      </div>\r\n  </div>","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'ibss-common-peoples',\r\n  templateUrl: './peoples.component.html',\r\n  styleUrls: ['./peoples.component.scss']\r\n})\r\nexport class PeoplesComponent implements OnChanges {\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() isView = false;\r\n  @Input() menuId: any;\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  content: any;\r\n  editItem :any;\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  \r\n  constructor(private ws: WizardService) { }\r\n\r\n  ngOnChanges() {\r\n    let content = this.config.peoples1Content;\r\n    console.log(\"PeoplesComponent\",content);\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    }\r\n    this.content = JSON.parse(JSON.stringify(content));\r\n    this.setEditData();\r\n  \r\n  }\r\n\r\n  onCancel() {\r\n    this.setEditData();\r\n  }\r\n\r\n  setEditData() {\r\n    this.editItem = JSON.parse(JSON.stringify(this.content));\r\n    this.editItem.feature = \"\";\r\n  }\r\n\r\n  onDelete() {\r\n\r\n  }\r\n\r\n  onDone() {\r\n    this.content = JSON.parse(JSON.stringify(this.editItem));\r\n    this.onAction.emit({index:this.index, component:{ id: \"peoplesComponent\", template:JSON.parse(JSON.stringify(this.content))}});\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n  onAddFeature() {\r\n\r\n    let temp = {\r\n      icon:\"fa-check-circle\",\r\n      title: JSON.parse(JSON.stringify(this.editItem.feature))\r\n    }\r\n    this.editItem.topfeatures.push(temp);\r\n  }\r\n\r\n\r\n  onDeleteFeature(index: any) {\r\n    this.editItem.topfeatures.splice(index, 1);\r\n  }\r\n\r\n  onModify(index: any) {\r\n    this.ws.modifyIndex = index;\r\n  }\r\n\r\n  OpenEditModal(index: any) {\r\n    $('#editpeoplesModal_'+index).modal('show');\r\n  }\r\n\r\n  onEdit() {\r\n    const params:any = {\r\n      action:\"edit\",\r\n      component:this.content,\r\n      index:this.index\r\n    }\r\n\r\n    this.onAction.emit(params);\r\n  }\r\n}\r\n","<div class=\"ibss-common-banner1\">\r\n  <div class=\"ww-home-page\" id=\"home\" [ngStyle]=\"{'background-image': 'url(' + content?.image + ')', 'background-color': content?.colors?.background}\">\r\n    <div class=\"ww-wedding-announcement d-flex align-items-center justify-content-start\">\r\n      <div class=\"container ww-announcement-container description\">\r\n        <p class=\"ww-couple-name \" [style.color]=\"content?.colors?.text\" animateOnScroll animationName=\"zoom-in-down\" [innerHTML]=\"content?.title | ibssSanitize\"></p>\r\n        <img class=\"img-fluid mt-1\" *ngIf=\"content?.image2\" [src]=\"content?.image2\" alt=\"Heart\"\r\n          animateOnScroll animationName=\"zoom-in-down\" />\r\n        <p class=\"h2 mt-5\" animateOnScroll animationName=\"zoom-in-down\" *ngIf=\"isValidDate\" [style.color]=\"content?.colors?.text\">{{formattedDate }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport * as moment  from 'moment';\r\n\r\n@Component({\r\n  selector: 'ibss-common-banner1',\r\n  templateUrl: './banner1.component.html',\r\n  styleUrls: ['./banner1.component.scss']\r\n})\r\nexport class Banner1Component implements OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() content: any;\r\n  @Input() index: any;\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  isValidDate = true;\r\n  formattedDate: any = \"\";\r\n  constructor() {\r\n    \r\n   }\r\n\r\n  ngOnChanges() {\r\n    this.isValidDate = moment(this.content.date).isValid();\r\n    if (this.isValidDate ) {\r\n      this.formattedDate = moment(this.content.date).format('Do MMMM YYYY');\r\n    }\r\n  }\r\n\r\n  setId(page: any) {\r\n    if (page.title && page.title.trim().length>0) {\r\n      page.id = page.title.replace(/ /g,\"_\")\r\n    }\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-banner\" id=\"{{menuId}}\" [ibssMarginTop]=\"isEdit ? -1 : index\">\r\n    <ibss-common-banner1  *ngIf=\"content.id === 'IBSSCOMMONBANNER1'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n      [content]=\"content\" (onNav)=\"onNavigate($event)\"></ibss-common-banner1>\r\n\r\n      <div *ngIf=\"!isView\" class=\"edit-selection\">\r\n        <div class=\"buttons\" >\r\n          <a type=\"button\" class=\"btn btn-primary\" (click)=\"onEdit()\">\r\n            <span class=\"material-icons-round\"> edit </span>\r\n            <span class=\"btn-edit\">Edit</span>  \r\n          </a>\r\n        </div>\r\n      </div>\r\n  </div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'ibss-common-banner',\r\n  templateUrl: './banner.component.html',\r\n  styleUrls: ['./banner.component.scss']\r\n})\r\nexport class BannerComponent implements OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() isView = false;\r\n  @Input() menuId: any;\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  content: any;\r\n  editItem :any;\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  \r\n  constructor(private ws: WizardService) { }\r\n\r\n  ngOnChanges() {\r\n    let content = this.config.banner1Items;\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    }\r\n    this.content = JSON.parse(JSON.stringify(content));\r\n    console.log(\"BannerComponent\",content);\r\n    this.setEditData();\r\n  \r\n  }\r\n\r\n  onCancel() {\r\n    this.setEditData();\r\n  }\r\n\r\n  setEditData() {\r\n    this.editItem = JSON.parse(JSON.stringify(this.content));\r\n    this.editItem.feature = \"\";\r\n  }\r\n\r\n  onDelete() {\r\n\r\n  }\r\n\r\n  onDone() {\r\n    this.content = JSON.parse(JSON.stringify(this.editItem));\r\n    this.onAction.emit({index:this.index, component:{ id: \"peoplesComponent\", template:JSON.parse(JSON.stringify(this.content))}});\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n  onAddFeature() {\r\n\r\n    let temp = {\r\n      icon:\"fa-check-circle\",\r\n      title: JSON.parse(JSON.stringify(this.editItem.feature))\r\n    }\r\n    this.editItem.topfeatures.push(temp);\r\n  }\r\n\r\n\r\n  onDeleteFeature(index: any) {\r\n    this.editItem.topfeatures.splice(index, 1);\r\n  }\r\n\r\n  onModify(index: any) {\r\n    this.ws.modifyIndex = index;\r\n  }\r\n\r\n  OpenEditModal(index: any) {\r\n    $('#editpeoplesModal_'+index).modal('show');\r\n  }\r\n  \r\n  onEdit() {\r\n    const params:any = {\r\n      action:\"edit\",\r\n      component:this.content,\r\n      index:this.index\r\n    }\r\n\r\n    this.onAction.emit(params);\r\n  }\r\n}\r\n","\r\n<div class=\"ibbs-common-videos\" id=\"{{menuId}}\" [ibssMarginTop]=\"isEdit ? -1 : index\"> \r\n  <div class=\"ww-section ww-rsvp-detail p-3 ibss-common-bg\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"   [style.color]=\"content?.colors?.text\">\r\n    <div class=\"container\" data-aos=\"zoom-in-up\" data-aos-duration=\"1000\">\r\n      <div class=\"col text-center\">\r\n        <h2 class=\"h1 text-center description my-3\" data-aos=\"zoom-in-down\" data-aos-duration=\"1000\" [style.color]=\"content?.colors?.title\">{{content?.title}}</h2>\r\n      </div>\r\n      <div class=\"text-center video-container\">\r\n          <iframe  [src]=\"videoSrc | safe\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"!isView\" class=\"edit-selection\">\r\n    <div class=\"buttons\" >\r\n      <a type=\"button\" class=\"btn btn-primary\" (click)=\"onEdit()\">\r\n        <span class=\"material-icons-round\"> edit </span>\r\n        <span class=\"btn-edit\">Edit</span>  \r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport { DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'ibss-youtube-videos',\r\n  templateUrl: './youtube-videos.component.html',\r\n  styleUrls: ['./youtube-videos.component.scss']\r\n})\r\nexport class YoutubeVideosComponent implements OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() content: any;\r\n  @Input() index: any;\r\n  @Input() isView = false;\r\n  @Input() menuId: any;\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  videoId = \"JddGlT64N2s\";\r\n  youtubeUrl = \"https://www.youtube-nocookie.com/embed/\";\r\n  videoSrc:any = \"\";;\r\n  constructor(private sanitizer: DomSanitizer) { \r\n  }\r\n  \r\n  ngOnChanges() {\r\n    console.log('YoutubeVideosComponent',this.content);\r\n    this.videoSrc = this.youtubeUrl+this.content.src;\r\n    console.log(\"videoSrc\", this.videoSrc);\r\n    \r\n  }\r\n\r\n  onEdit() {\r\n    const params:any = {\r\n      action:\"edit\",\r\n      component:this.content,\r\n      index:this.index\r\n    }\r\n\r\n    this.onAction.emit(params);\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-service1\">\r\n  <div class=\"vg-page page-service ibss-common-bg\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\"  >\r\n    <div class=\"container\">\r\n      <div class=\"text-center wow fadeInUp\">\r\n        <h3 [style.color]=\"content?.colors?.title\">{{content?.title}}</h3>\r\n      </div>\r\n      <h1 class=\"fw-normal text-center wow fadeInUp\" [style.color]=\"content?.colors?.subTitle\">{{ content?.subTitle}}</h1>\r\n      <div class=\"row mt-5\">\r\n        <div class=\"col-md-6 col-lg-4 col-xl-3\" *ngFor=\"let service of content?.services\">\r\n          <div class=\"card card-service wow fadeInUp p-3\" [ngStyle]=\"{'background-color': content?.colors?.cardBg}\">\r\n            <!-- <div class=\"icon\">\r\n              <span class=\"ti-paint-bucket\"></span>\r\n            </div> -->\r\n            <div class=\"caption\">\r\n              <h4 class=\"fg-theme\" [style.color]=\"content?.colors?.text\">{{service?.title}}</h4>\r\n              <p [innerHTML]=\"service?.description | ibssSanitize\" [style.color]=\"content?.colors?.text\"></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport * as moment  from 'moment';\r\n\r\n@Component({\r\n  selector: 'ibss-common-service1',\r\n  templateUrl: './service1.component.html',\r\n  styleUrls: ['./service1.component.scss']\r\n})\r\nexport class Service1Component implements OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() content: any;\r\n  @Input() index: any;\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  constructor() {\r\n    \r\n   }\r\n\r\n  ngOnChanges() {\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-service2\">\r\n  <div class=\"vg-page page-service ibss-common-bg\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\">\r\n    <div class=\"container\">\r\n      <div class=\"text-center wow fadeInUp\">\r\n        <h3 [style.color]=\"content?.colors?.title\">{{content?.title}}</h3>\r\n      </div>\r\n      <h1 class=\"fw-normal text-center wow fadeInUp\" [style.color]=\"content?.colors?.subTitle\">{{ content?.subTitle}}\r\n      </h1>\r\n      <div class=\"row pt-3\" *ngIf=\"content?.description1?.trim()?.length>0\">\r\n        <div class=\"col-md-12 col-lg-12 col-xl-12\">\r\n          <p [innerHTML]=\"content?.description1 | ibssSanitize\" [style.color]=\"content?.colors?.text\"></p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row pt-3\">\r\n        <div *ngIf=\"content?.style==='S3' || content?.style==='S4'\"\r\n          [ngClass]=\"{'col-md-6 col-lg-6 col-xl-6': content.style==='S3', 'col-md-12 col-lg-12 col-xl-12': content.style==='S4'}\">\r\n          <p [innerHTML]=\"content?.description | ibssSanitize\" [style.color]=\"content?.colors?.text\"></p>\r\n        </div>\r\n        <div\r\n          [ngClass]=\"{'col-md-6 col-lg-6 col-xl-6': (content.style==='S1' || content.style==='S3'), 'col-md-12 col-lg-12 col-xl-12': (content.style==='S2' || content.style==='S4')}\">\r\n          <div id=\"service2Carousel_{{index}}\" class=\"carousel slide\" data-ride=\"carousel\">\r\n            <div class=\"carousel-inner\">\r\n              <div class=\"carousel-item\" *ngFor=\"let item of content?.slider;let i=index\" [ngClass]=\"{'active': i===0}\">\r\n                <img [src]=\"item\" class=\"d-block w-100\" alt=\"\">\r\n              </div>\r\n            </div>\r\n            <a class=\"carousel-control-prev\" *ngIf=\"content?.slider?.length>1\" href=\"#service2Carousel_{{index}}\"\r\n              role=\"button\" data-slide=\"prev\">\r\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n              <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\" *ngIf=\"content?.slider?.length>1\" href=\"#service2Carousel_{{index}}\"\r\n              role=\"button\" data-slide=\"next\">\r\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n              <span class=\"sr-only\">Next</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"content?.style==='S1' || content?.style==='S2'\"\r\n          [ngClass]=\"{'col-md-6 col-lg-6 col-xl-6': content.style==='S1', 'col-md-12 col-lg-12 col-xl-12': content.style==='S2'}\">\r\n          <p [innerHTML]=\"content?.description | ibssSanitize\" [style.color]=\"content?.colors?.text\"></p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row pt-3\"  *ngIf=\"content?.description2?.trim()?.length>0\">\r\n        <div class=\"col-md-12 col-lg-12 col-xl-12\">\r\n          <p [innerHTML]=\"content?.description2 | ibssSanitize\" [style.color]=\"content?.colors?.text\"></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport * as moment  from 'moment';\r\n\r\n@Component({\r\n  selector: 'ibss-common-service2',\r\n  templateUrl: './service2.component.html',\r\n  styleUrls: ['./service2.component.scss']\r\n})\r\nexport class Service2Component implements OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() content: any;\r\n  @Input() index: any;\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  ngOnChanges() {\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-services\" id=\"{{menuId}}\" [ibssMarginTop]=\"isEdit ? -1 : index\">\r\n    <ibss-common-service1  *ngIf=\"content.id === 'IBSSCOMMONSERVICE1'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n      [content]=\"content\" (onNav)=\"onNavigate($event)\"></ibss-common-service1>\r\n\r\n    <ibss-common-service2  *ngIf=\"content.id === 'IBSSCOMMONSERVICE2'\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n      [content]=\"content\" (onNav)=\"onNavigate($event)\"></ibss-common-service2>\r\n\r\n      <div *ngIf=\"!isView\" class=\"edit-selection\">\r\n        <div class=\"buttons\" >\r\n          <a type=\"button\" class=\"btn btn-primary\" (click)=\"onEdit()\">\r\n            <span class=\"material-icons-round\"> edit </span>\r\n            <span class=\"btn-edit\">Edit</span>  \r\n          </a>\r\n        </div>\r\n      </div>\r\n  </div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'ibss-common-services',\r\n  templateUrl: './service.component.html',\r\n  styleUrls: ['./service.component.scss']\r\n})\r\nexport class ServiceComponent implements OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() isView = false;\r\n  @Input() menuId: any;\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  content: any;\r\n  editItem :any;\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  \r\n  constructor(private ws: WizardService) { }\r\n\r\n  ngOnChanges() {\r\n    let content = this.config.service1Content;\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    }\r\n    this.content = JSON.parse(JSON.stringify(content));\r\n    console.log(\"ServiceComponent\",content);  \r\n  }\r\n\r\n  onNavigate(id: any){\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n  onEdit() {\r\n    const params:any = {\r\n      action:\"edit\",\r\n      component:this.content,\r\n      index:this.index\r\n    }\r\n    this.onAction.emit(params);\r\n  }\r\n}\r\n","<div *ngIf=\"templateRefs !== null && templateRefs !== undefined\">\r\n    <ng-container *ngTemplateOutlet=\"templateRefs[page.id]; context: { index: index, payload: page.template, menuId:page.menuId}\"></ng-container>\r\n</div>\r\n\r\n<ng-template #headerComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-header  [profileName]=\"profileName\"  [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-header>\r\n  </ng-template>\r\n  \r\n  <ng-template #introComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-introduction [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\"  [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-introduction>\r\n  </ng-template>\r\n  \r\n  <ng-template #aboutComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-about [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-about>\r\n  </ng-template>\r\n  \r\n  <ng-template #galleryComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-gallery [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-gallery>\r\n  </ng-template>\r\n  \r\n  <ng-template #contactComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-contact [profileName]=\"profileName\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-contact>\r\n  </ng-template>\r\n  \r\n  <ng-template #footerComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-footer [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-footer>\r\n  </ng-template>\r\n  \r\n  <ng-template #peoplesComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-peoples [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-peoples>\r\n  </ng-template>\r\n  \r\n  <ng-template #bannerComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-banner [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-banner>\r\n  </ng-template>\r\n  \r\n  <ng-template #videoComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-youtube-videos [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [content]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-youtube-videos>\r\n  </ng-template>\r\n\r\n  <ng-template #serviceComponent let-payload=\"payload\" let-index=\"index\" let-menuId = \"menuId\">\r\n    <ibss-common-services [isDummy]=\"isDummy\" [isEdit]=\"isEdit\" [isView]=\"isView\" (onNav)=\"onClickHandler($event)\" (onAction)=\"handleAction($event)\" [inputPayload]=\"payload\" [index]=\"index\" [menuId]=\"menuId\">\r\n    </ibss-common-services>\r\n  </ng-template>","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnChanges, Output, TemplateRef, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-templates-container',\r\n  templateUrl: './templates-container.component.html',\r\n  styleUrls: ['./templates-container.component.scss']\r\n})\r\nexport class TemplatesContainerComponent implements OnChanges {\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isLoading: boolean = false;\r\n  @Input() isView: boolean = false;\r\n  @Input() profileName: any = \"\";\r\n  @Input() page: any;\r\n  @Input() index: any;\r\n  @Output() onAction = new EventEmitter();\r\n  @Output() onClick = new EventEmitter();\r\n  @ViewChild('pageInfo') pageInfo!: ElementRef; \r\n  @ViewChild('headerComponent') headerComponent!: TemplateRef<any>; \r\n  @ViewChild('introComponent') introComponent!: TemplateRef<any>; \r\n  @ViewChild('aboutComponent') aboutComponent!: TemplateRef<any>; \r\n  @ViewChild('galleryComponent') galleryComponent!: TemplateRef<any>; \r\n  @ViewChild('contactComponent') contactComponent!: TemplateRef<any>; \r\n  @ViewChild('footerComponent') footerComponent!: TemplateRef<any>; \r\n  @ViewChild('peoplesComponent') peoplesComponent!: TemplateRef<any>; \r\n  @ViewChild('bannerComponent') bannerComponent!: TemplateRef<any>; \r\n  @ViewChild('videoComponent') videoComponent!: TemplateRef<any>; \r\n  @ViewChild('serviceComponent') serviceComponent!: TemplateRef<any>; \r\n  templateRefs: any;\r\n  constructor(\r\n    private cdref: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.templateRefs = {\r\n      headerComponent:this.headerComponent,\r\n      introComponent:this.introComponent,\r\n      aboutComponent:this.aboutComponent,\r\n      galleryComponent:this.galleryComponent,\r\n      contactComponent:this.contactComponent,\r\n      footerComponent:this.footerComponent,\r\n      peoplesComponent:this.peoplesComponent,\r\n      bannerComponent:this.bannerComponent,\r\n      videoComponent:this.videoComponent,\r\n      serviceComponent:this.serviceComponent,\r\n    }\r\n    this.cdref.detectChanges();\r\n  }\r\n\r\n  public onClickHandler(elementId: any): void { \r\n    console.log('onClickHandler',elementId);\r\n    this.onClick.emit(elementId)\r\n  }\r\n \r\n  public handleAction(evt: any) { \r\n    this.onAction.emit(evt)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StyleService {\r\n\r\n  private _headElement: HTMLHeadElement;\r\n  private get headElement(): HTMLHeadElement {\r\n    if(!this._headElement && document.getElementsByTagName(\"head\").length > 0) {\r\n      this._headElement = document.getElementsByTagName(\"head\")[0];\r\n    }\r\n    return this._headElement;\r\n  }\r\n\r\n  private _cssStyleSheet: CSSStyleSheet;\r\n  private get cssStyleSheet(): CSSStyleSheet {\r\n    if(!this._cssStyleSheet) {\r\n      if(!document.styleSheets || this.headElement === null) return null!;\r\n\r\n      // Get the first style sheet that is enabled and mediaText is empty or screen.\r\n      this._cssStyleSheet = Array.from(document.styleSheets).find(s => {\r\n         return !s.disabled && s.href && s.href.startsWith(window.location.origin) && (s.media.mediaText == \"\" || s.media.mediaText.indexOf(\"screen\") !== -1)\r\n        }) as CSSStyleSheet;\r\n  \r\n      // If the style sheet doesn't exist yet, then create it.\r\n      if(!this._cssStyleSheet) this._cssStyleSheet = this.createCssStyleSheet();\r\n    }\r\n\r\n    return this._cssStyleSheet;\r\n  }\r\n\r\n  constructor() { \r\n    \r\n  }\r\n\r\n  public setStyle(selectorText: string, styleName: string, value: string): void {\r\n    let rule: CSSStyleRule = this.getStyleRule(selectorText);\r\n    if(!rule) return;\r\n\r\n    rule.style[styleName] = value;\r\n  }\r\n\r\n  public setStyles(selectorText: string, styles: { [styleName: string]: string } | CSSStyleDeclaration) {\r\n    let rule: CSSStyleRule = this.getStyleRule(selectorText);\r\n    if(!rule) return;\r\n\r\n    Object.keys(styles).forEach(styleName => {\r\n      rule.style[styleName] = styles[styleName];\r\n    });\r\n  }\r\n\r\n  private createCssStyleSheet(): CSSStyleSheet {\r\n    // Create the style sheet element.\r\n    let styleSheetElement = document.createElement(\"style\");\r\n    styleSheetElement.type = \"text/css\";\r\n\r\n    // Append the style sheet element to the head.\r\n    this.headElement.appendChild(styleSheetElement);\r\n    return styleSheetElement.sheet as CSSStyleSheet;\r\n  }\r\n\r\n  private getStyleRule(selectorText: string): any {\r\n    if(!this.cssStyleSheet) return;\r\n    let rules: CSSRuleList = this.cssStyleSheet.cssRules.length > 0 || this.cssStyleSheet.rules.length == 0 ? this.cssStyleSheet.cssRules : this.cssStyleSheet.rules;\r\n    let rule: CSSStyleRule = Array.from(rules).find(r => r instanceof CSSStyleRule && r.selectorText.toLowerCase() == selectorText.toLowerCase()) as CSSStyleRule;\r\n\r\n    // If the selector rule does not exist, create it.\r\n    if(!rule) { \r\n      let ruleIndex = this.cssStyleSheet.insertRule(selectorText + \"{ }\", rules.length);\r\n      rule = rules[ruleIndex] as CSSStyleRule;\r\n    }\r\n\r\n    return rule;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EditTextComponent } from './edit-text.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EditTextComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    EditTextComponent\r\n  ],\r\n})\r\nexport class EditTextModule { }\r\n","<div class=\"ibss-common-footer1\">\r\n  <footer class=\"px-5 ibss-common-bg\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\" [style.color]=\"content?.colors?.text\">\r\n    <div class=\"container mx-auto\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-6 col-xs-12\">\r\n          <div class=\"left-text-content\">\r\n            <p [style.color]=\"content?.colors?.text\" [innerHTML]=\"content?.copyrightText | ibssSanitize\"></p>\r\n            <!-- <p [style.color]=\"content?.colors?.text\">&copy; Techintent @ 2021. All rights reserved</p> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-6 col-xs-12\">\r\n          <div class=\"right-text-content\">\r\n            <ul class=\"social-icons\">\r\n              <li><p [style.color]=\"content?.colors?.text\" [innerHTML]=\"content?.followText | ibssSanitize\"></p></li>\r\n              <li *ngFor=\"let link of content?.links\" class=\"links\" >\r\n                  <a [style.background]=\"content?.colors?.iconBg\" *ngIf=\"link?.link && link?.link!=''\" data-title=\"{{link?.title}}\" rel=\"nofollow\" data-href=\"{{link?.link == ''? '#': link?.link }}\" target=\"_blank\">\r\n                  <i class=\"{{link?.font}}\"  [style.color]=\"content?.colors?.icon\"></i>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-common-footer1',\r\n  templateUrl: './footer1.component.html',\r\n  styleUrls: ['./footer1.component.scss']\r\n})\r\nexport class Footer1Component implements OnInit, OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() footerContent: any =  {};\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  content: any;\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n  ngOnChanges() {\r\n    console.log(\"Footer1Component\", this.footerContent);\r\n    this.content = JSON.parse(JSON.stringify(this.footerContent));\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-common-footer2',\r\n  templateUrl: './footer2.component.html',\r\n  styleUrls: ['./footer2.component.scss']\r\n})\r\nexport class Footer2Component implements OnInit, OnChanges {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() footerContent: any =  {};\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  content: any;\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n  ngOnChanges() :void{\r\n    this.content = JSON.parse(JSON.stringify(this.footerContent));\r\n  }\r\n\r\n  saveChanges(value:any) {\r\n    this.content.copyrightText = value\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-footer2\">\r\n  <div class=\"ww-footer ibss-common-bg\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\" [style.color]=\"content?.colors?.text\">\r\n    <div class=\"container text-center py-4\">\r\n      <p class=\"my-0\"><span [innerHTML]=\"content?.copyrightText | ibssSanitize\"></span></p>\r\n      <!-- <p class=\"my-0\">&copy; Techintent @ 2021. All rights reserved</p> -->\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"ibss-common-footer3\">\n    <!-- <div class=\"ww-footer ibss-common-bg\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\" [style.color]=\"content?.colors?.text\">\n      <div class=\"container text-center py-4\">\n        <p class=\"my-0\"><span [innerHTML]=\"content?.copyrightText | ibssSanitize\"></span></p>\n      </div>\n    </div> -->\n    <div class=\"vg-footer ibss-common-bg\" [ngStyle]=\"{'background-image':  (content?.backgroundImage ? 'url(' + content?.backgroundImage + ')': ''), 'background-color': content?.colors?.background}\" [style.color]=\"content?.colors?.text\">\n        <h1 class=\"text-center\" [innerHTML]=\"content?.title | ibssSanitize\"></h1>\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-lg-4 py-3\">\n              <div class=\"footer-info\">\n                <p [innerHTML]=\"content?.contactSection?.title | ibssSanitize\"></p>\n                <hr class=\"divider\" [style.borderColor]=\"content?.colors?.text\">\n                <p class=\"fs-large fg-white\" [innerHTML]=\"content?.contactSection?.content | ibssSanitize\"></p>\n              </div>\n            </div>\n            <div class=\"col-md-6 col-lg-3 py-3\">\n              <div class=\"float-lg-right\">\n                <p [innerHTML]=\"content?.followText | ibssSanitize\"></p>\n                <hr class=\"divider\" [style.borderColor]=\"content?.colors?.text\">\n                <ul class=\"list-unstyled\">\n                    <li *ngFor=\"let link of content?.links\" class=\"links\" >\n                        <a [style.color]=\"content?.colors?.text\" *ngIf=\"link?.link && link?.link!=''\" data-title=\"{{link?.title}}\" rel=\"nofollow\" data-href=\"{{link?.link == ''? '#': link?.link }}\" target=\"_blank\">\n                            {{link?.title}}\n                        </a>\n                    </li>\n                </ul>\n              </div>\n            </div>\n            <div class=\"col-md-6 col-lg-3 py-3\">\n              <div class=\"float-lg-right\">\n                <p [innerHTML]=\"content?.contactInfo?.title | ibssSanitize\"></p>\n                <hr class=\"divider\" [style.borderColor]=\"content?.colors?.text\">\n                <p class=\"fs-large fg-white\" [innerHTML]=\"content?.contactInfo?.content | ibssSanitize\"></p>\n              </div>\n            </div>\n          </div>\n          <div class=\"row justify-content-center mt-3\">\n            <div class=\"col-12\">\n              <p class=\"text-center mb-0 mt-4\" [innerHTML]=\"content?.copyrightText | ibssSanitize\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'ibss-common-footer3',\n  templateUrl: './footer3.component.html',\n  styleUrls: ['./footer3.component.scss']\n})\nexport class Footer3Component implements OnInit, OnChanges {\n\n  @Input() isDummy: boolean = true;\n  @Input() isEdit: boolean = false;\n  @Input() footerContent: any =  {};\n  @Input() isView: boolean = false;\n  @Output() onNav = new EventEmitter();\n  content: any;\n  constructor() { }\n\n  ngOnInit() { }\n  ngOnChanges() :void{\n    this.content = JSON.parse(JSON.stringify(this.footerContent));\n  }\n\n  saveChanges(value:any) {\n    this.content.copyrightText = value\n  }\n\n}","<div class=\"ibss-common-footer\" id=\"{{menuId}}\">\r\n  <ibss-common-footer1 *ngIf=\"content.id === 'IBSSCOMMONFOOTER1'\" [footerContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-footer1>\r\n  <ibss-common-footer2 *ngIf=\"content.id === 'IBSSCOMMONFOOTER2'\" [footerContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-footer2>\r\n  <ibss-common-footer3 *ngIf=\"content.id === 'IBSSCOMMONFOOTER3'\" [footerContent]=\"content\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"></ibss-common-footer3>\r\n</div>\r\n\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'ibss-common-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FooterComponent implements OnChanges  {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() menuId: any;\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  content: any;\r\n  editItem :any;\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  constructor(private ws: WizardService) { }\r\n\r\n  ngOnChanges() :void {\r\n    let content = this.config.footer1Content;\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    }\r\n    this.content = JSON.parse(JSON.stringify(content));\r\n    this.setEditData();\r\n  }\r\n\r\n  onCancel() {\r\n    this.setEditData();\r\n  }\r\n\r\n  setEditData() {\r\n    this.editItem = JSON.parse(JSON.stringify(this.content));\r\n    this.editItem.feature = \"\";\r\n  }\r\n\r\n  onDelete() {\r\n\r\n  }\r\n\r\n  onDone() {\r\n    this.content = JSON.parse(JSON.stringify(this.editItem));\r\n    this.onAction.emit({index:this.index, component:{ id: \"footerComponent\", template:JSON.parse(JSON.stringify(this.content))}});\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n  onAddLink() {\r\n\r\n    let temp = {\r\n      font:\"fa fa-link\",\r\n      title: \"link\",\r\n      link:\"https://domian.com\"\r\n    }\r\n    this.editItem.links.push(temp);\r\n  }\r\n\r\n  onDeleteLink(index: any) {\r\n    this.editItem.links.splice(index, 1);\r\n  }\r\n\r\n  onModify(index: any) {\r\n    this.ws.modifyIndex = index;\r\n  }\r\n  \r\n  OpenEditModal(index: any) {\r\n    $('#editFooterModal_'+index).modal('show');\r\n  }\r\n\r\n  onAddLinks() {\r\n    \r\n  }\r\n\r\n  onRemoveLinks(index: any) {\r\n\r\n  }\r\n}\r\n","<div class=\"ibss-common-header1\">\r\n  <header class=\"header-area fixed-top ibss-common-bg\" [ngClass]=\"{'edit-mode': isEdit}\" [ngStyle]=\"{'background-image':  (headerContent?.backgroundImage ? 'url(' + headerContent?.backgroundImage + ')': ''), 'background-color': headerContent?.colors?.background}\" [style.color]=\"headerContent?.colors?.text\"\r\n  [style.postion]=\"isView ? 'fixed':'relative'\" [style.marginBottom.px]=\"isView ? '80px':''\">\r\n    <div class=\"container mx-auto\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <nav class=\"main-nav\" id=\"ibss-common-header\">\r\n            <img class=\"logo-image\" *ngIf=\"headerContent?.logoImage\" [src]=\"headerContent?.logoImage\">\r\n            <a data-href=\"/\" class=\"logo font-weight-bold\" [style.color]=\"headerContent?.colors?.title\">\r\n              {{headerContent?.title}}\r\n            </a>\r\n            <ul class=\"nav\">\r\n              <div *ngFor=\"let page of headerContent?.pages\">\r\n                <div *ngIf=\"page.subPages.length === 0\">\r\n                  <li class=\"scroll-to-section\"><a [style.color]=\"headerContent?.colors?.text\" href=\"javascript:void(0);\" (click)=\"onNavigate(page.id)\" class=\"active font-weight-bold\">{{page.title}}</a></li>\r\n                </div>\r\n                <div *ngIf=\"page.subPages.length>0\">\r\n                  <li class=\"submenu\">\r\n                    <a [style.color]=\"headerContent?.colors?.text\" data-href=\"javascript:void(0);\"(click)=\"onNavigate(page.id)\">{{page.title}} <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                    <ul>\r\n                      <li *ngFor=\"let subPage of page?.subPages\" ><a [style.color]=\"headerContent?.colors?.text\" href=\"javascript:void(0);\" (click)=\"onNavigate(subPage.id)\" class=\"font-weight-bold\">{{ subPage?.title}}</a></li>\r\n                    </ul>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n              <li *ngIf=\"headerContent?.showLogin\"><a [style.background]=\"headerContent?.colors?.text\" [style.color]=\"headerContent?.colors?.background\" href=\"javascript:void(0);\" class=\"btn btn-sm font-weight-bold\" [routerLink]=\"['login/', profileName]\">Login</a></li>\r\n            </ul>\r\n            <a class='menu-trigger' [style.color]=\"headerContent?.colors?.text\">\r\n              <span>Menu</span>\r\n            </a>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n</div>\r\n","import { Component, EventEmitter, Input, NgZone, OnChanges, Output, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ibss-common-header1',\r\n  templateUrl: './header1.component.html',\r\n  styleUrls: ['./header1.component.scss']\r\n})\r\nexport class Header1Component implements OnChanges {\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() headerContent: any;\r\n  @Input() index: any;\r\n  @Input() isView: boolean = false;\r\n  @Input() profileName:any =\"\";\r\n  @Output() onNav = new EventEmitter();\r\n  editHeader :any;\r\n  \r\n  constructor(private ngZone:NgZone) { }\r\n\r\n  ngOnChanges() {\r\n    this.editHeader = JSON.parse(JSON.stringify(this.headerContent));\r\n    this.editHeader.pages.map((value: any, indx: any) => {\r\n      value.isEdit=false;\r\n      value.hasSupPages= (value.subPages.length>0)\r\n    });\r\n  }\r\n\r\n\r\n  setId(page: any) {\r\n    if (page.title && page.title.trim().length>0) {\r\n      page.id = page.title.replace(/ /g,\"_\")\r\n    }\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    this.onNav.emit(id);\r\n  }\r\n \r\n}\r\n","\r\n<div class=\"ibss-common-header2\">\r\n  <div class=\"ww-nav-bar fixed-top bg-light\" [ngClass]=\"{'edit-mode': isEdit}\" >\r\n    <nav id=\"ibss-common-header\" class=\"navbar navbar-expand-lg navbar-light ibss-common-bg\" [ngStyle]=\"{'background-image':  (headerContent?.backgroundImage ? 'url(' + headerContent?.backgroundImage + ')': ''), 'background-color': headerContent?.colors?.background}\" [style.color]=\"headerContent?.colors?.text\">\r\n      <div class=\"container\"><a href=\"javascript:void(0)\" *ngIf=\"headerContent?.logoImage\">\r\n          <!-- <svg *ngIf=\"!headerContent?.logoImage\" class=\"heart\" viewBox=\"0 0 32 29.6\">\r\n            <path\r\n              d=\"M23.6,0c-3.4,0-6.3,2.7-7.6,5.6C14.7,2.7,11.8,0,8.4,0C3.8,0,0,3.8,0,8.4c0,9.4,9.5,11.9,16,21.2c6.1-9.3,16-12.1,16-21.2C32,3.8,28.2,0,23.6,0z\" />\r\n          </svg> -->\r\n          <!-- <img class=\"logo-image\" *ngIf=\"headerContent?.logoImage\" [src]=\"headerContent?.logoImage\"/> -->\r\n          <img class=\"logo-image\" [src]=\"headerContent?.logoImage\"/>\r\n        </a>\r\n        <h1 class=\"h2\"><a class=\"pl-2 navbar-brand font-weight-bold\"  href=\"javascript:void(0)\" [style.color]=\"headerContent?.colors?.title\">{{headerContent?.title}}</a></h1>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ww-navbarNav\"\r\n          aria-controls=\"ww-navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span\r\n            class=\"navbar-toggler-icon\" (click)=\"onMenuToggle()\"></span></button>\r\n        <div class=\"collapse navbar-collapse text-uppercase\" id=\"ww-navbarNav\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <div *ngFor=\"let page of headerContent?.pages\">\r\n              <div *ngIf=\"page.subPages.length === 0\">\r\n                <li class=\"nav-item\"><a\r\n                    [style.color]=\"headerContent?.colors?.text\"\r\n                    href=\"javascript:void(0);\" (click)=\"onNavigate(page.id)\" data-toggle=\"collapse\" data-target=\"#ww-navbarNav\" class=\"active font-weight-bold\">{{page.title}}</a></li>\r\n              </div>\r\n              <div *ngIf=\"page.subPages.length>0\">\r\n                <li class=\"submenu\">\r\n                  <a data-href=\"javascript:void(0);\" class=\"font-weight-bold\"\r\n                    [style.color]=\"headerContent?.colors?.text\" (click)=\"onNavigate(page.id)\">{{page.title}} <i\r\n                      class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                  </a>\r\n                  <ul>\r\n                    <li *ngFor=\"let subPage of page?.subPages\"><a\r\n                        [style.color]=\"headerContent?.colors?.text\" href=\"javascript:void(0);\"\r\n                        (click)=\"onNavigate(subPage.id)\">{{ subPage?.title}}</a></li>\r\n                  </ul>\r\n                </li>\r\n              </div>\r\n            </div>\r\n            <li *ngIf=\"headerContent?.showLogin\"><a [style.background]=\"headerContent?.colors?.text\" [style.color]=\"headerContent?.colors?.background\" href=\"javascript:void(0);\" class=\"btn btn-sm font-weight-bold\" [routerLink]=\"['login/', profileName]\">Login</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport * as moment  from 'moment';\r\nimport { CONFIG } from 'src/app/config';\r\n@Component({\r\n  selector: 'ibss-common-header2',\r\n  templateUrl: './header2.component.html',\r\n  styleUrls: ['./header2.component.scss']\r\n})\r\nexport class Header2Component implements OnChanges {\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() headerContent: any;\r\n  @Input() index: any;\r\n  @Input() profileName:any =\"\";\r\n  @Input() isView: boolean = false;\r\n  @Output() onNav = new EventEmitter();\r\n  editHeader :any;\r\n  formattedDate: any = \"\";\r\n  config: typeof CONFIG = CONFIG;\r\n  constructor() {\r\n    \r\n   }\r\n\r\n   ngOnChanges() {\r\n    this.formattedDate = moment(this.headerContent.marriageDate).format('Do MMMM YYYY');\r\n    this.editHeader = JSON.parse(JSON.stringify(this.headerContent));\r\n    this.editHeader.pages.map((value: any, indx: any) => {\r\n      value.isEdit=false;\r\n      value.hasSubPages= (value.subPages.length>0)\r\n    });\r\n  }\r\n\r\n\r\n  setId(page: any) {\r\n    if (page.title && page.title.trim().length>0) {\r\n      page.id = page.title.replace(/ /g,\"_\")\r\n    }\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    this.onMenuToggle();\r\n    this.onNav.emit(id);\r\n  }\r\n\r\n  onMenuToggle() {\r\n    console.log(\"onMenuToggle\");\r\n    this.config.isMenuOpen = !this.config.isMenuOpen;\r\n  }\r\n\r\n}\r\n","<div class=\"ibss-common-header3\">\n  <div class=\"navbar navbar-expand-lg navbar-dark sticky w-100 ibss-common-bg\" data-offset=\"500\"  [ngStyle]=\"{'background-image':  (headerContent?.backgroundImage ? 'url(' + headerContent?.backgroundImage + ')': ''), 'background-color': headerContent?.colors?.background}\" [style.color]=\"headerContent?.colors?.text\">\n    <div class=\"container\">\n\n      <a href=\"javascript:void(0)\" *ngIf=\"headerContent?.logoImage\">\n        <img class=\"logo-image\" [src]=\"headerContent?.logoImage\"/>\n      </a>\n      <a href=\"javascript:void(0)\" [style.color]=\"headerContent?.colors?.title\" class=\"navbar-brand\">{{headerContent?.title}}</a>\n      <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#main-navbar\" aria-expanded=\"true\">\n        <span class=\"ti-menu\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"main-navbar\">\n        <ul class=\"navbar-nav ml-auto\">\n          <div *ngFor=\"let page of headerContent?.pages\">\n            <div *ngIf=\"page.subPages.length === 0\">\n              <li class=\"nav-item\" ><a data-animate=\"scrolling\" \n                  [style.color]=\"headerContent?.colors?.text\"\n                  href=\"javascript:void(0);\" (click)=\"onNavigate(page.id)\" data-toggle=\"collapse\" data-target=\"#ww-navbarNav\" class=\"active font-weight-bold\">{{page.title}}</a></li>\n              <li class=\"nav-item\" *ngIf=\"headerContent?.showLogin\" >\n                <button type=\"button\" class=\"btn\" [ngStyle]=\"{'background-image':  (headerContent?.backgroundImage ? 'url(' + headerContent?.backgroundImage + ')': ''), 'background-color': headerContent?.colors?.background}\" [style.color]=\"headerContent?.colors?.text\">Login</button> \n            </div>\n            <div *ngIf=\"page.subPages.length>0\">\n              <li class=\"submenu\">\n                <a data-href=\"javascript:void(0);\" class=\"font-weight-bold\"\n                  [style.color]=\"headerContent?.colors?.text\" (click)=\"onNavigate(page.id)\">{{page.title}} <i\n                    class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                </a>\n                <ul>\n                  <li *ngFor=\"let subPage of page?.subPages\"><a\n                      [style.color]=\"headerContent?.colors?.text\" href=\"javascript:void(0);\"\n                      (click)=\"onNavigate(subPage.id)\">{{ subPage?.title}}</a></li>\n                </ul>\n              </li>\n            </div>\n          </div>\n          <li *ngIf=\"headerContent?.showLogin\"><a [style.background]=\"headerContent?.colors?.text\" [style.color]=\"headerContent?.colors?.background\" href=\"javascript:void(0);\" class=\"btn btn-sm font-weight-bold\" [routerLink]=\"['login/', profileName]\">Login</a></li>\n        </ul>\n        <!-- <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item active\">\n            <a data-href=\"javascript:void(0);\" class=\"font-weight-bold\"\n            [style.color]=\"headerContent?.colors?.text\" (click)=\"onNavigate(page.id)\" class=\"nav-link\" data-animate=\"scrolling\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"#about\" class=\"nav-link\" data-animate=\"scrolling\">About</a>\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"#portfolio\" class=\"nav-link\" data-animate=\"scrolling\">Portfolio</a>\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"#blog\" class=\"nav-link\" data-animate=\"scrolling\">Blog</a>\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"#contact\" class=\"nav-link\" data-animate=\"scrolling\">Contact</a>\n          </li>\n        </ul> -->\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport * as moment  from 'moment';\nimport { CONFIG } from 'src/app/config';\n\n@Component({\n  selector: 'ibss-common-header3',\n  templateUrl: './header3.component.html',\n  styleUrls: ['./header3.component.scss']\n})\nexport class Header3Component implements OnChanges {\n\n  @Input() isDummy: boolean = true;\n  @Input() isEdit: boolean = false;\n  @Input() headerContent: any;\n  @Input() index: any;\n  @Input() isView: boolean = false;\n  @Input() profileName:any =\"\";\n  @Output() onNav = new EventEmitter();\n  editHeader: any;\n  formattedDate: any = \"\";\n  config: typeof CONFIG = CONFIG;\n  constructor() {\n\n  }\n\n  ngOnChanges() {\n    this.formattedDate = moment(this.headerContent.marriageDate).format('Do MMMM YYYY');\n    this.editHeader = JSON.parse(JSON.stringify(this.headerContent));\n    this.editHeader.pages.map((value: any, indx: any) => {\n      value.isEdit = false;\n      value.subPages = (value.subPages.length > 0)\n    });\n    console.log(\"Header3Component\",this.editHeader);\n  }\n\n\n  setId(page: any) {\n    if (page.title && page.title.trim().length > 0) {\n      page.id = page.title.replace(/ /g, \"_\")\n    }\n  }\n\n  onNavigate(id: any) {\n    this.onMenuToggle();\n    this.onNav.emit(id);\n  }\n\n  onLogin(id: any) {\n    this.onMenuToggle();\n    this.onNav.emit(id);\n  }\n\n  onMenuToggle() {\n    console.log(\"onMenuToggle\");\n    this.config.isMenuOpen = !this.config.isMenuOpen;\n  }\n}\n","<div class=\"ibss-common-header\" id=\"{{menuId}}\">\r\n  <ibss-common-header1 *ngIf=\"content?.id === 'IBSSCOMMONHEADER1'\" [profileName]=\"profileName\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n    [headerContent]=\"content\" (onNav)=\"onNavigate($event)\"></ibss-common-header1>\r\n\r\n  <ibss-common-header2 *ngIf=\"content?.id === 'IBSSCOMMONHEADER2'\" [profileName]=\"profileName\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n    [headerContent]=\"content\" (onNav)=\"onNavigate($event)\"></ibss-common-header2>\r\n\r\n  <ibss-common-header3 *ngIf=\"content?.id === 'IBSSCOMMONHEADER3'\" [profileName]=\"profileName\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"\r\n    [headerContent]=\"content\" (onNav)=\"onNavigate($event)\"></ibss-common-header3>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { StyleService } from 'src/app/services/style.service';\r\nimport { WIZARD_CONFIG } from 'src/app/wizard/wizard.config';\r\nimport { WizardService } from 'src/app/wizard/wizard.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'ibss-common-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class HeaderComponent implements OnChanges {\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Input() index: any;\r\n  @Input() menuId: any;\r\n  @Input() isView: boolean = false;\r\n  @Input() profileName:any =\"\";\r\n  @Output() onNav = new EventEmitter();\r\n  @Output() onAction = new EventEmitter();\r\n  config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\r\n  headers = [\r\n    {\r\n      id:\"IBSSCOMMONHEADER1\",\r\n      title:\"Header Layout 1\"\r\n    },\r\n    {\r\n      id:\"IBSSCOMMONHEADER2\",\r\n      title:\"Header Layout 2\"\r\n    }\r\n\r\n  ]\r\n\r\n  content: any;\r\n\r\n  editHeader :any;\r\n  constructor(private ws:WizardService, private styleService:StyleService) { }\r\n\r\n  ngOnChanges() {\r\n    this.setEditData();\r\n  }\r\n\r\n  onCancel() {\r\n    this.setEditData();\r\n  }\r\n\r\n  setEditData() {\r\n\r\n    let content = this.config.header1Content;\r\n    if (this.inputPayload) {\r\n      content = this.inputPayload;\r\n    }\r\n    this.content = JSON.parse(JSON.stringify(content));\r\n    console.log(\"HeaderComponent\", this.content);\r\n\r\n    if (this.isEdit) {\r\n      const hNum = '.ibss-common-header'+this.content.id.replace('IBSSCOMMONHEADER','') + ' .'+this.content.class;\r\n      this.styleService.setStyle(hNum,'position','relative' )\r\n    }\r\n\r\n    this.editHeader = JSON.parse(JSON.stringify(this.content));\r\n    this.editHeader.pages.map((value: any, indx: any) => {\r\n      value.isEdit=false;\r\n      value.hasSupPages= (value.subPages.length>0)\r\n    });\r\n  }\r\n\r\n  setId(page: any) {\r\n    if (page.title && page.title.trim().length>0) {\r\n      page.id = page.title.replace(/ /g,\"_\")\r\n    }\r\n  }\r\n\r\n  onAdd(type: any,page: any){\r\n    const name = (type === 'page') ? \"Page\" : \"SubPage\";\r\n    let temp:any = {\r\n      title:name,\r\n      type:\"section\",\r\n      id:name\r\n    }\r\n\r\n    if (type === 'page') { \r\n      temp.title = temp.title+\"_\"+(this.editHeader.pages.length+1);\r\n      temp.subPages=[];\r\n      temp.isEdit=false;\r\n      temp.hasSupPages=false;\r\n      this.editHeader.pages.push(temp);\r\n    }\r\n    else{\r\n      temp.title = temp.title+\"_\"+ (page.subPages.length+1);\r\n      page.subPages.push(temp);\r\n    }\r\n  }\r\n\r\n  onDone() {\r\n    this.content = JSON.parse(JSON.stringify(this.editHeader));\r\n    this.onAction.emit({index:this.index, component:{ id: \"headerComponent\", template:JSON.parse(JSON.stringify(this.editHeader))}});\r\n  }\r\n\r\n  onDelete(index: any) {\r\n    this.editHeader.pages.splice(index,1);\r\n  }\r\n\r\n  onNavigate(id: any){\r\n    console.log('onNvigate', id);\r\n    this.onNav.emit(id);\r\n  }\r\n \r\n  readURL(event: any): void {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = e => {\r\n        // this.editItems[Number(this.editSlide.selected)].image = reader.result\r\n        this.editHeader.logoImage = reader.result\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  onModify(index: any) {\r\n    this.ws.modifyIndex = index;\r\n  }\r\n\r\n  OpenEditModal(index: any) {\r\n    $('#editHeaderModal_'+index).modal('show');\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, NgZone, Inject, PLATFORM_ID, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, BehaviorSubject, of, combineLatest, pipe, Observable, fromEventPattern, merge } from 'rxjs';\nimport { take, startWith, combineLatest as combineLatest$1, skipWhile, map, scan, distinctUntilChanged, tap, mergeMap, takeUntil, publish, switchMap, withLatestFrom, filter } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"youtubeContainer\"];\nconst DEFAULT_PLAYER_WIDTH = 640;\nconst DEFAULT_PLAYER_HEIGHT = 390;\n/**\n * Angular component that renders a YouTube player via the YouTube player\n * iframe API.\n * @see https://developers.google.com/youtube/iframe_api_reference\n */\nclass YouTubePlayer {\n    constructor(_ngZone, platformId) {\n        this._ngZone = _ngZone;\n        this._youtubeContainer = new Subject();\n        this._destroyed = new Subject();\n        this._playerChanges = new BehaviorSubject(undefined);\n        this._videoId = new BehaviorSubject(undefined);\n        this._height = new BehaviorSubject(DEFAULT_PLAYER_HEIGHT);\n        this._width = new BehaviorSubject(DEFAULT_PLAYER_WIDTH);\n        this._startSeconds = new BehaviorSubject(undefined);\n        this._endSeconds = new BehaviorSubject(undefined);\n        this._suggestedQuality = new BehaviorSubject(undefined);\n        this._playerVars = new BehaviorSubject(undefined);\n        /** Outputs are direct proxies from the player itself. */\n        this.ready = this._getLazyEmitter('onReady');\n        this.stateChange = this._getLazyEmitter('onStateChange');\n        this.error = this._getLazyEmitter('onError');\n        this.apiChange = this._getLazyEmitter('onApiChange');\n        this.playbackQualityChange = this._getLazyEmitter('onPlaybackQualityChange');\n        this.playbackRateChange = this._getLazyEmitter('onPlaybackRateChange');\n        this._isBrowser = isPlatformBrowser(platformId);\n    }\n    /** YouTube Video ID to view */\n    get videoId() { return this._videoId.value; }\n    set videoId(videoId) {\n        this._videoId.next(videoId);\n    }\n    /** Height of video player */\n    get height() { return this._height.value; }\n    set height(height) {\n        this._height.next(height || DEFAULT_PLAYER_HEIGHT);\n    }\n    /** Width of video player */\n    get width() { return this._width.value; }\n    set width(width) {\n        this._width.next(width || DEFAULT_PLAYER_WIDTH);\n    }\n    /** The moment when the player is supposed to start playing */\n    set startSeconds(startSeconds) {\n        this._startSeconds.next(startSeconds);\n    }\n    /** The moment when the player is supposed to stop playing */\n    set endSeconds(endSeconds) {\n        this._endSeconds.next(endSeconds);\n    }\n    /** The suggested quality of the player */\n    set suggestedQuality(suggestedQuality) {\n        this._suggestedQuality.next(suggestedQuality);\n    }\n    /**\n     * Extra parameters used to configure the player. See:\n     * https://developers.google.com/youtube/player_parameters.html?playerVersion=HTML5#Parameters\n     */\n    get playerVars() { return this._playerVars.value; }\n    set playerVars(playerVars) {\n        this._playerVars.next(playerVars);\n    }\n    ngOnInit() {\n        // Don't do anything if we're not in a browser environment.\n        if (!this._isBrowser) {\n            return;\n        }\n        let iframeApiAvailableObs = of(true);\n        if (!window.YT || !window.YT.Player) {\n            if (this.showBeforeIframeApiLoads && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Namespace YT not found, cannot construct embedded youtube player. ' +\n                    'Please install the YouTube Player API Reference for iframe Embeds: ' +\n                    'https://developers.google.com/youtube/iframe_api_reference');\n            }\n            const iframeApiAvailableSubject = new Subject();\n            this._existingApiReadyCallback = window.onYouTubeIframeAPIReady;\n            window.onYouTubeIframeAPIReady = () => {\n                if (this._existingApiReadyCallback) {\n                    this._existingApiReadyCallback();\n                }\n                this._ngZone.run(() => iframeApiAvailableSubject.next(true));\n            };\n            iframeApiAvailableObs = iframeApiAvailableSubject.pipe(take(1), startWith(false));\n        }\n        // An observable of the currently loaded player.\n        const playerObs = createPlayerObservable(this._youtubeContainer, this._videoId, iframeApiAvailableObs, this._width, this._height, this._playerVars, this._ngZone).pipe(tap(player => {\n            // Emit this before the `waitUntilReady` call so that we can bind to\n            // events that happen as the player is being initialized (e.g. `onReady`).\n            this._playerChanges.next(player);\n        }), waitUntilReady(player => {\n            // Destroy the player if loading was aborted so that we don't end up leaking memory.\n            if (!playerIsReady(player)) {\n                player.destroy();\n            }\n        }), takeUntil(this._destroyed), publish());\n        // Set up side effects to bind inputs to the player.\n        playerObs.subscribe(player => {\n            this._player = player;\n            if (player && this._pendingPlayerState) {\n                this._initializePlayer(player, this._pendingPlayerState);\n            }\n            this._pendingPlayerState = undefined;\n        });\n        bindSizeToPlayer(playerObs, this._width, this._height);\n        bindSuggestedQualityToPlayer(playerObs, this._suggestedQuality);\n        bindCueVideoCall(playerObs, this._videoId, this._startSeconds, this._endSeconds, this._suggestedQuality, this._destroyed);\n        // After all of the subscriptions are set up, connect the observable.\n        playerObs.connect();\n    }\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 11.0.0\n     */\n    createEventsBoundInZone() {\n        return {};\n    }\n    ngAfterViewInit() {\n        this._youtubeContainer.next(this.youtubeContainer.nativeElement);\n    }\n    ngOnDestroy() {\n        if (this._player) {\n            this._player.destroy();\n            window.onYouTubeIframeAPIReady = this._existingApiReadyCallback;\n        }\n        this._playerChanges.complete();\n        this._videoId.complete();\n        this._height.complete();\n        this._width.complete();\n        this._startSeconds.complete();\n        this._endSeconds.complete();\n        this._suggestedQuality.complete();\n        this._youtubeContainer.complete();\n        this._playerVars.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#playVideo */\n    playVideo() {\n        if (this._player) {\n            this._player.playVideo();\n        }\n        else {\n            this._getPendingState().playbackState = YT.PlayerState.PLAYING;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#pauseVideo */\n    pauseVideo() {\n        if (this._player) {\n            this._player.pauseVideo();\n        }\n        else {\n            this._getPendingState().playbackState = YT.PlayerState.PAUSED;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#stopVideo */\n    stopVideo() {\n        if (this._player) {\n            this._player.stopVideo();\n        }\n        else {\n            // It seems like YouTube sets the player to CUED when it's stopped.\n            this._getPendingState().playbackState = YT.PlayerState.CUED;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#seekTo */\n    seekTo(seconds, allowSeekAhead) {\n        if (this._player) {\n            this._player.seekTo(seconds, allowSeekAhead);\n        }\n        else {\n            this._getPendingState().seek = { seconds, allowSeekAhead };\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#mute */\n    mute() {\n        if (this._player) {\n            this._player.mute();\n        }\n        else {\n            this._getPendingState().muted = true;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#unMute */\n    unMute() {\n        if (this._player) {\n            this._player.unMute();\n        }\n        else {\n            this._getPendingState().muted = false;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#isMuted */\n    isMuted() {\n        if (this._player) {\n            return this._player.isMuted();\n        }\n        if (this._pendingPlayerState) {\n            return !!this._pendingPlayerState.muted;\n        }\n        return false;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#setVolume */\n    setVolume(volume) {\n        if (this._player) {\n            this._player.setVolume(volume);\n        }\n        else {\n            this._getPendingState().volume = volume;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getVolume */\n    getVolume() {\n        if (this._player) {\n            return this._player.getVolume();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.volume != null) {\n            return this._pendingPlayerState.volume;\n        }\n        return 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate */\n    setPlaybackRate(playbackRate) {\n        if (this._player) {\n            return this._player.setPlaybackRate(playbackRate);\n        }\n        else {\n            this._getPendingState().playbackRate = playbackRate;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackRate */\n    getPlaybackRate() {\n        if (this._player) {\n            return this._player.getPlaybackRate();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.playbackRate != null) {\n            return this._pendingPlayerState.playbackRate;\n        }\n        return 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getAvailablePlaybackRates */\n    getAvailablePlaybackRates() {\n        return this._player ? this._player.getAvailablePlaybackRates() : [];\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getVideoLoadedFraction */\n    getVideoLoadedFraction() {\n        return this._player ? this._player.getVideoLoadedFraction() : 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getPlayerState */\n    getPlayerState() {\n        if (!this._isBrowser || !window.YT) {\n            return undefined;\n        }\n        if (this._player) {\n            return this._player.getPlayerState();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.playbackState != null) {\n            return this._pendingPlayerState.playbackState;\n        }\n        return YT.PlayerState.UNSTARTED;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getCurrentTime */\n    getCurrentTime() {\n        if (this._player) {\n            return this._player.getCurrentTime();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.seek) {\n            return this._pendingPlayerState.seek.seconds;\n        }\n        return 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackQuality */\n    getPlaybackQuality() {\n        return this._player ? this._player.getPlaybackQuality() : 'default';\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getAvailableQualityLevels */\n    getAvailableQualityLevels() {\n        return this._player ? this._player.getAvailableQualityLevels() : [];\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getDuration */\n    getDuration() {\n        return this._player ? this._player.getDuration() : 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getVideoUrl */\n    getVideoUrl() {\n        return this._player ? this._player.getVideoUrl() : '';\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getVideoEmbedCode */\n    getVideoEmbedCode() {\n        return this._player ? this._player.getVideoEmbedCode() : '';\n    }\n    /** Gets an object that should be used to store the temporary API state. */\n    _getPendingState() {\n        if (!this._pendingPlayerState) {\n            this._pendingPlayerState = {};\n        }\n        return this._pendingPlayerState;\n    }\n    /** Initializes a player from a temporary state. */\n    _initializePlayer(player, state) {\n        const { playbackState, playbackRate, volume, muted, seek } = state;\n        switch (playbackState) {\n            case YT.PlayerState.PLAYING:\n                player.playVideo();\n                break;\n            case YT.PlayerState.PAUSED:\n                player.pauseVideo();\n                break;\n            case YT.PlayerState.CUED:\n                player.stopVideo();\n                break;\n        }\n        if (playbackRate != null) {\n            player.setPlaybackRate(playbackRate);\n        }\n        if (volume != null) {\n            player.setVolume(volume);\n        }\n        if (muted != null) {\n            muted ? player.mute() : player.unMute();\n        }\n        if (seek != null) {\n            player.seekTo(seek.seconds, seek.allowSeekAhead);\n        }\n    }\n    /** Gets an observable that adds an event listener to the player when a user subscribes to it. */\n    _getLazyEmitter(name) {\n        // Start with the stream of players. This way the events will be transferred\n        // over to the new player if it gets swapped out under-the-hood.\n        return this._playerChanges.pipe(\n        // Switch to the bound event. `switchMap` ensures that the old event is removed when the\n        // player is changed. If there's no player, return an observable that never emits.\n        switchMap(player => {\n            return player ? fromEventPattern((listener) => {\n                player.addEventListener(name, listener);\n            }, (listener) => {\n                // The API seems to throw when we try to unbind from a destroyed player and it doesn't\n                // expose whether the player has been destroyed so we have to wrap it in a try/catch to\n                // prevent the entire stream from erroring out.\n                try {\n                    if (player.removeEventListener) {\n                        player.removeEventListener(name, listener);\n                    }\n                }\n                catch (_a) { }\n            }) : of();\n        }), \n        // By default we run all the API interactions outside the zone\n        // so we have to bring the events back in manually when they emit.\n        (source) => new Observable(observer => source.subscribe({\n            next: value => this._ngZone.run(() => observer.next(value)),\n            error: error => observer.error(error),\n            complete: () => observer.complete()\n        })), \n        // Ensures that everything is cleared out on destroy.\n        takeUntil(this._destroyed));\n    }\n}\nYouTubePlayer.ɵfac = function YouTubePlayer_Factory(t) { return new (t || YouTubePlayer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nYouTubePlayer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: YouTubePlayer, selectors: [[\"youtube-player\"]], viewQuery: function YouTubePlayer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.youtubeContainer = _t.first);\n    } }, inputs: { videoId: \"videoId\", height: \"height\", width: \"width\", startSeconds: \"startSeconds\", endSeconds: \"endSeconds\", suggestedQuality: \"suggestedQuality\", playerVars: \"playerVars\", showBeforeIframeApiLoads: \"showBeforeIframeApiLoads\" }, outputs: { ready: \"ready\", stateChange: \"stateChange\", error: \"error\", apiChange: \"apiChange\", playbackQualityChange: \"playbackQualityChange\", playbackRateChange: \"playbackRateChange\" }, decls: 2, vars: 0, consts: [[\"youtubeContainer\", \"\"]], template: function YouTubePlayer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } }, encapsulation: 2, changeDetection: 0 });\nYouTubePlayer.ctorParameters = () => [\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nYouTubePlayer.propDecorators = {\n    videoId: [{ type: Input }],\n    height: [{ type: Input }],\n    width: [{ type: Input }],\n    startSeconds: [{ type: Input }],\n    endSeconds: [{ type: Input }],\n    suggestedQuality: [{ type: Input }],\n    playerVars: [{ type: Input }],\n    showBeforeIframeApiLoads: [{ type: Input }],\n    ready: [{ type: Output }],\n    stateChange: [{ type: Output }],\n    error: [{ type: Output }],\n    apiChange: [{ type: Output }],\n    playbackQualityChange: [{ type: Output }],\n    playbackRateChange: [{ type: Output }],\n    youtubeContainer: [{ type: ViewChild, args: ['youtubeContainer',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(YouTubePlayer, [{\n        type: Component,\n        args: [{\n                selector: 'youtube-player',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                // This div is *replaced* by the YouTube player embed.\n                template: '<div #youtubeContainer></div>'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { ready: [{\n            type: Output\n        }], stateChange: [{\n            type: Output\n        }], error: [{\n            type: Output\n        }], apiChange: [{\n            type: Output\n        }], playbackQualityChange: [{\n            type: Output\n        }], playbackRateChange: [{\n            type: Output\n        }], videoId: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], startSeconds: [{\n            type: Input\n        }], endSeconds: [{\n            type: Input\n        }], suggestedQuality: [{\n            type: Input\n        }], playerVars: [{\n            type: Input\n        }], showBeforeIframeApiLoads: [{\n            type: Input\n        }], youtubeContainer: [{\n            type: ViewChild,\n            args: ['youtubeContainer']\n        }] }); })();\n/** Listens to changes to the given width and height and sets it on the player. */\nfunction bindSizeToPlayer(playerObs, widthObs, heightObs) {\n    return combineLatest([playerObs, widthObs, heightObs])\n        .subscribe(([player, width, height]) => player && player.setSize(width, height));\n}\n/** Listens to changes from the suggested quality and sets it on the given player. */\nfunction bindSuggestedQualityToPlayer(playerObs, suggestedQualityObs) {\n    return combineLatest([\n        playerObs,\n        suggestedQualityObs\n    ]).subscribe(([player, suggestedQuality]) => player && suggestedQuality && player.setPlaybackQuality(suggestedQuality));\n}\n/**\n * Returns an observable that emits the loaded player once it's ready. Certain properties/methods\n * won't be available until the iframe finishes loading.\n * @param onAbort Callback function that will be invoked if the player loading was aborted before\n * it was able to complete. Can be used to clean up any loose references.\n */\nfunction waitUntilReady(onAbort) {\n    return mergeMap(player => {\n        if (!player) {\n            return of(undefined);\n        }\n        if (playerIsReady(player)) {\n            return of(player);\n        }\n        // Since removeEventListener is not on Player when it's initialized, we can't use fromEvent.\n        // The player is not initialized fully until the ready is called.\n        return new Observable(emitter => {\n            let aborted = false;\n            let resolved = false;\n            const onReady = (event) => {\n                resolved = true;\n                if (!aborted) {\n                    event.target.removeEventListener('onReady', onReady);\n                    emitter.next(event.target);\n                }\n            };\n            player.addEventListener('onReady', onReady);\n            return () => {\n                aborted = true;\n                if (!resolved) {\n                    onAbort(player);\n                }\n            };\n        }).pipe(take(1), startWith(undefined));\n    });\n}\n/** Create an observable for the player based on the given options. */\nfunction createPlayerObservable(youtubeContainer, videoIdObs, iframeApiAvailableObs, widthObs, heightObs, playerVarsObs, ngZone) {\n    const playerOptions = combineLatest([videoIdObs, playerVarsObs]).pipe(withLatestFrom(combineLatest([widthObs, heightObs])), map(([constructorOptions, sizeOptions]) => {\n        const [videoId, playerVars] = constructorOptions;\n        const [width, height] = sizeOptions;\n        return videoId ? ({ videoId, playerVars, width, height }) : undefined;\n    }));\n    return combineLatest([youtubeContainer, playerOptions, of(ngZone)])\n        .pipe(skipUntilRememberLatest(iframeApiAvailableObs), scan(syncPlayerState, undefined), distinctUntilChanged());\n}\n/** Skips the given observable until the other observable emits true, then emit the latest. */\nfunction skipUntilRememberLatest(notifier) {\n    return pipe(combineLatest$1(notifier), skipWhile(([_, doneSkipping]) => !doneSkipping), map(([value]) => value));\n}\n/** Destroy the player if there are no options, or create the player if there are options. */\nfunction syncPlayerState(player, [container, videoOptions, ngZone]) {\n    if (player && videoOptions && player.playerVars !== videoOptions.playerVars) {\n        // The player needs to be recreated if the playerVars are different.\n        player.destroy();\n    }\n    else if (!videoOptions) {\n        if (player) {\n            // Destroy the player if the videoId was removed.\n            player.destroy();\n        }\n        return;\n    }\n    else if (player) {\n        return player;\n    }\n    // Important! We need to create the Player object outside of the `NgZone`, because it kicks\n    // off a 250ms setInterval which will continually trigger change detection if we don't.\n    const newPlayer = ngZone.runOutsideAngular(() => new YT.Player(container, videoOptions));\n    newPlayer.videoId = videoOptions.videoId;\n    newPlayer.playerVars = videoOptions.playerVars;\n    return newPlayer;\n}\n/**\n * Call cueVideoById if the videoId changes, or when start or end seconds change. cueVideoById will\n * change the loaded video id to the given videoId, and set the start and end times to the given\n * start/end seconds.\n */\nfunction bindCueVideoCall(playerObs, videoIdObs, startSecondsObs, endSecondsObs, suggestedQualityObs, destroyed) {\n    const cueOptionsObs = combineLatest([startSecondsObs, endSecondsObs])\n        .pipe(map(([startSeconds, endSeconds]) => ({ startSeconds, endSeconds })));\n    // Only respond to changes in cue options if the player is not running.\n    const filteredCueOptions = cueOptionsObs\n        .pipe(filterOnOther(playerObs, player => !!player && !hasPlayerStarted(player)));\n    // If the video id changed, there's no reason to run 'cue' unless the player\n    // was initialized with a different video id.\n    const changedVideoId = videoIdObs\n        .pipe(filterOnOther(playerObs, (player, videoId) => !!player && player.videoId !== videoId));\n    // If the player changed, there's no reason to run 'cue' unless there are cue options.\n    const changedPlayer = playerObs.pipe(filterOnOther(combineLatest([videoIdObs, cueOptionsObs]), ([videoId, cueOptions], player) => !!player &&\n        (videoId != player.videoId || !!cueOptions.startSeconds || !!cueOptions.endSeconds)));\n    merge(changedPlayer, changedVideoId, filteredCueOptions)\n        .pipe(withLatestFrom(combineLatest([playerObs, videoIdObs, cueOptionsObs, suggestedQualityObs])), map(([_, values]) => values), takeUntil(destroyed))\n        .subscribe(([player, videoId, cueOptions, suggestedQuality]) => {\n        if (!videoId || !player) {\n            return;\n        }\n        player.videoId = videoId;\n        player.cueVideoById(Object.assign({ videoId,\n            suggestedQuality }, cueOptions));\n    });\n}\nfunction hasPlayerStarted(player) {\n    const state = player.getPlayerState();\n    return state !== YT.PlayerState.UNSTARTED && state !== YT.PlayerState.CUED;\n}\nfunction playerIsReady(player) {\n    return 'getPlayerStatus' in player;\n}\n/** Combines the two observables temporarily for the filter function. */\nfunction filterOnOther(otherObs, filterFn) {\n    return pipe(withLatestFrom(otherObs), filter(([value, other]) => filterFn(other, value)), map(([value]) => value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst COMPONENTS = [YouTubePlayer];\nclass YouTubePlayerModule {\n}\nYouTubePlayerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: YouTubePlayerModule });\nYouTubePlayerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function YouTubePlayerModule_Factory(t) { return new (t || YouTubePlayerModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(YouTubePlayerModule, { declarations: [YouTubePlayer], exports: [YouTubePlayer] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(YouTubePlayerModule, [{\n        type: NgModule,\n        args: [{\n                declarations: COMPONENTS,\n                exports: COMPONENTS\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { YouTubePlayer, YouTubePlayerModule };\n\n//# sourceMappingURL=youtube-player.js.map","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WebLayoutComponent } from './layout.component';\r\nimport { AboutComponent } from '../../common/about/about.component';\r\nimport { About1Component } from '../../common/about/about1/about1.component';\r\nimport { ContactComponent } from '../../common/contact/contact.component';\r\nimport { Contact1Component } from '../../common/contact/contact1/contact1.component';\r\nimport { FooterComponent } from '../../common/footer/footer.component';\r\nimport { Footer1Component } from '../../common/footer/footer1/footer1.component';\r\nimport { GalleryComponent } from '../../common/gallery/gallery.component';\r\nimport { Gallery1Component } from '../../common/gallery/gallery1/gallery1.component';\r\nimport { HeaderComponent } from '../../common/headers/header.component';\r\nimport { Header1Component } from '../../common/headers/header1/header1.component';\r\nimport { IntroductionComponent } from '../../common/introduction/introduction.component';\r\nimport { Introduction1Component } from '../../common/introduction/introduction1/introduction1.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AnimateOnScrollModule } from 'ng2-animate-on-scroll';\r\nimport { Header2Component } from '../../common/headers/header2/header2.component';\r\nimport { StyleService } from 'src/app/services/style.service';\r\nimport { Introduction2Component } from '../../common/introduction/introduction2/introduction2.component';\r\nimport { About2Component } from '../../common/about/about2/about2.component';\r\nimport { PeoplesComponent } from '../../common/peoples/peoples.component';\r\nimport { Peoples1Component } from '../../common/peoples/peoples1/peoples1.component';\r\nimport { Gallery2Component } from '../../common/gallery/gallery2/gallery2.component';\r\nimport { LightboxModule } from 'ngx-lightbox';\r\nimport { Contact2Component } from '../../common/contact/contact2/contact2.component';\r\nimport { Footer2Component } from '../../common/footer/footer2/footer2.component';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Banner1Component } from '../../common/banner/banner1/banner1.component';\r\nimport { BannerComponent } from '../../common/banner/banner.component';\r\nimport { TemplatesContainerComponent } from '../templates-container/templates-container.component';\r\nimport { YoutubeVideosComponent } from '../../common/videos/youtube-videos/youtube-videos.component';\r\nimport { YouTubePlayerModule } from '@angular/youtube-player';\r\nimport { ColorPickerComponent } from '../../editor/color-picker/color-picker.component';\r\nimport { SafePipe } from 'src/app/pipes/safe.pipe';\r\nimport { Peoples2Component } from '../../common/peoples/peoples2/peoples2.component';\r\nimport { SanitizePipe } from 'src/app/pipes/sanitiize.pipe';\r\nimport { IBSSMarginTop } from 'src/app/directives/margintop.directive';\r\nimport { ServiceComponent } from '../../common/services/service.component';\r\nimport { Service1Component } from '../../common/services/service1/service1.component';\r\nimport { Service2Component } from '../../common/services/service2/service2.component';\r\nimport { Introduction3Component } from '../../common/introduction/introduction3/introduction3.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { Introduction4Component } from '../../common/introduction/introduction4/introduction4.component';\r\nimport { About4Component } from '../../common/about/about4/about4.component';\r\nimport { Header3Component } from '../../common/headers/header3/header3.component';\r\nimport { Footer3Component } from '../../common/footer/footer3/footer3.component';\r\nimport { FileUploadModule } from 'src/app/wizard/edit/file-upload/file-upload.module';\r\nimport { EditTextModule } from 'src/app/wizard/edit/edit-text/edit-text.module';\r\nimport { EditorModule } from '@tinymce/tinymce-angular';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SafePipe,\r\n    SanitizePipe,\r\n    WebLayoutComponent,\r\n    HeaderComponent,\r\n    Header1Component,\r\n    Header2Component,\r\n    IntroductionComponent,\r\n    Introduction1Component,\r\n    Introduction2Component,\r\n    Introduction3Component,\r\n    AboutComponent,\r\n    About1Component,\r\n    GalleryComponent,\r\n    Gallery1Component,\r\n    ContactComponent,\r\n    Contact1Component,\r\n    FooterComponent,\r\n    Footer1Component,\r\n    About2Component,\r\n    Peoples1Component,\r\n    PeoplesComponent,\r\n    Gallery2Component,\r\n    Contact2Component,\r\n    Footer2Component,\r\n    Banner1Component,\r\n    BannerComponent,\r\n    TemplatesContainerComponent,\r\n    YoutubeVideosComponent,\r\n    ColorPickerComponent,\r\n    Peoples2Component,\r\n    IBSSMarginTop,\r\n    ServiceComponent,\r\n    Service1Component,\r\n    Service2Component,\r\n    Introduction4Component,\r\n    About4Component,\r\n    Header3Component,\r\n    Footer3Component\r\n    ],\r\n  exports: [\r\n    WebLayoutComponent,\r\n    HeaderComponent,\r\n    Header1Component,\r\n    Header2Component,\r\n    IntroductionComponent,\r\n    Introduction1Component,\r\n    Introduction2Component,\r\n    Introduction3Component,\r\n    AboutComponent,\r\n    About1Component,\r\n    GalleryComponent,\r\n    Gallery1Component,\r\n    ContactComponent,\r\n    Contact1Component,\r\n    FooterComponent,\r\n    Footer1Component,\r\n    About2Component,\r\n    Peoples1Component,\r\n    PeoplesComponent,\r\n    Gallery2Component,\r\n    Contact2Component,\r\n    Footer2Component,\r\n    Banner1Component,\r\n    BannerComponent,\r\n    TemplatesContainerComponent,\r\n    YoutubeVideosComponent,\r\n    ColorPickerComponent,\r\n    ServiceComponent,\r\n    Service1Component,\r\n    Service2Component,\r\n    Introduction4Component,\r\n    About4Component,\r\n    Header3Component,\r\n    Footer3Component\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AnimateOnScrollModule.forRoot(),\r\n    LightboxModule,\r\n    YouTubePlayerModule,\r\n    FileUploadModule,\r\n    EditTextModule,\r\n    EditorModule,\r\n    RouterModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyCvIMf152zFLd-p1nZN6ie5WAiO-ubeqH8',\r\n      libraries: [\"places\"]\r\n    })\r\n  ],\r\n  providers:[StyleService, Title]\r\n})\r\nexport class LayoutModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'ibssSanitize' })\r\nexport class SanitizePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  transform(html:string) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n\r\n} ","import { Injectable, Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\nimport { Subscription, fromEvent, EMPTY } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nclass ScrollService {\n    constructor() {\n        this.scrollSub = new Subscription();\n        this.resizeSub = new Subscription();\n        // set initial value\n        this.manageScrollPos();\n        // create observable that we can subscribe to from component or directive\n        this.scrollObs = typeof window !== 'undefined' ? fromEvent(window, 'scroll') : EMPTY;\n        // initiate subscription to update values\n        this.scrollSub = this.scrollObs\n            .subscribe(() => this.manageScrollPos());\n        // create observable for changes in screen size\n        this.resizeObs = typeof window !== 'undefined' ? fromEvent(window, 'resize') : EMPTY;\n        // initiate subscription to update values\n        this.resizeSub = this.resizeObs\n            .subscribe(() => this.manageScrollPos());\n    }\n    manageScrollPos() {\n        // update service property\n        this.pos = typeof window !== 'undefined' ? window.pageYOffset : 0;\n    }\n    ngOnDestroy() {\n        this.scrollSub.unsubscribe();\n        this.resizeSub.unsubscribe();\n    }\n}\nScrollService.ɵfac = function ScrollService_Factory(t) { return new (t || ScrollService)(); };\nScrollService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ScrollService, factory: ScrollService.ɵfac });\nScrollService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nclass AnimateOnScrollDirective {\n    constructor(elementRef, renderer, scroll) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.scroll = scroll;\n        this.scrollSub = new Subscription();\n        this.resizeSub = new Subscription();\n        // Pixel offset from screen bottom to the animated element to determine the start of the animation\n        this.offset = 80; // for scroll Listener\n    }\n    get id() {\n        return this.elementRef.nativeElement.id;\n    }\n    ngOnInit() {\n        if (!this.animationName) {\n            return;\n        }\n        // default visibility to false\n        this.isVisible = false;\n        this.useScroll = this.useScroll ? this.useScroll : ((this.useScroll === false) ? false : true);\n        this.threshold = this.threshold ? (this.threshold || 0.5) : 0.5;\n        // using intersecting observer by default, else fallback to scroll Listener\n        if ('IntersectionObserver' in window && this.useScroll) {\n            const options = {\n                root: null,\n                threshold: this.threshold,\n                rootMargin: '0px'\n            };\n            const observer = new IntersectionObserver((entries, _) => {\n                entries.forEach(entry => {\n                    if (!entry.isIntersecting) {\n                        return;\n                    }\n                    this.addAnimationClass();\n                });\n            }, options);\n            observer.observe(this.elementRef.nativeElement);\n            return;\n        }\n        // subscribe to scroll event using service\n        this.scrollSub = this.scroll.scrollObs\n            .subscribe(() => this.manageVisibility());\n        // subscribe to resize event using service so scrolling position is always accurate\n        this.resizeSub = this.scroll.resizeObs\n            .subscribe(() => this.manageVisibility());\n    }\n    ngAfterViewInit() {\n        // run visibility check initially in case the element is already visible in viewport\n        setTimeout(() => this.manageVisibility(), 1);\n    }\n    ngOnDestroy() {\n        this.scrollSub.unsubscribe();\n        this.resizeSub.unsubscribe();\n    }\n    /**\n     * check for visibility of element in viewport to add animation\n     *\n     * @returns void\n     */\n    manageVisibility() {\n        if (this.isVisible) {\n            // Optimisation; nothing to do if class has already been applied\n            return;\n        }\n        // check for window height, may change with a window resize\n        this.getWinHeight();\n        // get vertical position for selected element\n        this.getOffsetTop();\n        // we should trigger the addition of the animation class a little after getting to the element\n        const scrollTrigger = this.offsetTop + this.offset - this.winHeight;\n        // using values updated in service\n        if (this.scroll.pos >= scrollTrigger) {\n            this.addAnimationClass();\n        }\n    }\n    /**\n     * utility function to mark element visible and add css class\n     *\n     * @returns void\n     */\n    addAnimationClass() {\n        // stops execution if no class is provided\n        if (!this.animationName) {\n            return;\n        }\n        // mark this element visible, we won't remove the class after this\n        this.isVisible = true;\n        // use default for animate.css if no value provided\n        this.setClass(this.animationName);\n    }\n    /**\n     * utility function to add one or more css classes to element in DOM\n     *\n     * @param  {string} classes\n     * @returns void\n     */\n    setClass(classes) {\n        for (const c of classes.split(' ')) {\n            this.renderer.addClass(this.elementRef.nativeElement, c);\n        }\n    }\n    /**\n     * get window height utility function\n     *\n     * @returns void\n     */\n    getWinHeight() {\n        this.winHeight = typeof window !== 'undefined' ? window.innerHeight : 0;\n    }\n    /**\n     * get offsetTop value for element\n     *\n     * @returns void\n     */\n    getOffsetTop() {\n        if (typeof this.elementRef.nativeElement.getBoundingClientRect === 'function') {\n            const viewportTop = this.elementRef.nativeElement.getBoundingClientRect().top;\n            const clientTop = this.elementRef.nativeElement.clientTop;\n            // get vertical position for selected element\n            this.offsetTop = viewportTop + this.scroll.pos - clientTop;\n        }\n        else {\n            this.offsetTop = 0;\n        }\n    }\n}\nAnimateOnScrollDirective.ɵfac = function AnimateOnScrollDirective_Factory(t) { return new (t || AnimateOnScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ScrollService)); };\nAnimateOnScrollDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AnimateOnScrollDirective, selectors: [[\"\", \"animateOnScroll\", \"\"]], inputs: { offset: \"offset\", useScroll: \"useScroll\", threshold: \"threshold\", animationName: \"animationName\" } });\nAnimateOnScrollDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ScrollService }\n];\nAnimateOnScrollDirective.propDecorators = {\n    animationName: [{ type: Input }],\n    offset: [{ type: Input }],\n    useScroll: [{ type: Input }],\n    threshold: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AnimateOnScrollDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[animateOnScroll]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ScrollService }]; }, { offset: [{\n            type: Input\n        }], useScroll: [{\n            type: Input\n        }], threshold: [{\n            type: Input\n        }], animationName: [{\n            type: Input\n        }] }); })();\n\nclass AnimateOnScrollModule {\n    static forRoot() {\n        return {\n            ngModule: AnimateOnScrollModule,\n            providers: [ScrollService]\n        };\n    }\n}\nAnimateOnScrollModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AnimateOnScrollModule });\nAnimateOnScrollModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AnimateOnScrollModule_Factory(t) { return new (t || AnimateOnScrollModule)(); }, imports: [[\n            CommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AnimateOnScrollModule, { declarations: function () { return [AnimateOnScrollDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [AnimateOnScrollDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AnimateOnScrollModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    AnimateOnScrollDirective\n                ],\n                exports: [\n                    AnimateOnScrollDirective\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimateOnScrollDirective, AnimateOnScrollModule, ScrollService };\n\n//# sourceMappingURL=ng2-animate-on-scroll.js.map","import { AfterViewChecked, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ViewportScroller } from '@angular/common';\r\nimport { StyleService } from 'src/app/services/style.service';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\ndeclare var window:any; \r\n@Component({\r\n  selector: 'ibss-web-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n  // encapsulation: ViewEncapsulation.None\r\n})\r\nexport class WebLayoutComponent implements OnChanges, AfterViewChecked  {\r\n\r\n  @Input() isDummy: boolean = true;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isLoading: boolean = false;\r\n  @Input() isView: boolean = false;\r\n  @Input() inputPayload: any;\r\n  @Output() onAction = new EventEmitter();\r\n  @ViewChild('pageInfo') pageInfo!: ElementRef; \r\n  @ViewChild('headerComponent') headerComponent!: TemplateRef<any>; \r\n  @ViewChild('introComponent') introComponent!: TemplateRef<any>; \r\n  @ViewChild('aboutComponent') aboutComponent!: TemplateRef<any>; \r\n  @ViewChild('galleryComponent') galleryComponent!: TemplateRef<any>; \r\n  @ViewChild('contactComponent') contactComponent!: TemplateRef<any>; \r\n  @ViewChild('footerComponent') footerComponent!: TemplateRef<any>; \r\n  @ViewChild('peoplesComponent') peoplesComponent!: TemplateRef<any>; \r\n  @ViewChild('bannerComponent') bannerComponent!: TemplateRef<any>; \r\n  @ViewChild('videoComponent') videoComponent!: TemplateRef<any>; \r\n  @ViewChild('serviceComponent') serviceComponent!: TemplateRef<any>; \r\n\r\n  templateRefs: any;\r\n\r\n  constructor(\r\n    private viewportScroller: ViewportScroller,\r\n    private cdref: ChangeDetectorRef,\r\n    private styleService: StyleService,\r\n    private titleService: Title,\r\n    private metaService: Meta\r\n    ) { \r\n\r\n  }\r\n\r\n  ngOnChanges() {\r\n    console.log(\"WebLayout1Component\", this.inputPayload);\r\n    if (this.inputPayload) {\r\n      // this.setMetaTags();\r\n      this.updateFontFamily();\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.templateRefs = {\r\n      headerComponent:this.headerComponent,\r\n      introComponent:this.introComponent,\r\n      aboutComponent:this.aboutComponent,\r\n      galleryComponent:this.galleryComponent,\r\n      contactComponent:this.contactComponent,\r\n      footerComponent:this.footerComponent,\r\n      peoplesComponent:this.peoplesComponent,\r\n      bannerComponent:this.bannerComponent,\r\n      videoComponent:this.videoComponent,\r\n      serviceComponent:this.serviceComponent\r\n    }\r\n    this.cdref.detectChanges();\r\n  }\r\n\r\n  getTemplate(id: any) {\r\n    console.log(this.templateRefs[id]);\r\n    return this.templateRefs[id];\r\n  }\r\n\r\n  public onClick(elementId: any): void { \r\n    console.log('onClick',elementId);\r\n      this.viewportScroller.scrollToAnchor(elementId);\r\n  }\r\n \r\n  public handleAction(evt: any) { \r\n    this.onAction.emit(evt)\r\n  }\r\n\r\n  updateFontFamily() {\r\n\r\n    if (this.inputPayload && this.inputPayload.fonts) {\r\n      this.inputPayload.fonts.forEach((font:any) => {\r\n        const fontUri = `https://fonts.googleapis.com/css?family=${font.name.replace(' ', '+')}`;\r\n        let pos = font.name.indexOf(':');\r\n        if (pos > 0) {\r\n          font.name = font.name.substring(0, pos);\r\n        }\r\n\r\n        const fId = font.name.replace(' ', '_')\r\n        let link = document.getElementById(fId);\r\n        if (!link) {\r\n          link = document.createElement('link');\r\n          link.id = fId;\r\n          link.setAttribute('rel', 'stylesheet');\r\n          link.setAttribute('href', fontUri);\r\n          document.head.appendChild(link);\r\n        }\r\n\r\n        font.selector.forEach((ele:any) => {\r\n          this.styleService.setStyle(ele, \"font-family\", font.name);\r\n        });\r\n      });\r\n      // this.selectAll();\r\n    }\r\n  }\r\n\r\n  // selectAll() {\r\n  //   let textFontFamily = <HTMLInputElement>document.getElementById('ibss-weblayout');\r\n  //   textFontFamily.select();\r\n  // }\r\n\r\n  setMetaTags() {\r\n\r\n    if(!this.isDummy) {\r\n      this.titleService.setTitle(this.inputPayload.title);\r\n    }\r\n \r\n    let content = ['TechIntent', 'Impairbit', this.inputPayload.title];\r\n\r\n    if (this.inputPayload.pages) {\r\n      this.inputPayload.pages.forEach((page:any) => {     \r\n        if (page.template.title){\r\n          if (content.indexOf(page.template.title)==-1) {\r\n            content.push(page.template.title);\r\n          }\r\n        }   \r\n      });\r\n    }\r\n\r\n    content = this.initTags(content);\r\n    const tags = [\r\n      {name: 'keywords', content: content.join(\", \")},\r\n      {name: 'description', content: content.join(\", \")},\r\n      {name: 'robots', content: 'index, follow'},\r\n      {property:'og:title', content:this.inputPayload.pages[0].template.title},\r\n      {property:'og:url', content:window.location.href},\r\n      {property:'og:type', content:\"website\"},\r\n      {property:'og:description', content:this.inputPayload.pages[0].template.title},\r\n      {property:'og:image', content:\"https://techintent.in/profile-assets/WEBSITE/testWebsite/banner/banner1_1623574026.png\"}\r\n    ]\r\n\r\n    tags.forEach((siteTag:any) => {\r\n      this.metaService.updateTag(siteTag);\r\n    });\r\n  }\r\n \r\n\r\n  initTags(contents:any) {\r\n\r\n    let initContents:any = [];\r\n    contents.forEach((content:any) => {     \r\n        const t1 =content;\r\n        const t2 =content.toLowerCase();\r\n        const t3 =content.toUpperCase();\r\n        if (initContents.indexOf(t1)==-1) {\r\n          initContents.push(t1);\r\n        }\r\n\r\n        if (initContents.indexOf(t2)==-1) {\r\n          initContents.push(t2);\r\n        } \r\n\r\n        if (initContents.indexOf(t3)==-1) {\r\n          initContents.push(t3);\r\n        }   \r\n    });\r\n\r\n    return initContents;\r\n  }\r\n}\r\n","<div class=\"web-layout-1\" id=\"ibss-weblayout\">\r\n  <div id=\"preloader\" [hidden]='!isLoading'>\r\n    <div class=\"jumper\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div *ngFor=\"let page of inputPayload?.pages; let i = index;\">\r\n      <ibss-templates-container [profileName]=\"inputPayload.id\" [isDummy]=\"isDummy\" [isEdit]=\"isEdit\"  [isView]=\"isView\"  [page]=\"page\" [index]=\"i\" (onClick)=\"onClick($event)\" (onAction)=\"handleAction($event)\" > </ibss-templates-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}