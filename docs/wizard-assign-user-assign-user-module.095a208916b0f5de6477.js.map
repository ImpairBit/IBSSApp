{"version":3,"sources":["./src/app/wizard/assign-user/assign-user.component.html","./src/app/wizard/assign-user/assign-user-routing.module.ts","./src/app/wizard/assign-user/assign-user.component.ts","./src/app/wizard/assign-user/assign-user.module.ts","./src/app/wizard/wizard.service.ts"],"names":["routes","path","component","AssignUserComponent","wizardService","toastr","config","searchByOptions","id","value","searchBy","searchTerm","profileName","currentPage","itemsPerPage","sortOrder","searchResult","isSearch","selectedProfile","totalRecords","maxPageSize","this","profilesList","Observable","observer","next","pipe","switchMap","query","trim","length","get","map","res","error","responseCode","serviceData","businessValidation","i","errorDesc","dataValidation","of","tap","noop","err","toggleLoader","getUsers","event","page","searchUser","subscribe","console","log","totalPages","item","user","profileId","assignUser","systemId","success","onReset","onSearch","AssignUserRoutingModule","forChild","AssignUserModule","forRoot","WizardService","http","_profileUrl","getBaseURL","RESOURCES","_saveUrl","_viewUrl","_previewUrl","_saveFileUrl","_deleteFileUrl","_googleFontsUrl","_userSearchUrl","modifyIndex","profile","signupData","ibssApp","localStorage","getItem","JSON","parse","headers","append","token","access_token","post","isAuth","extendedUrl","params","put","payload","currAssetsPath","assetsPath","type","title","filePath","toLowerCase","indexOf"],"mappings":"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","file":"wizard-assign-user-assign-user-module.095a208916b0f5de6477.js","sourcesContent":["<div class=\"row justify-content-center\">\r\n    <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">Assign Users</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"col-sm-12 col-lg-4 col-form-label\">Search By</label>\r\n                            <select class=\"form-control\" [(ngModel)]=\"searchBy\" name=\"searchOption\" id=\"searchOption\" >\r\n                                <option value=\"\">Select</option>\r\n                                <option *ngFor=\"let optn of searchByOptions\" [value]=\"optn.id\">{{optn.value}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"searchTerm\" class=\"col-sm-12 col-lg-4 col-form-label\">Search Term</label>\r\n                            <input type=\"text\" name=\"searchTerm\" id=\"searchTerm\" class=\"form-control\"\r\n                                required minlength=\"2\" maxlength=\"75\" [(ngModel)]=\"searchTerm\"\r\n                                placeholder=\"Search Term\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"clearfix\">\r\n                    <button type=\"button\" class=\"btn btn-primary float-right\" (click)=\"onSearch()\" [disabled]=\"searchBy.trim().length === 0 || searchTerm.trim().length < 3\">Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"site-table col\" *ngIf=\"isSearch\">\r\n        <div class=\"ti-card\">\r\n            <div class=\"card-header\">\r\n                <div class=\"row\">      \r\n                    <div class=\"col\">\r\n                        <div class=\"clearfix\">\r\n                            <h5 class=\"my-0\">Search Results\r\n                                <div class=\"float-right form-group col-4\" *ngIf=\"searchResult?.length>0\">\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"\">Items</span>\r\n                                        </div>\r\n                                        <select class=\"form-control\" [(ngModel)]=\"itemsPerPage\" (change)=\"onSearch()\" >\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"10\">10</option>\r\n                                            <option value=\"25\">25</option>\r\n                                            <option value=\"50\">50</option>\r\n                                            <option value=\"75\">75</option>\r\n                                            <option value=\"100\">100</option>\r\n                                        </select>\r\n                                        <select class=\"form-control\" [(ngModel)]=\"sortOrder\" (change)=\"onSearch()\" >\r\n                                            <option value=\"asc\">(A-Z)</option>\r\n                                            <option value=\"desc\">(Z-A)</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\"> \r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\" *ngIf=\"searchResult?.length>0\">\r\n                            <label for=\"searchTerm\" >Choose Profile</label>\r\n                            <input class=\"form-control\" \r\n                                    [(ngModel)]=\"profileName\"\r\n                                    typeaheadOptionField=\"profileName\"\r\n                                    (typeaheadOnSelect)=\"onSelect($event)\"\r\n                                    [typeahead]=\"profilesList\"\r\n                                    [typeaheadAsync]=\"true\"\r\n                                    placeholder=\"Enter Profile Name\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"ti-responsive-table\">\r\n            <table >\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Mobile</th>\r\n                        <th scope=\"col\">Assign</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let result of searchResult; let i=index;\">\r\n                        <td class=\"no\">{{ ((currentPage-1) * itemsPerPage) + (i+1) }}</td>\r\n                        <td data-label=\"Title\">{{result.firstName}}{{result.middleName?.trim()?.length > 0 ? \" \"+result.middleName:\"\"  }} {{result.lastName}}</td>\r\n                        <td data-label=\"Email\">{{result.emailID}}</td>\r\n                        <td data-label=\"Mobile\">{{result.mobile}}</td>\r\n                        <td data-label=\"Actions\" class=\"act-btns\">\r\n                            <a class=\"rounded-buttons btn purple\" href=\"javascript:void(0)\" (click)=\"onAssign(result)\">\r\n                                <span class=\"material-icons-outlined\">\r\n                                    how_to_reg\r\n                                    </span>\r\n                            </a>\r\n                          </td>\r\n    \r\n                    </tr>\r\n                    <tr *ngIf=\"searchResult?.length==0\">\r\n                        <td class=\"text-center\" colspan=\"5\"> <span class=\"material-icons-outlined\">error</span>\r\n                            &nbsp; No user found.</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"text-center pagination-container p-3\">\r\n                <pagination *ngIf=\"totalRecords > itemsPerPage\" [totalItems]=\"totalRecords\" [itemsPerPage]=\"itemsPerPage\" [maxSize]=\"maxPageSize\" (pageChanged)=\"pageChanged($event)\" [(ngModel)]=\"currentPage\"></pagination>\r\n              </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AssignUserComponent } from './assign-user.component';\r\n\r\nconst routes: Routes = [{ path: '', component: AssignUserComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AssignUserRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { noop, Observable, Observer, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { WizardService } from '../wizard.service';\r\n\r\n@Component({\r\n  selector: 'ibss-assign-user',\r\n  templateUrl: './assign-user.component.html',\r\n  styleUrls: ['./assign-user.component.scss']\r\n})\r\nexport class AssignUserComponent implements OnInit {\r\n\r\n  config: typeof CONFIG = CONFIG;\r\n\r\n  searchByOptions: any = [\r\n    {\r\n      id:\"firstName\",\r\n      value:\"First Name\"\r\n    },\r\n    {\r\n      id:\"lastName\",\r\n      value:\"Last Name\"\r\n    },\r\n    {\r\n      id:\"mobile\",\r\n      value:\"Mobile\"\r\n    },\r\n    {\r\n      id:\"emailId\",\r\n      value:\"Email\"\r\n    },\r\n  ]\r\n  searchBy = \"\";\r\n  searchTerm = \"\";\r\n  profileName = \"\";\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n  sortOrder = \"asc\";\r\n  searchResult: any=[];\r\n  isSearch = false;\r\n  profilesList: Observable<any[]>;\r\n  selectedProfile :any = null;\r\n  totalRecords = 0;\r\n  maxPageSize = 5;\r\n  constructor(\r\n    public wizardService: WizardService,\r\n    public toastr: ToastrService\r\n  ) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.profilesList = new Observable((observer: Observer<any>) => {\r\n      observer.next(this.profileName);\r\n    }).pipe(\r\n      switchMap((query: any) => {\r\n        if (query && query.trim().length >=5) {\r\n          // using github public api to get users by name\r\n          const extUrl= `${this.profileName}/0/10/asc`;\r\n          return this.wizardService.get(extUrl).pipe(\r\n            map((res: any) => {\r\n              if(res.error && res.error.responseCode == 0){\r\n                return res.serviceData;\r\n              } else {\r\n                if (res.error) {\r\n                    if (res.error.businessValidation.length > 0) {\r\n                        for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                          this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                        }\r\n                    }\r\n                    if (res.error.dataValidation.length > 0) {\r\n                        for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                          this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                        }\r\n                    }\r\n                } else if (res.responseCode == -1) {\r\n                    this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n                }        \r\n              }\r\n              return of([]);\r\n            }),\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n            })\r\n          );\r\n        }\r\n \r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.searchBy = \"\";\r\n    this.searchTerm = \"\";\r\n    this.profileName = \"\";\r\n    this.currentPage = 1;\r\n    this.itemsPerPage = 10;\r\n    this.sortOrder = \"asc\";\r\n    this.searchResult = [];\r\n    this.isSearch = false;\r\n    this.selectedProfile = null;\r\n  }\r\n\r\n  onSearch(){\r\n    this.config.toggleLoader(true);\r\n    this.searchResult =[];\r\n    this.currentPage = 1;\r\n    this.getUsers();\r\n  }\r\n  \r\n  \r\n  pageChanged(event: PageChangedEvent): void {\r\n    this.currentPage = event.page;\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers() {\r\n    const extUrl= `${this.searchBy}/${this.searchTerm}/${(this.currentPage-1)}/${this.itemsPerPage}/${this.sortOrder}`;\r\n    this.wizardService.searchUser(extUrl)\r\n    .subscribe((res: any) => {\r\n      console.log(\"onSearch\",res);\r\n      this.isSearch = true;\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.searchResult=res.serviceData;\r\n        this.totalRecords = res.totalPages > 1 ? res.totalPages * this.itemsPerPage : res.serviceData.length;\r\n        this.config.toggleLoader(false);\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                  this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }        \r\n        this.config.toggleLoader(false);      \r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      this.config.toggleLoader(false);\r\n    });\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    console.log(\"onSelect\",event);\r\n    this.selectedProfile = event.item;\r\n  }\r\n\r\n  onAssign(user:any) {\r\n    console.log(\"user\", user);\r\n    console.log(\"selectedProfile\", this.selectedProfile);\r\n    if (this.selectedProfile && this.selectedProfile.profileId) {\r\n      const params = {\r\n        \"serviceData\": {\r\n          \"profileId\": this.selectedProfile.profileId,\r\n          \"systemId\": user.systemId\r\n        }\r\n      }\r\n      this.wizardService.assignUser(params)\r\n      .subscribe((res: any) => {\r\n        console.log(\"onSearch\",res);\r\n        this.isSearch = true;\r\n        if(res.error && res.error.responseCode == 0){\r\n          this.toastr.success(\"User assigned to profile successfully.\");\r\n          this.onReset();\r\n          this.config.toggleLoader(false);\r\n        } else {\r\n          if (res.error) {\r\n              if (res.error.businessValidation.length > 0) {\r\n                  for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                    this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                  }\r\n              }\r\n              if (res.error.dataValidation.length > 0) {\r\n                  for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                    this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                  }\r\n              }\r\n          } else if (res.responseCode == -1) {\r\n              this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n          }        \r\n          this.config.toggleLoader(false);      \r\n        }\r\n      }, (err: any) => {\r\n        this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        this.config.toggleLoader(false);\r\n      });\r\n    } else {\r\n      this.toastr.error(\"Please Choose a valid profile to proceed\");\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AssignUserRoutingModule } from './assign-user-routing.module';\r\nimport { AssignUserComponent } from './assign-user.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AssignUserComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AssignUserRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TypeaheadModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n  ]\r\n})\r\nexport class AssignUserModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { API } from 'src/app/enums/api.enum';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WizardService {\r\n  config: typeof CONFIG = CONFIG;\r\n  _profileUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/\";\r\n  _saveUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/write\";\r\n  _viewUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/view/1/\";\r\n  _previewUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/preview/1/\";\r\n  _saveFileUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/file/add\";\r\n  _deleteFileUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/file/delete\";\r\n  _googleFontsUrl = \"https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity\";\r\n  _userSearchUrl = this.config.getBaseURL(API.RESOURCES) + \"/user/search/\";\r\n  modifyIndex = -1;\r\n\r\n  profile:any;\r\n  constructor(\r\n    public http: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  setProfileData(profile:any) {\r\n    this.profile = profile;\r\n  }\r\n\r\n  getProfileData() {\r\n    return this.profile;\r\n  }\r\n\r\n  save(signupData: any) {\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"POST\");\r\n    return this.http.post(this._saveUrl, signupData, { headers: headers });\r\n  }\r\n\r\n  getViewData(id: any, isAuth:any = false) {\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n\r\n    if (isAuth) {\r\n      headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    }\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");\r\n    const _url = isAuth ? this._previewUrl: this._viewUrl;\r\n    return this.http.get(_url+id, { headers: headers });\r\n  }\r\n\r\n  getGoogleFonts() {\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");\r\n    return this.http.get(this._googleFontsUrl, { headers: headers });\r\n  }\r\n\r\n  get(extendedUrl: any){\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n        ibssApp = JSON.parse(ibssApp);\r\n    }\r\n\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n    return this.http.get(this._profileUrl + extendedUrl, { headers: headers });\r\n  }\r\n\r\n  searchUser(extendedUrl: any){\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n        ibssApp = JSON.parse(ibssApp);\r\n    }\r\n\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n    return this.http.get(this._userSearchUrl + extendedUrl, { headers: headers });\r\n  }\r\n\r\n  assignUser(params: any){\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"PUT\");\r\n    return this.http.put(this._profileUrl+\"assign/\", params, { headers: headers });\r\n  }\r\n\r\n  saveFile(payload:any) {\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"POST\");\r\n    return this.http.post(this._saveFileUrl, payload, { headers: headers });\r\n  } \r\n\r\n  deleteFile(payload:any): Observable<any> {\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n\r\n    const currAssetsPath = this.config.assetsPath+this.profile.type+\"/\"+this.profile.title+\"/\";\r\n    if (payload.filePath.toLowerCase().indexOf(currAssetsPath.toLowerCase())===-1) {\r\n      const inputParams = {\r\n        \"serviceData\": {\r\n          \"imageData\": \"\",\r\n          \"parentProfileName\": \"\",\r\n          \"profileCategory\": \"1\",\r\n          \"profileName\": this.profile.title,\r\n          \"profileType\": this.profile.type,\r\n          \"rootProfileName\": \"\",\r\n          \"sectionName\" : payload.sectionName,\r\n          \"fileNames\" : payload.fileNames,\r\n        }\r\n      }\r\n      let headers: HttpHeaders = new HttpHeaders();\r\n      headers = headers.append('Accept', 'application/json');\r\n      headers = headers.append('Content-Type', 'application/json');\r\n      headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n      headers = headers.append(\"X-HTTP-Method\", \"DELETE\");\r\n      // return this.http.post(this._deleteFileUrl, inputParams, { headers: headers });\r\n    }\r\n\r\n    return of({});\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}