{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/operators/toArray.js","./node_modules/rxjs/_esm2015/internal/operators/reduce.js","./node_modules/ngx-bootstrap/__ivy_ngcc__/typeahead/fesm2015/ngx-bootstrap-typeahead.js"],"names":["toArrayReducer","arr","item","index","push","toArray","accumulator","seed","arguments","length","source","pipe","scan","takeLast","defaultIfEmpty","acc","value","reduce","_c0","_c1","TypeaheadContainerComponent_ng_template_0_Template","rf","ctx","TypeaheadContainerComponent_ng_template_1_Template","match_r7","match","query_r8","query","ctx_r2","highlight","TypeaheadContainerComponent_ng_template_3_ng_template_2_li_0_Template","match_r11","$implicit","TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_ng_template_3_Template","_c2","a0","a1","a2","a3","TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template","_r21","selectActive","$event","selectMatch","ctx_r24","i_r12","ctx_r14","_r1","isActive","popupId","animationState","itemTemplate","TypeaheadContainerComponent_ng_template_3_ng_template_2_Template","isHeader","TypeaheadContainerComponent_ng_template_3_Template","ctx_r4","needScrollbar","guiHeight","matches","TypeaheadContainerComponent_ng_template_5_ng_template_0_h6_0_Template","match_r26","TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_ng_template_2_Template","TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template","_r35","ctx_r38","i_r27","ctx_r29","TypeaheadContainerComponent_ng_template_5_ng_template_0_Template","TypeaheadContainerComponent_ng_template_5_Template","ctx_r6","_c3","latinMap","TypeaheadMatch","header","this","latinize","str","replace","a","tokenize","wordRegexDelimiters","phraseRegexDelimiters","delimitersForMultipleSearch","result","delimitedTokens","split","RegExp","lastToken","tokenizeWordsAndPhrases","preTokenized","preTokenizedLength","token","replacePhraseDelimiters","i","getValueFromObject","object","option","toString","endsWith","slice","propertiesArray","property","TYPEAHEAD_ANIMATION_TIMING","typeaheadAnimation","height","overflow","nextWindowId","TypeaheadContainerComponent","positionService","renderer","element","changeDetectorRef","activeChangeEvent","isFocused","_matches","isScrolledIntoView","elem","containerViewTop","ulElement","nativeElement","scrollTop","containerViewBottom","Number","offsetHeight","elemTop","offsetTop","setAttribute","positionServiceSubscription","event$","subscribe","isAnimated","isTopPosition","detectChanges","_that","bind","_active","active","activeChanged","setOptions","modifiers","flip","enabled","adaptivePosition","allowedPositions","typeaheadScrollable","typeaheadOptionsInScrollableView","setTimeout","setScrollableMode","typeaheadIsFirstItemActive","nextActiveMatch","concurrency","find","classList","contains","parent","optionsListTemplate","undefined","typeaheadItemTemplate","isActiveItemChanged","typeaheadSelectFirstItem","indexOf","emit","prevActiveMatch","scrollPrevious","scrollNext","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","toLowerCase","queryLen","substring","repeat","e","stopPropagation","preventDefault","changeModel","typeaheadOnSelect","liElements","first","ulStyles","getStyles","liStyles","ulPaddingBottom","parseFloat","ulPaddingTop","optionHeight","setStyle","liElement","scrollToBottom","scrollToTop","unsubscribe","scrollHeight","ɵfac","t","ɵcmp","type","selectors","viewQuery","_t","hostAttrs","hostVars","hostBindings","focusLost","isBs4","dropup","outputs","decls","vars","consts","template","_r3","_r5","typeaheadTemplateMethods","directives","styles","data","animation","TypeaheadConfig","hideResultsOnBlur","cancelRequestOnFocusLost","selectFirstItem","isFirstItemActive","minLength","ɵprov","factory","providedIn","TypeaheadDirective","cis","config","changeDetection","ngControl","viewContainerRef","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadMultipleSearch","typeaheadMultipleSearchDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","typeaheadNoResults","typeaheadOnBlur","isOpen","list","keyUpEventEmitter","placement","_subscriptions","_typeahead","createLoader","provide","useValue","Object","assign","typeaheadHideResultsOnBlur","typeaheadOptionsLimit","typeaheadWaitMs","typeahead","asyncActions","syncActions","checkDelimitersConflict","target","textContent","innerText","trim","hide","event","_container","keyCode","key","selectActiveMatch","container","onBlur","valueStr","tokens","_allEnteredValue","concat","join","viewToModelUpdate","setValue","markForCheck","attach","to","position","attachment","show","typeaheadRef","_outsideClickListener","listen","onOutsideClick","instance","normalizedQuery","control","tokenizeQuery","focus","activeId","activeDescendant","isShown","sub","dispose","finalizeAsyncCall","normalizeQuery","testMatch","normalizeOption","optionValue","typeaheadOptionField","currentQuery","haveCommonCharacters","test","spaceLength","prepareMatches","hasMatches","options","limited","sorted","typeaheadOrderBy","orderMatches","typeaheadGroupField","map","filter","v","forEach","group","keys","console","error","field","direction","sort","reverse","b","stringA","stringB","Error","str1","str2","charAt","ɵdir","onInput","onChange","onFocus","onKeydown","inputs","exportAs","TypeaheadModule","ngModule","providers","ɵmod","ɵinj","imports"],"mappings":"gLACA,SAASA,EAAeC,EAAKC,EAAMC,GAC/B,OAAc,IAAVA,EACO,CAACD,IAEZD,EAAIG,KAAKF,GACFD,GAEJ,SAASI,IACZ,OCLG,SAAgBC,EAAaC,GAChC,OAAIC,UAAUC,QAAU,EACb,SAAwCC,GAC3C,OAAO,OAAAC,EAAA,GAAK,OAAAC,EAAA,GAAKN,EAAaC,GAAO,OAAAM,EAAA,GAAS,GAAI,OAAAC,EAAA,GAAeP,GAA1D,CAAiEG,IAGzE,SAAgCA,GACnC,OAAO,OAAAC,EAAA,GAAK,OAAAC,EAAA,GAAK,CAACG,EAAKC,EAAOb,IAAUG,EAAYS,EAAKC,EAAOb,EAAQ,IAAK,OAAAU,EAAA,GAAS,GAA/E,CAAmFH,IDFvFO,CAAOjB,EAAgB,M,kCETlC,wPAsBA,MAAMkB,EAAM,CAAC,aACPC,EAAM,CAAC,cACb,SAASC,EAAmDC,EAAIC,IAChE,SAASC,EAAmDF,EAAIC,GAE9D,GAF8E,EAALD,GACvE,yBAAiB,EAAG,OAAQ,GACrB,EAALA,EAAQ,CACV,MAAMG,EAAWF,EAAIG,MACfC,EAAWJ,EAAIK,MACfC,EAAS,+BACf,0BAAkB,YAAaA,EAAOC,UAAUL,EAAUE,GAAW,gCAEzE,SAASI,EAAsET,EAAIC,GAIjF,GAJiG,EAALD,IAC1F,8BAAsB,EAAG,KAAM,GAAI,IACnC,sBAAc,GACd,+BACO,EAALA,EAAQ,CACV,MAAMU,EAAY,+BAAuBC,UACzC,yBAAiB,GACjB,iCAAyBD,IAE7B,SAASE,EAAoFZ,EAAIC,IACjG,MAAMY,EAAM,SAAUC,EAAIC,EAAIC,EAAIC,GAAM,MAAO,CAAEpC,KAAMiC,EAAIhC,MAAOiC,EAAIX,MAAOY,EAAIV,MAAOW,IACxF,SAASC,EAAsElB,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAClG,MAAMmB,EAAO,kCACb,8BAAsB,EAAG,KAAM,GAAI,IACnC,0BAAkB,aAAc,WAA4G,6BAAqBA,GAAO,MAAMT,EAAY,+BAAuBC,UAAoD,OAAzB,6BAAqB,GAAmBS,aAAaV,KACjS,8BAAsB,EAAG,IAAK,IAC9B,0BAAkB,QAAS,SAAkGW,GAAU,6BAAqBF,GAAO,MAAMT,EAAY,+BAAuBC,UAAoD,OAAzB,6BAAqB,GAAmBW,YAAYZ,EAAWW,KACtS,0BAAkB,EAAGT,EAAqF,EAAG,EAAG,cAAe,GAC/H,8BACA,8BACF,GAAS,EAALZ,EAAQ,CACV,MAAMuB,EAAU,+BACVb,EAAYa,EAAQZ,UACpBa,EAAQD,EAAQzC,MAChB2C,EAAU,6BAAqB,GAC/BC,EAAM,2BAAmB,GAC/B,2BAAmB,SAAUD,EAAQE,SAASjB,IAC9C,0BAAkB,KAAMe,EAAQG,QAAU,IAAMJ,EAAhD,CAAuD,sBAAuBC,EAAQI,gBACtF,yBAAiB,GACjB,0BAAkB,mBAAoBJ,EAAQK,cAAgBJ,EAA9D,CAAmE,0BAA2B,+BAAuB,EAAGb,EAAKH,EAAU7B,KAAM2C,EAAOd,EAAWe,EAAQnB,SAE3K,SAASyB,EAAiE/B,EAAIC,GAG5E,GAH4F,EAALD,IACrF,0BAAkB,EAAGS,EAAuE,EAAG,EAAG,KAAM,GACxG,0BAAkB,EAAGS,EAAuE,EAAG,GAAI,KAAM,IAClG,EAALlB,EAAQ,CACV,MAAMU,EAAYT,EAAIU,UACtB,0BAAkB,OAAQD,EAAUsB,YACpC,yBAAiB,GACjB,0BAAkB,QAAStB,EAAUsB,aAEzC,SAASC,EAAmDjC,EAAIC,GAI9D,GAJ8E,EAALD,IACvE,8BAAsB,EAAG,KAAM,EAAG,GAClC,0BAAkB,EAAG+B,EAAkE,EAAG,EAAG,cAAe,GAC5G,+BACO,EAAL/B,EAAQ,CACV,MAAMkC,EAAS,+BACf,2BAAmB,aAAcA,EAAOC,cAAgB,SAAW,OAAnE,CAA2E,SAAUD,EAAOC,cAAgBD,EAAOE,UAAY,QAC/H,yBAAiB,GACjB,0BAAkB,UAAWF,EAAOG,UAExC,SAASC,EAAsEtC,EAAIC,GAIjF,GAJiG,EAALD,IAC1F,8BAAsB,EAAG,KAAM,IAC/B,sBAAc,GACd,+BACO,EAALA,EAAQ,CACV,MAAMuC,EAAY,+BAAuB5B,UACzC,yBAAiB,GACjB,iCAAyB4B,IAE7B,SAASC,EAA6FxC,EAAIC,IAC1G,SAASwC,EAA+EzC,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC3G,MAAM0C,EAAO,kCACb,8BAAsB,EAAG,SAAU,GAAI,IACvC,0BAAkB,QAAS,SAAgHrB,GAAU,6BAAqBqB,GAAO,MAAMH,EAAY,+BAAuB5B,UAAoD,OAAzB,6BAAqB,GAAmBW,YAAYiB,EAAWlB,IAApT,CAAgU,aAAc,WAAyH,6BAAqBqB,GAAO,MAAMH,EAAY,+BAAuB5B,UAAoD,OAAzB,6BAAqB,GAAmBS,aAAamB,KAC5lB,0BAAkB,EAAGC,EAA8F,EAAG,EAAG,cAAe,GACxI,8BACF,GAAS,EAALxC,EAAQ,CACV,MAAM2C,EAAU,+BACVJ,EAAYI,EAAQhC,UACpBiC,EAAQD,EAAQ7D,MAChB+D,EAAU,6BAAqB,GAC/BnB,EAAM,2BAAmB,GAC/B,2BAAmB,SAAUmB,EAAQlB,SAASY,IAC9C,0BAAkB,KAAMM,EAAQjB,QAAU,IAAMgB,EAAhD,CAAuD,sBAAuBC,EAAQhB,gBACtF,yBAAiB,GACjB,0BAAkB,mBAAoBgB,EAAQf,cAAgBJ,EAA9D,CAAmE,0BAA2B,+BAAuB,EAAGb,EAAK0B,EAAU1D,KAAM+D,EAAOL,EAAWM,EAAQvC,SAE3K,SAASwC,EAAiE9C,EAAIC,GAG5E,GAH4F,EAALD,IACrF,0BAAkB,EAAGsC,EAAuE,EAAG,EAAG,KAAM,GACxG,0BAAkB,EAAGG,EAAgF,EAAG,GAAI,cAAe,KACpH,EAALzC,EAAQ,CACV,MAAMuC,EAAYtC,EAAIU,UACtB,0BAAkB,OAAQ4B,EAAUP,YACpC,yBAAiB,GACjB,0BAAkB,QAASO,EAAUP,aAEzC,SAASe,EAAmD/C,EAAIC,GAE9D,GAF8E,EAALD,GACvE,0BAAkB,EAAG8C,EAAkE,EAAG,EAAG,cAAe,GACrG,EAAL9C,EAAQ,CACV,MAAMgD,EAAS,+BACf,0BAAkB,UAAWA,EAAOX,UAExC,MAAMY,EAAM,SAAUnC,EAAIC,EAAIC,EAAIC,GAAM,MAAO,CAAEoB,QAASvB,EAAIgB,aAAcf,EAAIT,MAAOU,EAAIL,UAAWM,IAChGiC,EAAW,CACbtE,EAAMc,EAAQd,EAAMuE,GAAS,GACrCC,KAAKxE,KAAOA,EACZwE,KAAK1D,MAAQA,EACb0D,KAAKD,OAASA,EAKlB,WACI,OAAOC,KAAKD,OAKhB,WACI,OAAOC,KAAK1D,OA0CpB,SAAS2D,EAASC,GACd,OAAKA,EAGEA,EAAIC,QAAQ,qBAAsB,SAI/BC,GACN,OAAOP,EAASO,IAAMA,IAPf,GA4Bf,SAASC,EAASH,EAAKI,EAAsB,IAAKC,EAAwB,GAAIC,GAE1E,IAAIC,EAAS,GACb,GAAKD,EAGA,CAED,MAEME,EAAkBR,EAAIS,MAAM,IAAIC,OAFP,KAAKJ,OAEiC,MAE/DK,EAAYH,EAAgBA,EAAgB3E,OAAS,GACvD8E,EAAY,KACRP,GAAuBC,EACvBE,EAASK,EAAwBD,EAAWP,EAAqBC,GAGjEE,EAAO/E,KAAKmF,SAdpBJ,EAASK,EAAwBZ,EAAKI,EAAqBC,GAkB/D,OAAOE,EAQX,SAASK,EAAwBZ,EAAKI,EAAqBC,GAEvD,MAAME,EAAS,GAMTM,EAAeb,EAAIS,MAAM,IAAIC,OAHlB,OAAOL,SAA6BA,WAC1CA,UAA8BD,OAEW,MAE9CU,EAAqBD,EAAahF,OAExC,IAAIkF,EAEJ,MAAMC,EAA0B,IAAIN,OAAO,IAAIL,MAA2B,KAC1E,IAAK,IAAIY,EAAI,EAAGA,EAAIH,EAAoBG,GAAK,EACzCF,EAAQF,EAAaI,GACjBF,GAASA,EAAMlF,QAAUkF,IAAUX,GACnCG,EAAO/E,KAAKuF,EAAMd,QAAQe,EAAyB,KAG3D,OAAOT,EAQX,SAASW,EAAmBC,EAAQC,GAChC,IAAKA,GAA4B,iBAAXD,EAClB,OAAOA,EAAOE,WAElB,GAAID,EAAOE,SAAS,MAGhB,OAAOH,EADcC,EAAOG,MAAM,EAAGH,EAAOvF,OAAS,MACvBwF,WAGlC,MAIMG,EAJaJ,EACdnB,QAAQ,aAAc,OACtBA,QAAQ,MAAO,IAEeQ,MAAM,KACzC,IAAK,MAAMgB,KAAYD,EACfC,KAAYN,IAEZA,EAASA,EAAOM,IAGxB,OAAKN,EAGEA,EAAOE,WAFH,GAUf,MAAMK,EAA6B,mCAE7BC,EAAqB,YAAQ,qBAAsB,CACrD,YAAM,gBAAiB,YAAM,CAAEC,OAAQ,IAAKC,SAAU,YACtD,YAAW,qBAAsB,CAC7B,YAAM,CAAED,OAAQ,EAAGC,SAAU,WAC7B,YAAQH,KAEZ,YAAM,cAAe,YAAM,CAAEE,OAAQ,IAAKC,SAAU,YACpD,YAAW,mBAAoB,CAC3B,YAAM,CAAED,OAAQ,IAAKC,SAAU,WAC/B,YAAQH,KAEZ,YAAW,kBAAmB,YAAQ,SAQ1C,IAAII,EAAe,E,cACbC,EAOF,YAAYC,EAAiBC,EAAUC,EAASC,GAC5CrC,KAAKkC,gBAAkBA,EACvBlC,KAAKmC,SAAWA,EAChBnC,KAAKoC,QAAUA,EACfpC,KAAKqC,kBAAoBA,EAEzBrC,KAAKsC,kBAAoB,IAAI,eAC7BtC,KAAKuC,WAAY,EACjBvC,KAAK8B,OAAS,EACd9B,KAAKzB,QAAU,iBAAiByD,IAChChC,KAAKwC,SAAW,GAChBxC,KAAKyC,mBAAqB,SAIhBC,GAEN,MAAMC,EAAmB3C,KAAK4C,UAAUC,cAAcC,UAEhDC,EAAsBJ,EAAmBK,OAAOhD,KAAK4C,UAAUC,cAAcI,cAE7EC,EAAUR,EAAKS,UAGrB,OADmBD,EAAUR,EAAKO,cACXF,GAAyBG,GAAWP,GAE/D3C,KAAKmC,SAASiB,aAAapD,KAAKoC,QAAQS,cAAe,KAAM7C,KAAKzB,SAClEyB,KAAKqD,4BAA8BrD,KAAKkC,gBAAgBoB,OAAOC,UAAU,KAIrE,GAAIvD,KAAKwD,WAGL,OAFAxD,KAAKxB,eAAiBwB,KAAKyD,cAAgB,cAAgB,qBAC3DzD,KAAKqC,kBAAkBqB,gBAG3B1D,KAAKxB,eAAiB,aACtBwB,KAAKqC,kBAAkBqB,kBAM/B,YACI,OAAQ,cAKZ,+BAGI,MAAMC,EAAQ3D,KACd,MAAO,CACH/B,YAAa+B,KAAK/B,YAAY2F,KAAKD,GACnC5F,aAAciC,KAAKjC,aAAa6F,KAAKD,GACrCrF,SAAU0B,KAAK1B,SAASsF,KAAKD,IAMrC,aACI,OAAO3D,KAAK6D,QAMhB,WAAWC,GACP9D,KAAK6D,QAAUC,EACf9D,KAAK+D,gBAKT,cACI,OAAO/D,KAAKwC,SAMhB,YAAYlG,GAqBR,GApBA0D,KAAKkC,gBAAgB8B,WAAW,CAC5BC,UAAW,CAAEC,KAAM,CAAEC,QAASnE,KAAKoE,mBACnCC,iBAAkB,CAAC,MAAO,YAE9BrE,KAAKwC,SAAWlG,EAChB0D,KAAKlB,cAAgBkB,KAAKsE,qBAAuBtE,KAAKuE,iCAAmCvE,KAAKhB,QAAQjD,OAClGiE,KAAKsE,qBACLE,WAAW,KAIPxE,KAAKyE,sBAGTzE,KAAK0E,4BAA8B1E,KAAKwC,SAASzG,OAAS,IAC1DiE,KAAK8D,OAAS9D,KAAKwC,SAAS,GACxBxC,KAAK6D,QAAQlF,YACbqB,KAAK2E,mBAGT3E,KAAK6D,UAAY7D,KAAK0E,2BAA4B,CAElD,MAAME,EAAc5E,KAAKwC,SAASqC,KAIlC9H,GAASA,EAAMT,QAAU0D,KAAK6D,QAAQvH,OACtC,GAAIsI,EAEA,YADA5E,KAAKjC,aAAa6G,GAGtB5E,KAAK8D,OAAS,MAMtB,oBACI,OAAO9D,KAAKoC,QAAQS,cAAciC,UAAUC,SAAS,OAMzD,0BACI,OAAO/E,KAAKgF,OAAShF,KAAKgF,OAAOC,yBAAsBC,EAK3D,iBACI,QAAOlF,KAAKgF,QAAShF,KAAKgF,OAAOxB,WAKrC,uBACI,QAAOxD,KAAKgF,QAAShF,KAAKgF,OAAOZ,iBAKrC,0BACI,QAAOpE,KAAKgF,QAAShF,KAAKgF,OAAOV,oBAKrC,uCACI,OAAOtE,KAAKgF,OAAShF,KAAKgF,OAAOT,iCAAmC,EAKxE,iCACI,OAAOvE,KAAKgF,QAAShF,KAAKgF,OAAON,2BAMrC,mBACI,OAAO1E,KAAKgF,OAAShF,KAAKgF,OAAOG,2BAAwBD,EAM7D,kBAAkBE,GACVpF,KAAK6D,SAAW7D,KAAKgF,OAAOK,0BAC5BrF,KAAK/B,YAAY+B,KAAK6D,UAErB7D,KAAKgF,OAAOK,0BAA4BD,GACzCpF,KAAK/B,YAAY+B,KAAK6D,SAM9B,gBAEI,MAAMpI,EAAQuE,KAAKhB,QAAQsG,QAAQtF,KAAK6D,SACxC7D,KAAKsC,kBAAkBiD,KAAK,GAAGvF,KAAKzB,WAAW9C,KAKnD,kBAEI,MAAMA,EAAQuE,KAAKhB,QAAQsG,QAAQtF,KAAK6D,SACxC7D,KAAK8D,OAAS9D,KAAKhB,QAAQvD,EAAQ,EAAI,EAAIuE,KAAKhB,QAAQjD,OAAS,EAAIN,EAAQ,GACzEuE,KAAK6D,QAAQlF,YACbqB,KAAKwF,kBAELxF,KAAKsE,qBACLtE,KAAKyF,eAAehK,GAM5B,kBAEI,MAAMA,EAAQuE,KAAKhB,QAAQsG,QAAQtF,KAAK6D,SACxC7D,KAAK8D,OAAS9D,KAAKhB,QAAQvD,EAAQ,EAAIuE,KAAKhB,QAAQjD,OAAS,EAAI,EAAIN,EAAQ,GACzEuE,KAAK6D,QAAQlF,YACbqB,KAAK2E,kBAEL3E,KAAKsE,qBACLtE,KAAK0F,WAAWjK,GAOxB,aAAaa,GACT0D,KAAKuC,WAAY,EACjBvC,KAAK8D,OAASxH,EAOlB,UAAUS,EAAOE,GAEb,IAMI0I,EAEAC,EARAC,EAAU9I,EAAMT,MAEhBwJ,GAAiB9F,KAAKgF,QAAUhF,KAAKgF,OAAOe,kBAC1C9F,EAAS4F,GACTA,GAASG,cAMf,GAAqB,iBAAV/I,EAAoB,CAE3B,MAAMgJ,EAAWhJ,EAAMlB,OACvB,IAAK,IAAIoF,EAAI,EAAGA,EAAI8E,EAAU9E,GAAK,EAE/BwE,EAAWG,EAAcR,QAAQrI,EAAMkE,IACvCyE,EAAW3I,EAAMkE,GAAGpF,OAChB4J,GAAY,GAAKC,EAAW,IAC5BC,EACI,GAAGA,EAAQK,UAAU,EAAGP,aAAoBE,EAAQK,UAAUP,EAAUA,EAAWC,cAC5EC,EAAQK,UAAUP,EAAWC,GACxCE,EACI,GAAGA,EAAcI,UAAU,EAAGP,aAAoB,IAAIQ,OAAOP,cACtDE,EAAcI,UAAUP,EAAWC,SAIjD3I,IAEL0I,EAAWG,EAAcR,QAAQrI,GACjC2I,EAAW3I,EAAMlB,OACb4J,GAAY,GAAKC,EAAW,IAC5BC,EACI,GAAGA,EAAQK,UAAU,EAAGP,aAAoBE,EAAQK,UAAUP,EAAUA,EAAWC,cAC5EC,EAAQK,UAAUP,EAAWC,KAGhD,OAAOC,EAKX,YACI7F,KAAKuC,WAAY,EAMrB,SAASjG,GACL,OAAO0D,KAAK8D,SAAWxH,EAO3B,YAAYA,EAAO8J,GAUf,OATIA,IACAA,EAAEC,kBACFD,EAAEE,kBAENtG,KAAKgF,OAAOuB,YAAYjK,GACxBkI,WAAW,IAGLxE,KAAKgF,OAAOwB,kBAAkBjB,KAAKjJ,GAAS,IAC3C,EAKX,oBAII,GAHK0D,KAAK4C,YACN5C,KAAK4C,UAAY5C,KAAKoC,SAEtBpC,KAAKyG,WAAWC,MAAO,CAEvB,MAAMC,EAAW,IAAMC,UAAU5G,KAAK4C,UAAUC,eAE1CgE,EAAW,IAAMD,UAAU5G,KAAKyG,WAAWC,MAAM7D,eAEjDiE,EAAkBC,YAAYJ,EAAS,kBAAoBA,EAAS,kBAAoB,IACzFxG,QAAQ,KAAM,KAEb6G,EAAeD,YAAYJ,EAAS,eAAiBA,EAAS,eAAiB,KAChFxG,QAAQ,KAAM,KAEb8G,EAAeF,YAAYF,EAAS/E,OAAS+E,EAAS/E,OAAS,KAChE3B,QAAQ,KAAM,KAGnBH,KAAKjB,UADUiB,KAAKuE,iCAAmC0C,EAC1BD,EAAeF,EAA3B,KAErB9G,KAAKmC,SAAS+E,SAASlH,KAAKoC,QAAQS,cAAe,aAAc,WAMrE,eAAepH,GACX,GAAc,IAAVA,GAIJ,GAAIuE,KAAKyG,WAAY,CAEjB,MAAMU,EAAYnH,KAAKyG,WAAW9K,UAAUF,EAAQ,GAChD0L,IAAcnH,KAAKyC,mBAAmB0E,EAAUtE,iBAChD7C,KAAK4C,UAAUC,cAAcC,UAAYqE,EAAUtE,cAAcM,iBAPrEnD,KAAKoH,iBAeb,WAAW3L,GACP,GAAIA,EAAQ,EAAIuE,KAAKhB,QAAQjD,OAAS,EAClCiE,KAAKqH,mBAGT,GAAIrH,KAAKyG,WAAY,CAEjB,MAAMU,EAAYnH,KAAKyG,WAAW9K,UAAUF,EAAQ,GAChD0L,IAAcnH,KAAKyC,mBAAmB0E,EAAUtE,iBAChD7C,KAAK4C,UAAUC,cAAcC,UACzBqE,EAAUtE,cAAcM,UACpBH,OAAOhD,KAAK4C,UAAUC,cAAcI,cACpCD,OAAOmE,EAAUtE,cAAcI,gBAOnD,cACIjD,KAAKqD,4BAA4BiE,cAMrC,iBACItH,KAAK4C,UAAUC,cAAcC,UAAY9C,KAAK4C,UAAUC,cAAc0E,aAM1E,cACIvH,KAAK4C,UAAUC,cAAcC,UAAY,G,OAGjDb,EAA4BuF,UAAO,SAA6CC,GAAK,OAAO,IAAKA,GAAKxF,GAA6B,iCAAyB,KAA4B,iCAAyB,aAAmB,iCAAyB,cAAoB,iCAAyB,uBAC1SA,EAA4ByF,UAAO,iCAAyB,CAAEC,KAAM1F,EAA6B2F,UAAW,CAAC,CAAC,wBAAyBC,UAAW,SAA2ClL,EAAIC,GAG3L,GAH2M,EAALD,IACpM,2BAAmBH,GAAK,GACxB,2BAAmBC,GAAK,IACjB,EAALE,EAAQ,CACV,IAAImL,EACJ,8BAAsBA,EAAK,gCAA0BlL,EAAIgG,UAAYkF,EAAGpB,OACxE,8BAAsBoB,EAAK,gCAA0BlL,EAAI6J,WAAaqB,KACrEC,UAAW,CAAC,EAAG,WAAY,OAAQ,SAAU,EAAG,WAAY,WAAY,UAAW,SAAUC,SAAU,EAAGC,aAAc,SAAkDtL,EAAIC,GAAgB,EAALD,GAC1L,0BAAkB,aAAc,WAAuE,OAAOC,EAAIsL,aAAlH,CAAkI,OAAQ,WAAiE,OAAOtL,EAAIsL,cAC/M,EAALvL,IACF,2BAAmB,OAAQC,EAAIuL,MAAQ,UAAY,MACnD,2BAAmB,SAAUvL,EAAIuL,OAASvL,EAAIkC,cAAgBlC,EAAImC,UAAY,OAA9E,CAAsF,aAAc,WACpG,2BAAmB,gBAAiBnC,EAAIuL,MAAxC,CAA+C,SAAUvL,EAAIwL,UAC5DC,QAAS,CAAE/F,kBAAmB,gBAAkBgG,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,EAAG,mBAAoB,2BAA4B,CAAC,iBAAkB,IAAK,CAAC,cAAe,IAAK,CAAC,cAAe,IAAK,CAAC,EAAG,aAAc,CAAC,OAAQ,UAAW,EAAG,iBAAkB,CAAC,YAAa,IAAK,CAAC,QAAS,GAAI,EAAG,WAAY,CAAC,QAAS,kBAAmB,EAAG,QAAS,CAAC,OAAQ,SAAU,EAAG,KAAM,SAAU,aAAc,EAAG,QAAS,CAAC,EAAG,mBAAoB,CAAC,aAAc,IAAK,CAAC,OAAQ,SAAU,EAAG,KAAM,cAAe,CAAC,OAAQ,IAAK,WAAY,KAAM,EAAG,SAAU,CAAC,EAAG,QAAS,CAAC,OAAQ,SAAU,EAAG,gBAAiB,EAAG,KAAM,QAAS,eAAgBC,SAAU,SAA8C9L,EAAIC,GAK/qB,GAL+rB,EAALD,IACxrB,0BAAkB,EAAGD,EAAoD,EAAG,EAAG,cAAe,GAC9F,0BAAkB,EAAGG,EAAoD,EAAG,EAAG,cAAe,KAAM,EAAG,uCACvG,0BAAkB,EAAG+B,EAAoD,EAAG,EAAG,cAAe,KAAM,EAAG,uCACvG,0BAAkB,EAAGc,EAAoD,EAAG,EAAG,cAAe,KAAM,EAAG,wCAChG,EAAL/C,EAAQ,CACV,MAAM0B,EAAM,2BAAmB,GACzBqK,EAAM,2BAAmB,GACzBC,EAAM,2BAAmB,GAC/B,0BAAkB,mBAAoB/L,EAAIqI,sBAAwBrI,EAAIuL,MAAQQ,EAAMD,GAApF,CAA0F,0BAA2B,+BAAuB,EAAG9I,EAAKhD,EAAIoC,QAASpC,EAAI6B,cAAgBJ,EAAKzB,EAAIK,MAAOL,EAAIgM,6BACxMC,WAAY,CAAC,mBAAyB,UAAgB,QAAcC,OAAQ,CAAC,6LAA8LC,KAAM,CAAEC,UAAW,CAACnH,M,oBA8IlSoH,EACF,cAIIjJ,KAAKoE,kBAAmB,EAIxBpE,KAAKwD,YAAa,EAIlBxD,KAAKkJ,mBAAoB,EAIzBlJ,KAAKmJ,0BAA2B,EAIhCnJ,KAAKoJ,iBAAkB,EAIvBpJ,KAAKqJ,mBAAoB,EAKzBrJ,KAAKsJ,UAAY,G,OAGzBL,EAAgBzB,UAAO,SAAiCC,GAAK,OAAO,IAAKA,GAAKwB,IAC3DA,EAAgBM,WAAQ,0CAAmB,CAAEC,QAAS,WAAqC,OAAO,IAAIP,GAAsBhI,MAAOgI,EAAiBQ,WAAY,S,oBAkD7KC,EAUF,YAAYC,EAAKC,EAAQC,EAAiBzH,EAAS0H,EAAW3H,EAAU4H,GACpE/J,KAAK6J,gBAAkBA,EACvB7J,KAAKoC,QAAUA,EACfpC,KAAK8J,UAAYA,EACjB9J,KAAKmC,SAAWA,EAMhBnC,KAAKgK,wBAAqB,EAI1BhK,KAAKwD,YAAa,EAMlBxD,KAAKiK,oBAAiB,EAKtBjK,KAAK+F,mBAAoB,EAKzB/F,KAAKkK,sBAAuB,EAK5BlK,KAAKmK,wBAA0B,IAS/BnK,KAAKoK,6BAA0B,EAQ/BpK,KAAKqK,kCAAoC,IAMzCrK,KAAKsK,0BAA4B,MAIjCtK,KAAKsE,qBAAsB,EAI3BtE,KAAKuE,iCAAmC,EAMxCvE,KAAKqF,0BAA2B,EAIhCrF,KAAK0E,4BAA6B,EAKlC1E,KAAKuK,iBAAmB,IAAI,eAK5BvK,KAAKwK,mBAAqB,IAAI,eAI9BxK,KAAKwG,kBAAoB,IAAI,eAI7BxG,KAAKyK,gBAAkB,IAAI,eAI3BzK,KAAKoI,QAAS,EACdpI,KAAK0K,QAAS,EACd1K,KAAK2K,KAAO,OACZ3K,KAAKoF,qBAAsB,EAC3BpF,KAAKuC,WAAY,EACjBvC,KAAKmJ,0BAA2B,EAEhCnJ,KAAK4K,kBAAoB,IAAI,eAC7B5K,KAAKwC,SAAW,GAChBxC,KAAK6K,UAAY,cACjB7K,KAAK8K,eAAiB,GACtB9K,KAAK+K,WAAapB,EAAIqB,aAAa5I,EAAS2H,EAAkB5H,GACzD8I,QAAQ,CAAEA,QAAShC,EAAiBiC,SAAUtB,IACnDuB,OAAOC,OAAOpL,KAAM,CAChBqL,2BAA4BzB,EAAOV,kBACnCC,yBAA0BS,EAAOT,yBACjC9D,yBAA0BuE,EAAOR,gBACjC1E,2BAA4BkF,EAAOP,kBACnCW,mBAAoBJ,EAAON,UAC3BlF,iBAAkBwF,EAAOxF,iBACzBZ,WAAYoG,EAAOpG,aAM3B,WACIxD,KAAKsL,sBAAwBtL,KAAKsL,uBAAyB,GAC3DtL,KAAKgK,wBAC2B,IAA5BhK,KAAKgK,mBAAgC,EAAIhK,KAAKgK,mBAClDhK,KAAKuL,gBAAkBvL,KAAKuL,iBAAmB,OAEnBrG,IAAxBlF,KAAKiK,gBAAkC,WAAD,CAAcjK,KAAKwL,aACzDxL,KAAKiK,gBAAiB,GAEtB,YAAajK,KAAKwL,aAClBxL,KAAKiK,gBAAiB,GAEtBjK,KAAKiK,eACLjK,KAAKyL,eAGLzL,KAAK0L,cAET1L,KAAK2L,0BAOT,QAAQvF,GAMJ,MAAM9J,OAA2B4I,IAAnBkB,EAAEwF,OAAOtP,MACjB8J,EAAEwF,OAAOtP,WACgB4I,IAAzBkB,EAAEwF,OAAOC,YACLzF,EAAEwF,OAAOC,YACTzF,EAAEwF,OAAOE,UACN,MAATxP,GAAiBA,EAAMyP,OAAOhQ,QAAUiE,KAAKgK,oBAC7ChK,KAAKuK,iBAAiBhF,MAAK,GAC3BvF,KAAK4K,kBAAkBrF,KAAKa,EAAEwF,OAAOtP,SAGrC0D,KAAKuK,iBAAiBhF,MAAK,GAC3BvF,KAAKwK,mBAAmBjF,MAAK,GAC7BvF,KAAKgM,QAOb,SAASC,GACL,GAAIjM,KAAKkM,WAAY,CAGjB,GAAsB,KAAlBD,EAAME,SAAgC,WAAdF,EAAMG,IAE9B,YADApM,KAAKgM,OAKT,GAAsB,KAAlBC,EAAME,SAAgC,YAAdF,EAAMG,IAG9B,OAFApM,KAAKoF,qBAAsB,OAC3BpF,KAAKkM,WAAW1G,kBAKpB,GAAsB,KAAlByG,EAAME,SAAgC,cAAdF,EAAMG,IAG9B,OAFApM,KAAKoF,qBAAsB,OAC3BpF,KAAKkM,WAAWvH,kBAKpB,GAAsB,KAAlBsH,EAAME,SAAgC,UAAdF,EAAMG,IAE9B,YADApM,KAAKkM,WAAWG,qBAQ5B,UACIrM,KAAKuC,WAAY,EAGjBiC,WAAW,KAIyB,IAA5BxE,KAAKgK,qBACLhK,KAAKuK,iBAAiBhF,MAAK,GAC3BvF,KAAK4K,kBAAkBrF,KAAKvF,KAAKoC,QAAQS,cAAcvG,OAAS,MAEpE,GAKR,SACI0D,KAAKuC,WAAY,EACbvC,KAAKkM,aAAelM,KAAKkM,WAAW3J,WACpCvC,KAAKyK,gBAAgBlF,KAAKvF,KAAKkM,WAAWpI,QAEzC9D,KAAKsM,WAAsC,IAAzBtM,KAAKwC,SAASzG,QACjCiE,KAAKyK,gBAAgBlF,KAAK,IAAIzF,EAAeE,KAAKoC,QAAQS,cAAcvG,MAAO0D,KAAKoC,QAAQS,cAAcvG,OAAO,IAOzH,UAAU2P,GAEN,GAAKjM,KAAKkM,aAIY,IAAlBD,EAAME,SAA+B,QAAdF,EAAMG,KAC7BpM,KAAKuM,SAGa,IAAlBN,EAAME,SAA+B,QAAdF,EAAMG,KAAmC,KAAlBH,EAAME,SAAgC,UAAdF,EAAMG,KAAiB,CAE7F,GADAH,EAAM3F,iBACFtG,KAAKqF,yBAEL,YADArF,KAAKkM,WAAWG,oBAGfrM,KAAKqF,2BACNrF,KAAKkM,WAAWG,kBAAkBrM,KAAKoF,qBACvCpF,KAAKoF,qBAAsB,EAC3BpF,KAAKgM,SAQjB,YAAYjP,GAER,IAAIyP,EACJ,GAAIxM,KAAKoK,wBAAyB,CAE9B,MAAMqC,EAASzM,KAAK0M,iBAAiB/L,MAAM,IAAIC,OAAO,KAAKZ,KAAKqK,yCAChErK,KAAK0M,iBAAmBD,EAAOhL,MAAM,EAAGgL,EAAO1Q,OAAS,GAAG4Q,OAAO5P,EAAMT,OAAOsQ,KAAK,IACpFJ,EAAWxM,KAAK0M,sBAGhBF,EAAWzP,EAAMT,MAErB0D,KAAK8J,UAAU+C,kBAAkBL,GAChCxM,KAAK8J,UAAiB,QAAEgD,SAASN,GAClCxM,KAAK6J,gBAAgBkD,eACrB/M,KAAKgM,OAKT,cACI,OAAOhM,KAAKwC,SAKhB,OACIxC,KAAK+K,WACAiC,OAAO/K,GACPgL,GAAGjN,KAAKsM,WACRY,SAAS,CAAEC,YAAenN,KAAKoI,OAAS,MAAQ,UAAzB,UACvBgF,KAAK,CACNC,aAAcrN,KACd6K,UAAW7K,KAAK6K,UAChB7B,WAAW,EACXZ,OAAQpI,KAAKoI,SAEjBpI,KAAKsN,sBAAwBtN,KAAKmC,SAASoL,OAAO,WAAY,QAI7DnH,IACmC,IAA5BpG,KAAKgK,oBAA4BhK,KAAKoC,QAAQS,cAAckC,SAASqB,EAAEwF,SAGtE5L,KAAKqL,6BAA8BrL,KAAKoC,QAAQS,cAAckC,SAASqB,EAAEwF,SAG9E5L,KAAKwN,mBAETxN,KAAKkM,WAAalM,KAAK+K,WAAW0C,SAClCzN,KAAKkM,WAAWlH,OAAShF,KAGzB,MAAM0N,GAAmB1N,KAAK+F,kBACxB9F,EAASD,KAAK8J,UAAU6D,QAAQrR,OAChC0D,KAAK8J,UAAU6D,QAAQrR,OACxBiF,WACAyE,cACLhG,KAAKkM,WAAWjP,MAAQ+C,KAAK4N,cAAcF,GAC3C1N,KAAKkM,WAAWlN,QAAUgB,KAAKwC,SAC/BxC,KAAKoC,QAAQS,cAAcgL,QAC3B7N,KAAKkM,WAAW5J,kBAAkBiB,UAIjCuK,IACG9N,KAAK+N,iBAAmBD,EACxB9N,KAAK6J,gBAAgBkD,iBAEzB/M,KAAK0K,QAAS,EAKlB,OACQ1K,KAAK+K,WAAWiD,UAChBhO,KAAK+K,WAAWiB,OAChBhM,KAAKsN,wBACLtN,KAAKkM,WAAa,KAClBlM,KAAK0K,QAAS,EACd1K,KAAK6J,gBAAgBkD,gBAM7B,iBACQ/M,KAAKkM,aAAelM,KAAKkM,WAAW3J,WACpCvC,KAAKgM,OAMb,cAEI,IAAK,MAAMiC,KAAOjO,KAAK8K,eACnBmD,EAAI3G,cAERtH,KAAK+K,WAAWmD,UAMpB,eACIlO,KAAK8K,eAAepP,KAAKsE,KAAK4K,kBACzB3O,KAAK,YAAa+D,KAAKuL,iBAAkB,YAI9CjP,IACI0D,KAAK0M,iBAAmBpQ,IACvB,YAAU,IAGT0D,KAAKwL,YACNjI,UAIJvE,IACGgB,KAAKmO,kBAAkBnP,MAO/B,cACIgB,KAAK8K,eAAepP,KAAKsE,KAAK4K,kBACzB3O,KAAK,YAAa+D,KAAKuL,iBAAkB,YAI7CjP,IACG0D,KAAK0M,iBAAmBpQ,EAExB,MAAMoR,EAAkB1N,KAAKoO,eAAe9R,GAC5C,OAAO,YAAK0D,KAAKwL,WACZvP,KAAK,YAITqF,GACUA,GAAUtB,KAAKqO,UAAUrO,KAAKsO,gBAAgBhN,GAASoM,IAC7D,kBAEJnK,UAIJvE,IACGgB,KAAKmO,kBAAkBnP,MAQ/B,gBAAgBsC,GAEZ,MAAMiN,EAAcnN,EAAmBE,EAAQtB,KAAKwO,sBAKpD,OAHyBxO,KAAK+F,kBACxB9F,EAASsO,GACTA,GACkBvI,cAO5B,cAAcyI,GAEV,IAAIxR,EAAQwR,EAcZ,OAbIzO,KAAKoK,yBAA2BpK,KAAKkK,qBAChClK,KAAK0O,qBAAqB,GAAG1O,KAAKsK,4BAA4BtK,KAAKmK,0BAA2BnK,KAAKqK,qCAEpGpN,EAAQoD,EAAS,EAA4BL,KAAKmK,wBAAyBnK,KAAKsK,0BAA2BtK,KAAKqK,oCAIpHpN,EADK+C,KAAKkK,qBACF7J,EAAS,EAA4BL,KAAKmK,wBAAyBnK,KAAKsK,2BAIxEjK,EAAS,EAA4B,KAAM,KAAML,KAAKqK,mCAE3DpN,EAOX,eAAeX,GAGX,IAAIoR,GAAmB1N,KAAK+F,kBACtB9F,EAAS3D,GACTA,GACDiF,WACAyE,cAEL,OADA0H,EAAkB1N,KAAK4N,cAAcF,GAC9BA,EAQX,UAAU3Q,EAAO4R,GAEb,IAAIC,EACJ,GAAoB,iBAATD,EAAmB,CAC1BC,EAAcD,EAAK5S,OACnB,IAAK,IAAIoF,EAAI,EAAGA,EAAIyN,EAAazN,GAAK,EAClC,GAAIwN,EAAKxN,GAAGpF,OAAS,GAAKgB,EAAMuI,QAAQqJ,EAAKxN,IAAM,EAC/C,OAAO,EAGf,OAAO,EAEX,OAAOpE,EAAMuI,QAAQqJ,IAAS,EAOlC,kBAAkB3P,GAId,GAHAgB,KAAK6O,eAAe7P,GAAW,IAC/BgB,KAAKuK,iBAAiBhF,MAAK,GAC3BvF,KAAKwK,mBAAmBjF,MAAMvF,KAAK8O,cAC9B9O,KAAK8O,cAIV,GAAK9O,KAAKuC,YAAavC,KAAKmJ,yBAG5B,GAAInJ,KAAKkM,WAAY,CAGjB,MAKMwB,IALiB1N,KAAK+F,kBACtB9F,EAASD,KAAK8J,UAAU6D,QAAQrR,OAChC0D,KAAK8J,UAAU6D,QAAQrR,QAAU,IAGDiF,WAAWyE,cACjDhG,KAAKkM,WAAWjP,MAAQ+C,KAAK4N,cAAcF,GAC3C1N,KAAKkM,WAAWlN,QAAUgB,KAAKwC,cAG/BxC,KAAKoN,YAnBLpN,KAAKgM,OA2Bb,eAAe+C,GAEX,MAAMC,EAAUD,EAAQtN,MAAM,EAAGzB,KAAKsL,uBAEhC2D,EAAUjP,KAAKkP,iBAA6BlP,KAAKmP,aAAaH,GAA5BA,EACxC,GAAIhP,KAAKoP,oBAAqB,CAE1B,IAAIpQ,EAAU,GAGCiQ,EACVI,IAIJ/N,GAAWF,EAAmBE,EAAQtB,KAAKoP,sBACvCE,OAAO,CAMXC,EAAGpO,EAAGf,IAAMA,EAAEkF,QAAQiK,KAAOpO,GACvBqO,QAINC,IAEGzQ,EAAQtD,KAAK,IAAIoE,EAAe2P,EAAOA,GAAO,IAE9CzQ,EAAUA,EAAQ2N,OAAOsC,EACpBK,OAIJhO,GAAWF,EAAmBE,EAAQtB,KAAKoP,uBAAyBK,GAChEJ,IAIJ/N,GAAW,IAAIxB,EAAewB,EAAQF,EAAmBE,EAAQtB,KAAKwO,2BAE3ExO,KAAKwC,SAAWxD,OAGhBgB,KAAKwC,SAAWyM,EAAOI,IAMtB/N,GAAW,IAAIxB,EAAewB,EAAQF,EAAmBE,EAAQtB,KAAKwO,wBAQ/E,aAAaO,GACT,IAAKA,EAAQhT,OACT,OAAOgT,EAEX,GAAI/O,WAAKkP,kBAE+B,iBAA1BlP,KAAKkP,kBACkC,IAA9C/D,OAAOuE,KAAK1P,KAAKkP,kBAAkBnT,OAGtC,OADA4T,QAAQC,MAAM,kGACPb,EAEX,MAAM,MAAEc,EAAK,UAAEC,GAAc9P,KAAKkP,iBAClC,OAAKY,GAA6B,QAAdA,GAAqC,SAAdA,GAEvCH,QAAQC,MAAM,6FACPb,GAEe,iBAAfA,EAAQ,GACM,QAAde,EAAsBf,EAAQgB,OAAShB,EAAQgB,OAAOC,UAE5DH,GAA0B,iBAAVA,EAKdd,EAAQgB,KAAK,CAKnB3P,EAAG6P,KAEA,MAAMC,EAAU9O,EAAmBhB,EAAGyP,GAEhCM,EAAU/O,EAAmB6O,EAAGJ,GACtC,OAAIK,EAAUC,EACW,QAAdL,GAAuB,EAAI,EAElCI,EAAUC,EACW,QAAdL,EAAsB,GAAK,EAE/B,KAnBPH,QAAQC,MAAM,qEACPb,GAyBf,aACI,OAAO/O,KAAKwC,SAASzG,OAAS,EAMlC,0BACI,GAAIiE,KAAKoK,yBAA2BpK,KAAKkK,sBACjClK,KAAK0O,qBAAqB,GAAG1O,KAAKsK,4BAA4BtK,KAAKmK,0BAA2BnK,KAAKqK,mCACvG,MAAM,IAAI+F,MAAM,qJACgDpQ,KAAKmK,qFAC3BnK,KAAKsK,4EAUvD,qBAAqB+F,EAAMC,GACvB,IAAK,IAAInP,EAAI,EAAGA,EAAIkP,EAAKtU,OAAQoF,IAC7B,GAAIkP,EAAKE,OAAOpP,GAAGmE,QAAQgL,IAAS,EAChC,OAAO,EAGf,OAAO,G,OAGf5G,EAAmBlC,UAAO,SAAoCC,GAAK,OAAO,IAAKA,GAAKiC,GAAoB,iCAAyB,KAAgC,iCAAyBT,GAAkB,iCAAyB,qBAA2B,iCAAyB,cAAoB,iCAAyB,KAAmB,iCAAyB,aAAmB,iCAAyB,sBAC9ZS,EAAmB8G,UAAO,iCAAyB,CAAE7I,KAAM+B,EAAoB9B,UAAW,CAAC,CAAC,GAAI,YAAa,KAAMI,SAAU,EAAGC,aAAc,SAAyCtL,EAAIC,GAAgB,EAALD,GAC9L,0BAAkB,QAAS,SAAqDqB,GAAU,OAAOpB,EAAI6T,QAAQzS,IAA7G,CAAyH,QAAS,SAAqDA,GAAU,OAAOpB,EAAI8T,SAAS1S,IAArN,CAAiO,QAAS,WAAyD,OAAOpB,EAAI+T,WAA9S,CAA4T,QAAS,WAAyD,OAAO/T,EAAI+T,WAAzY,CAAuZ,OAAQ,WAAwD,OAAO/T,EAAI2P,UAAle,CAA+e,UAAW,SAAuDvO,GAAU,OAAOpB,EAAIgU,UAAU5S,KACzkB,EAALrB,GACF,2BAAmB,wBAAyBC,EAAImR,iBAAhD,CAAkE,YAAanR,EAAI8N,OAAS9N,EAAIsP,WAAW3N,QAAU,KAArH,CAA2H,gBAAiB3B,EAAI8N,OAAhJ,CAAwJ,oBAAqB9N,EAAI+N,OAChLkG,OAAQ,CAAErN,WAAY,aAAcuC,kBAAmB,oBAAqBmE,qBAAsB,uBAAwBC,wBAAyB,0BAA2BE,kCAAmC,oCAAqCC,0BAA2B,4BAA6BhG,oBAAqB,sBAAuBC,iCAAkC,mCAAoCc,yBAA0B,2BAA4BX,2BAA4B,6BAA8B0D,OAAQ,SAAUkD,sBAAuB,wBAAyBtB,mBAAoB,qBAAsBuB,gBAAiB,kBAAmBtB,eAAgB,iBAAkBuB,UAAW,YAAapH,iBAAkB,mBAAoBoK,qBAAsB,uBAAwBY,oBAAqB,sBAAuBF,iBAAkB,mBAAoB9E,wBAAyB,0BAA2BjF,sBAAuB,wBAAyBF,oBAAqB,sBAAuBoG,2BAA4B,6BAA8BiB,UAAW,aAAejE,QAAS,CAAEkC,iBAAkB,mBAAoBC,mBAAoB,qBAAsBhE,kBAAmB,oBAAqBiE,gBAAiB,mBAAqBqG,SAAU,CAAC,kB,oBA8Z3xCC,EAIF,iBACI,MAAO,CACHC,SAAUD,EACVE,UAAW,CAAC,IAAwB,O,OAIhDF,EAAgBG,UAAO,gCAAwB,CAAEvJ,KAAMoJ,IACvDA,EAAgBI,UAAO,gCAAwB,CAAE3H,QAAS,SAAiC/B,GAAK,OAAO,IAAKA,GAAKsJ,IAAuBK,QAAS,CAAC,CAAC,mB","file":"default~wizard-assign-user-assign-user-module~wizard-wizard-module.bbc0b162256bdbb09359.js","sourcesContent":["import { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map","import { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan((acc, value, index) => accumulator(acc, value, index + 1)), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map","import { EventEmitter, Component, Renderer2, ElementRef, ChangeDetectorRef, Output, ViewChild, ViewChildren, HostListener, Injectable, ɵɵdefineInjectable, Directive, ViewContainerRef, Input, NgModule } from '@angular/core';\nimport { isBs3, Utils } from 'ngx-bootstrap/utils';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NgControl } from '@angular/forms';\nimport { isObservable, from } from 'rxjs';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { debounceTime, tap, switchMap, mergeMap, filter, toArray } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/* tslint:disable */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-bootstrap/positioning';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ngx-bootstrap/component-loader';\nimport * as ɵngcc4 from '@angular/forms';\n\nconst _c0 = [\"ulElement\"];\nconst _c1 = [\"liElements\"];\nfunction TypeaheadContainerComponent_ng_template_0_Template(rf, ctx) { }\nfunction TypeaheadContainerComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 4);\n} if (rf & 2) {\n    const match_r7 = ctx.match;\n    const query_r8 = ctx.query;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHtml\", ctx_r2.highlight(match_r7, query_r8), ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction TypeaheadContainerComponent_ng_template_3_ng_template_2_li_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 10, 11);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const match_r11 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(match_r11);\n} }\nfunction TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_ng_template_3_Template(rf, ctx) { }\nconst _c2 = function (a0, a1, a2, a3) { return { item: a0, index: a1, match: a2, query: a3 }; };\nfunction TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 12, 11);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template_li_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const match_r11 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.selectActive(match_r11); });\n    ɵngcc0.ɵɵelementStart(2, \"a\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template_a_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const match_r11 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.selectMatch(match_r11, $event); });\n    ɵngcc0.ɵɵtemplate(3, TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_ng_template_3_Template, 0, 0, \"ng-template\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r24 = ɵngcc0.ɵɵnextContext();\n    const match_r11 = ctx_r24.$implicit;\n    const i_r12 = ctx_r24.index;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    const _r1 = ɵngcc0.ɵɵreference(2);\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r14.isActive(match_r11));\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r14.popupId + \"-\" + i_r12)(\"@typeaheadAnimation\", ctx_r14.animationState);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r14.itemTemplate || _r1)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(6, _c2, match_r11.item, i_r12, match_r11, ctx_r14.query));\n} }\nfunction TypeaheadContainerComponent_ng_template_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TypeaheadContainerComponent_ng_template_3_ng_template_2_li_0_Template, 3, 1, \"li\", 8);\n    ɵngcc0.ɵɵtemplate(1, TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template, 4, 11, \"li\", 9);\n} if (rf & 2) {\n    const match_r11 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", match_r11.isHeader());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !match_r11.isHeader());\n} }\nfunction TypeaheadContainerComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 5, 6);\n    ɵngcc0.ɵɵtemplate(2, TypeaheadContainerComponent_ng_template_3_ng_template_2_Template, 2, 2, \"ng-template\", 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"overflow-y\", ctx_r4.needScrollbar ? \"scroll\" : \"auto\")(\"height\", ctx_r4.needScrollbar ? ctx_r4.guiHeight : \"auto\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.matches);\n} }\nfunction TypeaheadContainerComponent_ng_template_5_ng_template_0_h6_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h6\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const match_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(match_r26);\n} }\nfunction TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_ng_template_2_Template(rf, ctx) { }\nfunction TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    const _r35 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 15, 11);\n    ɵngcc0.ɵɵlistener(\"click\", function TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r35); const match_r26 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r33 = ɵngcc0.ɵɵnextContext(2); return ctx_r33.selectMatch(match_r26, $event); })(\"mouseenter\", function TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template_button_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r35); const match_r26 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r36 = ɵngcc0.ɵɵnextContext(2); return ctx_r36.selectActive(match_r26); });\n    ɵngcc0.ɵɵtemplate(2, TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_ng_template_2_Template, 0, 0, \"ng-template\", 0);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r38 = ɵngcc0.ɵɵnextContext();\n    const match_r26 = ctx_r38.$implicit;\n    const i_r27 = ctx_r38.index;\n    const ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n    const _r1 = ɵngcc0.ɵɵreference(2);\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r29.isActive(match_r26));\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r29.popupId + \"-\" + i_r27)(\"@typeaheadAnimation\", ctx_r29.animationState);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r29.itemTemplate || _r1)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(6, _c2, match_r26.item, i_r27, match_r26, ctx_r29.query));\n} }\nfunction TypeaheadContainerComponent_ng_template_5_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TypeaheadContainerComponent_ng_template_5_ng_template_0_h6_0_Template, 2, 1, \"h6\", 8);\n    ɵngcc0.ɵɵtemplate(1, TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template, 3, 11, \"ng-template\", 14);\n} if (rf & 2) {\n    const match_r26 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", match_r26.isHeader());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !match_r26.isHeader());\n} }\nfunction TypeaheadContainerComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TypeaheadContainerComponent_ng_template_5_ng_template_0_Template, 2, 2, \"ng-template\", 7);\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.matches);\n} }\nconst _c3 = function (a0, a1, a2, a3) { return { matches: a0, itemTemplate: a1, query: a2, $implicit: a3 }; };\nconst latinMap = {\n    'Á': 'A',\n    'Ă': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ằ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ǎ': 'A',\n    'Â': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ầ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ä': 'A',\n    'Ǟ': 'A',\n    'Ȧ': 'A',\n    'Ǡ': 'A',\n    'Ạ': 'A',\n    'Ȁ': 'A',\n    'À': 'A',\n    'Ả': 'A',\n    'Ȃ': 'A',\n    'Ā': 'A',\n    'Ą': 'A',\n    'Å': 'A',\n    'Ǻ': 'A',\n    'Ḁ': 'A',\n    'Ⱥ': 'A',\n    'Ã': 'A',\n    'Ꜳ': 'AA',\n    'Æ': 'AE',\n    'Ǽ': 'AE',\n    'Ǣ': 'AE',\n    'Ꜵ': 'AO',\n    'Ꜷ': 'AU',\n    'Ꜹ': 'AV',\n    'Ꜻ': 'AV',\n    'Ꜽ': 'AY',\n    'Ḃ': 'B',\n    'Ḅ': 'B',\n    'Ɓ': 'B',\n    'Ḇ': 'B',\n    'Ƀ': 'B',\n    'Ƃ': 'B',\n    'Ć': 'C',\n    'Č': 'C',\n    'Ç': 'C',\n    'Ḉ': 'C',\n    'Ĉ': 'C',\n    'Ċ': 'C',\n    'Ƈ': 'C',\n    'Ȼ': 'C',\n    'Ď': 'D',\n    'Ḑ': 'D',\n    'Ḓ': 'D',\n    'Ḋ': 'D',\n    'Ḍ': 'D',\n    'Ɗ': 'D',\n    'Ḏ': 'D',\n    'ǲ': 'D',\n    'ǅ': 'D',\n    'Đ': 'D',\n    'Ƌ': 'D',\n    'Ǳ': 'DZ',\n    'Ǆ': 'DZ',\n    'É': 'E',\n    'Ĕ': 'E',\n    'Ě': 'E',\n    'Ȩ': 'E',\n    'Ḝ': 'E',\n    'Ê': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ề': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ḙ': 'E',\n    'Ë': 'E',\n    'Ė': 'E',\n    'Ẹ': 'E',\n    'Ȅ': 'E',\n    'È': 'E',\n    'Ẻ': 'E',\n    'Ȇ': 'E',\n    'Ē': 'E',\n    'Ḗ': 'E',\n    'Ḕ': 'E',\n    'Ę': 'E',\n    'Ɇ': 'E',\n    'Ẽ': 'E',\n    'Ḛ': 'E',\n    'Ꝫ': 'ET',\n    'Ḟ': 'F',\n    'Ƒ': 'F',\n    'Ǵ': 'G',\n    'Ğ': 'G',\n    'Ǧ': 'G',\n    'Ģ': 'G',\n    'Ĝ': 'G',\n    'Ġ': 'G',\n    'Ɠ': 'G',\n    'Ḡ': 'G',\n    'Ǥ': 'G',\n    'Ḫ': 'H',\n    'Ȟ': 'H',\n    'Ḩ': 'H',\n    'Ĥ': 'H',\n    'Ⱨ': 'H',\n    'Ḧ': 'H',\n    'Ḣ': 'H',\n    'Ḥ': 'H',\n    'Ħ': 'H',\n    'Í': 'I',\n    'Ĭ': 'I',\n    'Ǐ': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ḯ': 'I',\n    'İ': 'I',\n    'Ị': 'I',\n    'Ȉ': 'I',\n    'Ì': 'I',\n    'Ỉ': 'I',\n    'Ȋ': 'I',\n    'Ī': 'I',\n    'Į': 'I',\n    'Ɨ': 'I',\n    'Ĩ': 'I',\n    'Ḭ': 'I',\n    'Ꝺ': 'D',\n    'Ꝼ': 'F',\n    'Ᵹ': 'G',\n    'Ꞃ': 'R',\n    'Ꞅ': 'S',\n    'Ꞇ': 'T',\n    'Ꝭ': 'IS',\n    'Ĵ': 'J',\n    'Ɉ': 'J',\n    'Ḱ': 'K',\n    'Ǩ': 'K',\n    'Ķ': 'K',\n    'Ⱪ': 'K',\n    'Ꝃ': 'K',\n    'Ḳ': 'K',\n    'Ƙ': 'K',\n    'Ḵ': 'K',\n    'Ꝁ': 'K',\n    'Ꝅ': 'K',\n    'Ĺ': 'L',\n    'Ƚ': 'L',\n    'Ľ': 'L',\n    'Ļ': 'L',\n    'Ḽ': 'L',\n    'Ḷ': 'L',\n    'Ḹ': 'L',\n    'Ⱡ': 'L',\n    'Ꝉ': 'L',\n    'Ḻ': 'L',\n    'Ŀ': 'L',\n    'Ɫ': 'L',\n    'ǈ': 'L',\n    'Ł': 'L',\n    'Ǉ': 'LJ',\n    'Ḿ': 'M',\n    'Ṁ': 'M',\n    'Ṃ': 'M',\n    'Ɱ': 'M',\n    'Ń': 'N',\n    'Ň': 'N',\n    'Ņ': 'N',\n    'Ṋ': 'N',\n    'Ṅ': 'N',\n    'Ṇ': 'N',\n    'Ǹ': 'N',\n    'Ɲ': 'N',\n    'Ṉ': 'N',\n    'Ƞ': 'N',\n    'ǋ': 'N',\n    'Ñ': 'N',\n    'Ǌ': 'NJ',\n    'Ó': 'O',\n    'Ŏ': 'O',\n    'Ǒ': 'O',\n    'Ô': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ồ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ö': 'O',\n    'Ȫ': 'O',\n    'Ȯ': 'O',\n    'Ȱ': 'O',\n    'Ọ': 'O',\n    'Ő': 'O',\n    'Ȍ': 'O',\n    'Ò': 'O',\n    'Ỏ': 'O',\n    'Ơ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ờ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ȏ': 'O',\n    'Ꝋ': 'O',\n    'Ꝍ': 'O',\n    'Ō': 'O',\n    'Ṓ': 'O',\n    'Ṑ': 'O',\n    'Ɵ': 'O',\n    'Ǫ': 'O',\n    'Ǭ': 'O',\n    'Ø': 'O',\n    'Ǿ': 'O',\n    'Õ': 'O',\n    'Ṍ': 'O',\n    'Ṏ': 'O',\n    'Ȭ': 'O',\n    'Ƣ': 'OI',\n    'Ꝏ': 'OO',\n    'Ɛ': 'E',\n    'Ɔ': 'O',\n    'Ȣ': 'OU',\n    'Ṕ': 'P',\n    'Ṗ': 'P',\n    'Ꝓ': 'P',\n    'Ƥ': 'P',\n    'Ꝕ': 'P',\n    'Ᵽ': 'P',\n    'Ꝑ': 'P',\n    'Ꝙ': 'Q',\n    'Ꝗ': 'Q',\n    'Ŕ': 'R',\n    'Ř': 'R',\n    'Ŗ': 'R',\n    'Ṙ': 'R',\n    'Ṛ': 'R',\n    'Ṝ': 'R',\n    'Ȑ': 'R',\n    'Ȓ': 'R',\n    'Ṟ': 'R',\n    'Ɍ': 'R',\n    'Ɽ': 'R',\n    'Ꜿ': 'C',\n    'Ǝ': 'E',\n    'Ś': 'S',\n    'Ṥ': 'S',\n    'Š': 'S',\n    'Ṧ': 'S',\n    'Ş': 'S',\n    'Ŝ': 'S',\n    'Ș': 'S',\n    'Ṡ': 'S',\n    'Ṣ': 'S',\n    'Ṩ': 'S',\n    'Ť': 'T',\n    'Ţ': 'T',\n    'Ṱ': 'T',\n    'Ț': 'T',\n    'Ⱦ': 'T',\n    'Ṫ': 'T',\n    'Ṭ': 'T',\n    'Ƭ': 'T',\n    'Ṯ': 'T',\n    'Ʈ': 'T',\n    'Ŧ': 'T',\n    'Ɐ': 'A',\n    'Ꞁ': 'L',\n    'Ɯ': 'M',\n    'Ʌ': 'V',\n    'Ꜩ': 'TZ',\n    'Ú': 'U',\n    'Ŭ': 'U',\n    'Ǔ': 'U',\n    'Û': 'U',\n    'Ṷ': 'U',\n    'Ü': 'U',\n    'Ǘ': 'U',\n    'Ǚ': 'U',\n    'Ǜ': 'U',\n    'Ǖ': 'U',\n    'Ṳ': 'U',\n    'Ụ': 'U',\n    'Ű': 'U',\n    'Ȕ': 'U',\n    'Ù': 'U',\n    'Ủ': 'U',\n    'Ư': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ừ': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ȗ': 'U',\n    'Ū': 'U',\n    'Ṻ': 'U',\n    'Ų': 'U',\n    'Ů': 'U',\n    'Ũ': 'U',\n    'Ṹ': 'U',\n    'Ṵ': 'U',\n    'Ꝟ': 'V',\n    'Ṿ': 'V',\n    'Ʋ': 'V',\n    'Ṽ': 'V',\n    'Ꝡ': 'VY',\n    'Ẃ': 'W',\n    'Ŵ': 'W',\n    'Ẅ': 'W',\n    'Ẇ': 'W',\n    'Ẉ': 'W',\n    'Ẁ': 'W',\n    'Ⱳ': 'W',\n    'Ẍ': 'X',\n    'Ẋ': 'X',\n    'Ý': 'Y',\n    'Ŷ': 'Y',\n    'Ÿ': 'Y',\n    'Ẏ': 'Y',\n    'Ỵ': 'Y',\n    'Ỳ': 'Y',\n    'Ƴ': 'Y',\n    'Ỷ': 'Y',\n    'Ỿ': 'Y',\n    'Ȳ': 'Y',\n    'Ɏ': 'Y',\n    'Ỹ': 'Y',\n    'Ź': 'Z',\n    'Ž': 'Z',\n    'Ẑ': 'Z',\n    'Ⱬ': 'Z',\n    'Ż': 'Z',\n    'Ẓ': 'Z',\n    'Ȥ': 'Z',\n    'Ẕ': 'Z',\n    'Ƶ': 'Z',\n    'Ĳ': 'IJ',\n    'Œ': 'OE',\n    'ᴀ': 'A',\n    'ᴁ': 'AE',\n    'ʙ': 'B',\n    'ᴃ': 'B',\n    'ᴄ': 'C',\n    'ᴅ': 'D',\n    'ᴇ': 'E',\n    'ꜰ': 'F',\n    'ɢ': 'G',\n    'ʛ': 'G',\n    'ʜ': 'H',\n    'ɪ': 'I',\n    'ʁ': 'R',\n    'ᴊ': 'J',\n    'ᴋ': 'K',\n    'ʟ': 'L',\n    'ᴌ': 'L',\n    'ᴍ': 'M',\n    'ɴ': 'N',\n    'ᴏ': 'O',\n    'ɶ': 'OE',\n    'ᴐ': 'O',\n    'ᴕ': 'OU',\n    'ᴘ': 'P',\n    'ʀ': 'R',\n    'ᴎ': 'N',\n    'ᴙ': 'R',\n    'ꜱ': 'S',\n    'ᴛ': 'T',\n    'ⱻ': 'E',\n    'ᴚ': 'R',\n    'ᴜ': 'U',\n    'ᴠ': 'V',\n    'ᴡ': 'W',\n    'ʏ': 'Y',\n    'ᴢ': 'Z',\n    'á': 'a',\n    'ă': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ằ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ǎ': 'a',\n    'â': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ầ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ä': 'a',\n    'ǟ': 'a',\n    'ȧ': 'a',\n    'ǡ': 'a',\n    'ạ': 'a',\n    'ȁ': 'a',\n    'à': 'a',\n    'ả': 'a',\n    'ȃ': 'a',\n    'ā': 'a',\n    'ą': 'a',\n    'ᶏ': 'a',\n    'ẚ': 'a',\n    'å': 'a',\n    'ǻ': 'a',\n    'ḁ': 'a',\n    'ⱥ': 'a',\n    'ã': 'a',\n    'ꜳ': 'aa',\n    'æ': 'ae',\n    'ǽ': 'ae',\n    'ǣ': 'ae',\n    'ꜵ': 'ao',\n    'ꜷ': 'au',\n    'ꜹ': 'av',\n    'ꜻ': 'av',\n    'ꜽ': 'ay',\n    'ḃ': 'b',\n    'ḅ': 'b',\n    'ɓ': 'b',\n    'ḇ': 'b',\n    'ᵬ': 'b',\n    'ᶀ': 'b',\n    'ƀ': 'b',\n    'ƃ': 'b',\n    'ɵ': 'o',\n    'ć': 'c',\n    'č': 'c',\n    'ç': 'c',\n    'ḉ': 'c',\n    'ĉ': 'c',\n    'ɕ': 'c',\n    'ċ': 'c',\n    'ƈ': 'c',\n    'ȼ': 'c',\n    'ď': 'd',\n    'ḑ': 'd',\n    'ḓ': 'd',\n    'ȡ': 'd',\n    'ḋ': 'd',\n    'ḍ': 'd',\n    'ɗ': 'd',\n    'ᶑ': 'd',\n    'ḏ': 'd',\n    'ᵭ': 'd',\n    'ᶁ': 'd',\n    'đ': 'd',\n    'ɖ': 'd',\n    'ƌ': 'd',\n    'ı': 'i',\n    'ȷ': 'j',\n    'ɟ': 'j',\n    'ʄ': 'j',\n    'ǳ': 'dz',\n    'ǆ': 'dz',\n    'é': 'e',\n    'ĕ': 'e',\n    'ě': 'e',\n    'ȩ': 'e',\n    'ḝ': 'e',\n    'ê': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ề': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ḙ': 'e',\n    'ë': 'e',\n    'ė': 'e',\n    'ẹ': 'e',\n    'ȅ': 'e',\n    'è': 'e',\n    'ẻ': 'e',\n    'ȇ': 'e',\n    'ē': 'e',\n    'ḗ': 'e',\n    'ḕ': 'e',\n    'ⱸ': 'e',\n    'ę': 'e',\n    'ᶒ': 'e',\n    'ɇ': 'e',\n    'ẽ': 'e',\n    'ḛ': 'e',\n    'ꝫ': 'et',\n    'ḟ': 'f',\n    'ƒ': 'f',\n    'ᵮ': 'f',\n    'ᶂ': 'f',\n    'ǵ': 'g',\n    'ğ': 'g',\n    'ǧ': 'g',\n    'ģ': 'g',\n    'ĝ': 'g',\n    'ġ': 'g',\n    'ɠ': 'g',\n    'ḡ': 'g',\n    'ᶃ': 'g',\n    'ǥ': 'g',\n    'ḫ': 'h',\n    'ȟ': 'h',\n    'ḩ': 'h',\n    'ĥ': 'h',\n    'ⱨ': 'h',\n    'ḧ': 'h',\n    'ḣ': 'h',\n    'ḥ': 'h',\n    'ɦ': 'h',\n    'ẖ': 'h',\n    'ħ': 'h',\n    'ƕ': 'hv',\n    'í': 'i',\n    'ĭ': 'i',\n    'ǐ': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ḯ': 'i',\n    'ị': 'i',\n    'ȉ': 'i',\n    'ì': 'i',\n    'ỉ': 'i',\n    'ȋ': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ᶖ': 'i',\n    'ɨ': 'i',\n    'ĩ': 'i',\n    'ḭ': 'i',\n    'ꝺ': 'd',\n    'ꝼ': 'f',\n    'ᵹ': 'g',\n    'ꞃ': 'r',\n    'ꞅ': 's',\n    'ꞇ': 't',\n    'ꝭ': 'is',\n    'ǰ': 'j',\n    'ĵ': 'j',\n    'ʝ': 'j',\n    'ɉ': 'j',\n    'ḱ': 'k',\n    'ǩ': 'k',\n    'ķ': 'k',\n    'ⱪ': 'k',\n    'ꝃ': 'k',\n    'ḳ': 'k',\n    'ƙ': 'k',\n    'ḵ': 'k',\n    'ᶄ': 'k',\n    'ꝁ': 'k',\n    'ꝅ': 'k',\n    'ĺ': 'l',\n    'ƚ': 'l',\n    'ɬ': 'l',\n    'ľ': 'l',\n    'ļ': 'l',\n    'ḽ': 'l',\n    'ȴ': 'l',\n    'ḷ': 'l',\n    'ḹ': 'l',\n    'ⱡ': 'l',\n    'ꝉ': 'l',\n    'ḻ': 'l',\n    'ŀ': 'l',\n    'ɫ': 'l',\n    'ᶅ': 'l',\n    'ɭ': 'l',\n    'ł': 'l',\n    'ǉ': 'lj',\n    'ſ': 's',\n    'ẜ': 's',\n    'ẛ': 's',\n    'ẝ': 's',\n    'ḿ': 'm',\n    'ṁ': 'm',\n    'ṃ': 'm',\n    'ɱ': 'm',\n    'ᵯ': 'm',\n    'ᶆ': 'm',\n    'ń': 'n',\n    'ň': 'n',\n    'ņ': 'n',\n    'ṋ': 'n',\n    'ȵ': 'n',\n    'ṅ': 'n',\n    'ṇ': 'n',\n    'ǹ': 'n',\n    'ɲ': 'n',\n    'ṉ': 'n',\n    'ƞ': 'n',\n    'ᵰ': 'n',\n    'ᶇ': 'n',\n    'ɳ': 'n',\n    'ñ': 'n',\n    'ǌ': 'nj',\n    'ó': 'o',\n    'ŏ': 'o',\n    'ǒ': 'o',\n    'ô': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ồ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ö': 'o',\n    'ȫ': 'o',\n    'ȯ': 'o',\n    'ȱ': 'o',\n    'ọ': 'o',\n    'ő': 'o',\n    'ȍ': 'o',\n    'ò': 'o',\n    'ỏ': 'o',\n    'ơ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ờ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ȏ': 'o',\n    'ꝋ': 'o',\n    'ꝍ': 'o',\n    'ⱺ': 'o',\n    'ō': 'o',\n    'ṓ': 'o',\n    'ṑ': 'o',\n    'ǫ': 'o',\n    'ǭ': 'o',\n    'ø': 'o',\n    'ǿ': 'o',\n    'õ': 'o',\n    'ṍ': 'o',\n    'ṏ': 'o',\n    'ȭ': 'o',\n    'ƣ': 'oi',\n    'ꝏ': 'oo',\n    'ɛ': 'e',\n    'ᶓ': 'e',\n    'ɔ': 'o',\n    'ᶗ': 'o',\n    'ȣ': 'ou',\n    'ṕ': 'p',\n    'ṗ': 'p',\n    'ꝓ': 'p',\n    'ƥ': 'p',\n    'ᵱ': 'p',\n    'ᶈ': 'p',\n    'ꝕ': 'p',\n    'ᵽ': 'p',\n    'ꝑ': 'p',\n    'ꝙ': 'q',\n    'ʠ': 'q',\n    'ɋ': 'q',\n    'ꝗ': 'q',\n    'ŕ': 'r',\n    'ř': 'r',\n    'ŗ': 'r',\n    'ṙ': 'r',\n    'ṛ': 'r',\n    'ṝ': 'r',\n    'ȑ': 'r',\n    'ɾ': 'r',\n    'ᵳ': 'r',\n    'ȓ': 'r',\n    'ṟ': 'r',\n    'ɼ': 'r',\n    'ᵲ': 'r',\n    'ᶉ': 'r',\n    'ɍ': 'r',\n    'ɽ': 'r',\n    'ↄ': 'c',\n    'ꜿ': 'c',\n    'ɘ': 'e',\n    'ɿ': 'r',\n    'ś': 's',\n    'ṥ': 's',\n    'š': 's',\n    'ṧ': 's',\n    'ş': 's',\n    'ŝ': 's',\n    'ș': 's',\n    'ṡ': 's',\n    'ṣ': 's',\n    'ṩ': 's',\n    'ʂ': 's',\n    'ᵴ': 's',\n    'ᶊ': 's',\n    'ȿ': 's',\n    'ɡ': 'g',\n    'ᴑ': 'o',\n    'ᴓ': 'o',\n    'ᴝ': 'u',\n    'ť': 't',\n    'ţ': 't',\n    'ṱ': 't',\n    'ț': 't',\n    'ȶ': 't',\n    'ẗ': 't',\n    'ⱦ': 't',\n    'ṫ': 't',\n    'ṭ': 't',\n    'ƭ': 't',\n    'ṯ': 't',\n    'ᵵ': 't',\n    'ƫ': 't',\n    'ʈ': 't',\n    'ŧ': 't',\n    'ᵺ': 'th',\n    'ɐ': 'a',\n    'ᴂ': 'ae',\n    'ǝ': 'e',\n    'ᵷ': 'g',\n    'ɥ': 'h',\n    'ʮ': 'h',\n    'ʯ': 'h',\n    'ᴉ': 'i',\n    'ʞ': 'k',\n    'ꞁ': 'l',\n    'ɯ': 'm',\n    'ɰ': 'm',\n    'ᴔ': 'oe',\n    'ɹ': 'r',\n    'ɻ': 'r',\n    'ɺ': 'r',\n    'ⱹ': 'r',\n    'ʇ': 't',\n    'ʌ': 'v',\n    'ʍ': 'w',\n    'ʎ': 'y',\n    'ꜩ': 'tz',\n    'ú': 'u',\n    'ŭ': 'u',\n    'ǔ': 'u',\n    'û': 'u',\n    'ṷ': 'u',\n    'ü': 'u',\n    'ǘ': 'u',\n    'ǚ': 'u',\n    'ǜ': 'u',\n    'ǖ': 'u',\n    'ṳ': 'u',\n    'ụ': 'u',\n    'ű': 'u',\n    'ȕ': 'u',\n    'ù': 'u',\n    'ủ': 'u',\n    'ư': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ừ': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ȗ': 'u',\n    'ū': 'u',\n    'ṻ': 'u',\n    'ų': 'u',\n    'ᶙ': 'u',\n    'ů': 'u',\n    'ũ': 'u',\n    'ṹ': 'u',\n    'ṵ': 'u',\n    'ᵫ': 'ue',\n    'ꝸ': 'um',\n    'ⱴ': 'v',\n    'ꝟ': 'v',\n    'ṿ': 'v',\n    'ʋ': 'v',\n    'ᶌ': 'v',\n    'ⱱ': 'v',\n    'ṽ': 'v',\n    'ꝡ': 'vy',\n    'ẃ': 'w',\n    'ŵ': 'w',\n    'ẅ': 'w',\n    'ẇ': 'w',\n    'ẉ': 'w',\n    'ẁ': 'w',\n    'ⱳ': 'w',\n    'ẘ': 'w',\n    'ẍ': 'x',\n    'ẋ': 'x',\n    'ᶍ': 'x',\n    'ý': 'y',\n    'ŷ': 'y',\n    'ÿ': 'y',\n    'ẏ': 'y',\n    'ỵ': 'y',\n    'ỳ': 'y',\n    'ƴ': 'y',\n    'ỷ': 'y',\n    'ỿ': 'y',\n    'ȳ': 'y',\n    'ẙ': 'y',\n    'ɏ': 'y',\n    'ỹ': 'y',\n    'ź': 'z',\n    'ž': 'z',\n    'ẑ': 'z',\n    'ʑ': 'z',\n    'ⱬ': 'z',\n    'ż': 'z',\n    'ẓ': 'z',\n    'ȥ': 'z',\n    'ẕ': 'z',\n    'ᵶ': 'z',\n    'ᶎ': 'z',\n    'ʐ': 'z',\n    'ƶ': 'z',\n    'ɀ': 'z',\n    'ﬀ': 'ff',\n    'ﬃ': 'ffi',\n    'ﬄ': 'ffl',\n    'ﬁ': 'fi',\n    'ﬂ': 'fl',\n    'ĳ': 'ij',\n    'œ': 'oe',\n    'ﬆ': 'st',\n    'ₐ': 'a',\n    'ₑ': 'e',\n    'ᵢ': 'i',\n    'ⱼ': 'j',\n    'ₒ': 'o',\n    'ᵣ': 'r',\n    'ᵤ': 'u',\n    'ᵥ': 'v',\n    'ₓ': 'x'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TypeaheadOptions {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        Object.assign(this, options);\n    }\n}\nif (false) {\n    /** @type {?} */\n    TypeaheadOptions.prototype.placement;\n    /** @type {?} */\n    TypeaheadOptions.prototype.animation;\n    /** @type {?} */\n    TypeaheadOptions.prototype.typeaheadRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TypeaheadMatch {\n    // tslint:disable-next-line:no-any\n    /**\n     * @param {?} item\n     * @param {?=} value\n     * @param {?=} header\n     */\n    constructor(item, value = item, header = false) {\n        this.item = item;\n        this.value = value;\n        this.header = header;\n    }\n    /**\n     * @return {?}\n     */\n    isHeader() {\n        return this.header;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return this.value;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TypeaheadMatch.prototype.value;\n    /** @type {?} */\n    TypeaheadMatch.prototype.item;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TypeaheadMatch.prototype.header;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TypeaheadOrder {\n}\nif (false) {\n    /**\n     * field for sorting\n     * @type {?}\n     */\n    TypeaheadOrder.prototype.field;\n    /**\n     * ordering direction, could be 'asc' or 'desc'\n     * @type {?}\n     */\n    TypeaheadOrder.prototype.direction;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} str\n * @return {?}\n */\nfunction latinize(str) {\n    if (!str) {\n        return '';\n    }\n    return str.replace(/[^A-Za-z0-9\\[\\] ]/g, (/**\n     * @param {?} a\n     * @return {?}\n     */\n    function (a) {\n        return latinMap[a] || a;\n    }));\n}\n/**\n * @param {?} queryToEscape\n * @return {?}\n */\nfunction escapeRegexp(queryToEscape) {\n    // Regex: capture the whole query string and replace it with the string\n    // that will be used to match the results, for example if the capture is\n    // 'a' the result will be \\a\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n/* tslint:disable */\n/**\n * @param {?} str\n * @param {?=} wordRegexDelimiters\n * @param {?=} phraseRegexDelimiters\n * @param {?=} delimitersForMultipleSearch\n * @return {?}\n */\nfunction tokenize(str, wordRegexDelimiters = ' ', phraseRegexDelimiters = '', delimitersForMultipleSearch) {\n    /** @type {?} */\n    let result = [];\n    if (!delimitersForMultipleSearch) {\n        result = tokenizeWordsAndPhrases(str, wordRegexDelimiters, phraseRegexDelimiters);\n    }\n    else {\n        /** @type {?} */\n        const multipleSearchRegexStr = `([${delimitersForMultipleSearch}]+)`;\n        /** @type {?} */\n        const delimitedTokens = str.split(new RegExp(multipleSearchRegexStr, 'g'));\n        /** @type {?} */\n        const lastToken = delimitedTokens[delimitedTokens.length - 1];\n        if (lastToken > '') {\n            if (wordRegexDelimiters && phraseRegexDelimiters) {\n                result = tokenizeWordsAndPhrases(lastToken, wordRegexDelimiters, phraseRegexDelimiters);\n            }\n            else {\n                result.push(lastToken);\n            }\n        }\n    }\n    return result;\n}\n/**\n * @param {?} str\n * @param {?} wordRegexDelimiters\n * @param {?} phraseRegexDelimiters\n * @return {?}\n */\nfunction tokenizeWordsAndPhrases(str, wordRegexDelimiters, phraseRegexDelimiters) {\n    /** @type {?} */\n    const result = [];\n    /* tslint:enable */\n    /** @type {?} */\n    const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n        `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n    /** @type {?} */\n    const preTokenized = str.split(new RegExp(regexStr, 'g'));\n    /** @type {?} */\n    const preTokenizedLength = preTokenized.length;\n    /** @type {?} */\n    let token;\n    /** @type {?} */\n    const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n    for (let i = 0; i < preTokenizedLength; i += 1) {\n        token = preTokenized[i];\n        if (token && token.length && token !== wordRegexDelimiters) {\n            result.push(token.replace(replacePhraseDelimiters, ''));\n        }\n    }\n    return result;\n}\n// tslint:disable-next-line:no-any\n/**\n * @param {?} object\n * @param {?} option\n * @return {?}\n */\nfunction getValueFromObject(object, option) {\n    if (!option || typeof object !== 'object') {\n        return object.toString();\n    }\n    if (option.endsWith('()')) {\n        /** @type {?} */\n        const functionName = option.slice(0, option.length - 2);\n        return object[functionName]().toString();\n    }\n    /** @type {?} */\n    const properties = option\n        .replace(/\\[(\\w+)\\]/g, '.$1')\n        .replace(/^\\./, '');\n    /** @type {?} */\n    const propertiesArray = properties.split('.');\n    for (const property of propertiesArray) {\n        if (property in object) {\n            // tslint:disable-next-line\n            object = object[property];\n        }\n    }\n    if (!object) {\n        return '';\n    }\n    return object.toString();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TYPEAHEAD_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\n/** @type {?} */\nconst typeaheadAnimation = trigger('typeaheadAnimation', [\n    state('animated-down', style({ height: '*', overflow: 'hidden' })),\n    transition('* => animated-down', [\n        style({ height: 0, overflow: 'hidden' }),\n        animate(TYPEAHEAD_ANIMATION_TIMING)\n    ]),\n    state('animated-up', style({ height: '*', overflow: 'hidden' })),\n    transition('* => animated-up', [\n        style({ height: '*', overflow: 'hidden' }),\n        animate(TYPEAHEAD_ANIMATION_TIMING)\n    ]),\n    transition('* => unanimated', animate('0s'))\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextWindowId = 0;\nclass TypeaheadContainerComponent {\n    /**\n     * @param {?} positionService\n     * @param {?} renderer\n     * @param {?} element\n     * @param {?} changeDetectorRef\n     */\n    constructor(positionService, renderer, element, changeDetectorRef) {\n        this.positionService = positionService;\n        this.renderer = renderer;\n        this.element = element;\n        this.changeDetectorRef = changeDetectorRef;\n        // tslint:disable-next-line: no-output-rename\n        this.activeChangeEvent = new EventEmitter();\n        this.isFocused = false;\n        this.height = 0;\n        this.popupId = `ngb-typeahead-${nextWindowId++}`;\n        this._matches = [];\n        this.isScrolledIntoView = (/**\n         * @param {?} elem\n         * @return {?}\n         */\n        function (elem) {\n            /** @type {?} */\n            const containerViewTop = this.ulElement.nativeElement.scrollTop;\n            /** @type {?} */\n            const containerViewBottom = containerViewTop + Number(this.ulElement.nativeElement.offsetHeight);\n            /** @type {?} */\n            const elemTop = elem.offsetTop;\n            /** @type {?} */\n            const elemBottom = elemTop + elem.offsetHeight;\n            return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n        });\n        this.renderer.setAttribute(this.element.nativeElement, 'id', this.popupId);\n        this.positionServiceSubscription = this.positionService.event$.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.isAnimated) {\n                this.animationState = this.isTopPosition ? 'animated-up' : 'animated-down';\n                this.changeDetectorRef.detectChanges();\n                return;\n            }\n            this.animationState = 'unanimated';\n            this.changeDetectorRef.detectChanges();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get isBs4() {\n        return !isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    get typeaheadTemplateMethods() {\n        /* tslint:disable:no-this-assignment */\n        /** @type {?} */\n        const _that = this;\n        return {\n            selectMatch: this.selectMatch.bind(_that),\n            selectActive: this.selectActive.bind(_that),\n            isActive: this.isActive.bind(_that)\n        };\n    }\n    /**\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @param {?} active\n     * @return {?}\n     */\n    set active(active) {\n        this._active = active;\n        this.activeChanged();\n    }\n    /**\n     * @return {?}\n     */\n    get matches() {\n        return this._matches;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matches(value) {\n        this.positionService.setOptions({\n            modifiers: { flip: { enabled: this.adaptivePosition } },\n            allowedPositions: ['top', 'bottom']\n        });\n        this._matches = value;\n        this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n        if (this.typeaheadScrollable) {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.setScrollableMode();\n            }));\n        }\n        if (this.typeaheadIsFirstItemActive && this._matches.length > 0) {\n            this.active = this._matches[0];\n            if (this._active.isHeader()) {\n                this.nextActiveMatch();\n            }\n        }\n        if (this._active && !this.typeaheadIsFirstItemActive) {\n            /** @type {?} */\n            const concurrency = this._matches.find((/**\n             * @param {?} match\n             * @return {?}\n             */\n            match => match.value === this._active.value));\n            if (concurrency) {\n                this.selectActive(concurrency);\n                return;\n            }\n            this.active = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isTopPosition() {\n        return this.element.nativeElement.classList.contains('top');\n    }\n    // tslint:disable-next-line:no-any\n    /**\n     * @return {?}\n     */\n    get optionsListTemplate() {\n        return this.parent ? this.parent.optionsListTemplate : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get isAnimated() {\n        return this.parent ? this.parent.isAnimated : false;\n    }\n    /**\n     * @return {?}\n     */\n    get adaptivePosition() {\n        return this.parent ? this.parent.adaptivePosition : false;\n    }\n    /**\n     * @return {?}\n     */\n    get typeaheadScrollable() {\n        return this.parent ? this.parent.typeaheadScrollable : false;\n    }\n    /**\n     * @return {?}\n     */\n    get typeaheadOptionsInScrollableView() {\n        return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n    }\n    /**\n     * @return {?}\n     */\n    get typeaheadIsFirstItemActive() {\n        return this.parent ? this.parent.typeaheadIsFirstItemActive : true;\n    }\n    // tslint:disable-next-line:no-any\n    /**\n     * @return {?}\n     */\n    get itemTemplate() {\n        return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n    }\n    /**\n     * @param {?=} isActiveItemChanged\n     * @return {?}\n     */\n    selectActiveMatch(isActiveItemChanged) {\n        if (this._active && this.parent.typeaheadSelectFirstItem) {\n            this.selectMatch(this._active);\n        }\n        if (!this.parent.typeaheadSelectFirstItem && isActiveItemChanged) {\n            this.selectMatch(this._active);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    activeChanged() {\n        /** @type {?} */\n        const index = this.matches.indexOf(this._active);\n        this.activeChangeEvent.emit(`${this.popupId}-${index}`);\n    }\n    /**\n     * @return {?}\n     */\n    prevActiveMatch() {\n        /** @type {?} */\n        const index = this.matches.indexOf(this._active);\n        this.active = this.matches[index - 1 < 0 ? this.matches.length - 1 : index - 1];\n        if (this._active.isHeader()) {\n            this.prevActiveMatch();\n        }\n        if (this.typeaheadScrollable) {\n            this.scrollPrevious(index);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    nextActiveMatch() {\n        /** @type {?} */\n        const index = this.matches.indexOf(this._active);\n        this.active = this.matches[index + 1 > this.matches.length - 1 ? 0 : index + 1];\n        if (this._active.isHeader()) {\n            this.nextActiveMatch();\n        }\n        if (this.typeaheadScrollable) {\n            this.scrollNext(index);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    selectActive(value) {\n        this.isFocused = true;\n        this.active = value;\n    }\n    /**\n     * @param {?} match\n     * @param {?} query\n     * @return {?}\n     */\n    highlight(match, query) {\n        /** @type {?} */\n        let itemStr = match.value;\n        /** @type {?} */\n        let itemStrHelper = (this.parent && this.parent.typeaheadLatinize\n            ? latinize(itemStr)\n            : itemStr).toLowerCase();\n        /** @type {?} */\n        let startIdx;\n        /** @type {?} */\n        let tokenLen;\n        // Replaces the capture string with the same string inside of a \"strong\" tag\n        if (typeof query === 'object') {\n            /** @type {?} */\n            const queryLen = query.length;\n            for (let i = 0; i < queryLen; i += 1) {\n                // query[i] is already latinized and lower case\n                startIdx = itemStrHelper.indexOf(query[i]);\n                tokenLen = query[i].length;\n                if (startIdx >= 0 && tokenLen > 0) {\n                    itemStr =\n                        `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n                            `${itemStr.substring(startIdx + tokenLen)}`;\n                    itemStrHelper =\n                        `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n                            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n                }\n            }\n        }\n        else if (query) {\n            // query is already latinized and lower case\n            startIdx = itemStrHelper.indexOf(query);\n            tokenLen = query.length;\n            if (startIdx >= 0 && tokenLen > 0) {\n                itemStr =\n                    `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n                        `${itemStr.substring(startIdx + tokenLen)}`;\n            }\n        }\n        return itemStr;\n    }\n    /**\n     * @return {?}\n     */\n    focusLost() {\n        this.isFocused = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isActive(value) {\n        return this.active === value;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} e\n     * @return {?}\n     */\n    selectMatch(value, e = void 0) {\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        this.parent.changeModel(value);\n        setTimeout((/**\n         * @return {?}\n         */\n        () => this.parent.typeaheadOnSelect.emit(value)), 0);\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    setScrollableMode() {\n        if (!this.ulElement) {\n            this.ulElement = this.element;\n        }\n        if (this.liElements.first) {\n            /** @type {?} */\n            const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n            /** @type {?} */\n            const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n            /** @type {?} */\n            const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '')\n                .replace('px', ''));\n            /** @type {?} */\n            const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0')\n                .replace('px', ''));\n            /** @type {?} */\n            const optionHeight = parseFloat((liStyles.height ? liStyles.height : '0')\n                .replace('px', ''));\n            /** @type {?} */\n            const height = this.typeaheadOptionsInScrollableView * optionHeight;\n            this.guiHeight = `${height + ulPaddingTop + ulPaddingBottom}px`;\n        }\n        this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    scrollPrevious(index) {\n        if (index === 0) {\n            this.scrollToBottom();\n            return;\n        }\n        if (this.liElements) {\n            /** @type {?} */\n            const liElement = this.liElements.toArray()[index - 1];\n            if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n                this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n            }\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    scrollNext(index) {\n        if (index + 1 > this.matches.length - 1) {\n            this.scrollToTop();\n            return;\n        }\n        if (this.liElements) {\n            /** @type {?} */\n            const liElement = this.liElements.toArray()[index + 1];\n            if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n                this.ulElement.nativeElement.scrollTop =\n                    liElement.nativeElement.offsetTop -\n                        Number(this.ulElement.nativeElement.offsetHeight) +\n                        Number(liElement.nativeElement.offsetHeight);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.positionServiceSubscription.unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    scrollToBottom() {\n        this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    scrollToTop() {\n        this.ulElement.nativeElement.scrollTop = 0;\n    }\n}\nTypeaheadContainerComponent.ɵfac = function TypeaheadContainerComponent_Factory(t) { return new (t || TypeaheadContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.PositioningService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nTypeaheadContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TypeaheadContainerComponent, selectors: [[\"typeahead-container\"]], viewQuery: function TypeaheadContainerComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ulElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.liElements = _t);\n    } }, hostAttrs: [1, \"dropdown\", \"open\", \"bottom\", 2, \"position\", \"absolute\", \"display\", \"block\"], hostVars: 9, hostBindings: function TypeaheadContainerComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mouseleave\", function TypeaheadContainerComponent_mouseleave_HostBindingHandler() { return ctx.focusLost(); })(\"blur\", function TypeaheadContainerComponent_blur_HostBindingHandler() { return ctx.focusLost(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.isBs4 ? \"listbox\" : null);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.isBs4 && ctx.needScrollbar ? ctx.guiHeight : \"auto\")(\"visibility\", \"inherit\");\n        ɵngcc0.ɵɵclassProp(\"dropdown-menu\", ctx.isBs4)(\"dropup\", ctx.dropup);\n    } }, outputs: { activeChangeEvent: \"activeChange\" }, decls: 7, vars: 7, consts: [[3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"bsItemTemplate\", \"\"], [\"bs3Template\", \"\"], [\"bs4Template\", \"\"], [3, \"innerHtml\"], [\"role\", \"listbox\", 1, \"dropdown-menu\"], [\"ulElement\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"dropdown-header\", 4, \"ngIf\"], [\"role\", \"option\", 3, \"id\", \"active\", \"mouseenter\", 4, \"ngIf\"], [1, \"dropdown-header\"], [\"liElements\", \"\"], [\"role\", \"option\", 3, \"id\", \"mouseenter\"], [\"href\", \"#\", \"tabindex\", \"-1\", 3, \"click\"], [3, \"ngIf\"], [\"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"click\", \"mouseenter\"]], template: function TypeaheadContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TypeaheadContainerComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵtemplate(1, TypeaheadContainerComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(3, TypeaheadContainerComponent_ng_template_3_Template, 3, 5, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(5, TypeaheadContainerComponent_ng_template_5_Template, 1, 1, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n        const _r3 = ɵngcc0.ɵɵreference(4);\n        const _r5 = ɵngcc0.ɵɵreference(6);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.optionsListTemplate || (ctx.isBs4 ? _r5 : _r3))(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(2, _c3, ctx.matches, ctx.itemTemplate || _r1, ctx.query, ctx.typeaheadTemplateMethods));\n    } }, directives: [ɵngcc2.NgTemplateOutlet, ɵngcc2.NgForOf, ɵngcc2.NgIf], styles: [\".dropdown[_nghost-%COMP%] {\\n      z-index: 1000;\\n    }\\n\\n    .dropdown-menu[_nghost-%COMP%], .dropdown-menu[_ngcontent-%COMP%] {\\n      overflow-y: auto;\\n      height: 100px;\\n    }\"], data: { animation: [typeaheadAnimation] } });\n/** @nocollapse */\nTypeaheadContainerComponent.ctorParameters = () => [\n    { type: PositioningService },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nTypeaheadContainerComponent.propDecorators = {\n    activeChangeEvent: [{ type: Output, args: ['activeChange',] }],\n    ulElement: [{ type: ViewChild, args: ['ulElement', { static: false },] }],\n    liElements: [{ type: ViewChildren, args: ['liElements',] }],\n    focusLost: [{ type: HostListener, args: ['mouseleave',] }, { type: HostListener, args: ['blur',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TypeaheadContainerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'typeahead-container',\n                template: \"<!-- inject options list template -->\\n<ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\"\\n             [ngTemplateOutletContext]=\\\"{\\n               matches: matches,\\n               itemTemplate: itemTemplate || bsItemTemplate,\\n               query: query,\\n               $implicit: typeaheadTemplateMethods\\n             }\\\">\\n</ng-template>\\n\\n<!-- default options item template -->\\n<ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\">\\n  <span [innerHtml]=\\\"highlight(match, query)\\\"></span>\\n</ng-template>\\n\\n<!-- Bootstrap 3 options list template -->\\n<ng-template #bs3Template>\\n  <ul class=\\\"dropdown-menu\\\"\\n      #ulElement\\n      role=\\\"listbox\\\"\\n      [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\"\\n      [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\">\\n    <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\">\\n      <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li>\\n      <li #liElements\\n          *ngIf=\\\"!match.isHeader()\\\"\\n          [id]=\\\"popupId + '-' + i\\\"\\n          role=\\\"option\\\"\\n          [@typeaheadAnimation]=\\\"animationState\\\"\\n          [class.active]=\\\"isActive(match)\\\"\\n          (mouseenter)=\\\"selectActive(match)\\\">\\n\\n        <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\"\\n                       [ngTemplateOutletContext]=\\\"{item: match.item, index: i, match: match, query: query}\\\">\\n          </ng-template>\\n        </a>\\n      </li>\\n    </ng-template>\\n  </ul>\\n</ng-template>\\n\\n<!-- Bootstrap 4 options list template -->\\n<ng-template #bs4Template>\\n  <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\">\\n    <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6>\\n    <ng-template [ngIf]=\\\"!match.isHeader()\\\">\\n      <button #liElements\\n              [id]=\\\"popupId + '-' + i\\\"\\n              role=\\\"option\\\"\\n              [@typeaheadAnimation]=\\\"animationState\\\"\\n              class=\\\"dropdown-item\\\"\\n              (click)=\\\"selectMatch(match, $event)\\\"\\n              (mouseenter)=\\\"selectActive(match)\\\"\\n              [class.active]=\\\"isActive(match)\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\"\\n                     [ngTemplateOutletContext]=\\\"{item: match.item, index: i, match: match, query: query}\\\">\\n        </ng-template>\\n      </button>\\n    </ng-template>\\n  </ng-template>\\n</ng-template>\\n\",\n                host: {\n                    class: 'dropdown open bottom',\n                    '[class.dropdown-menu]': 'isBs4',\n                    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n                    '[style.visibility]': `'inherit'`,\n                    '[class.dropup]': 'dropup',\n                    style: 'position: absolute;display: block;',\n                    '[attr.role]': `isBs4 ? 'listbox' : null `\n                },\n                animations: [typeaheadAnimation],\n                styles: [`\n    :host.dropdown {\n      z-index: 1000;\n    }\n\n    :host.dropdown-menu, .dropdown-menu {\n      overflow-y: auto;\n      height: 100px;\n    }\n  `]\n            }]\n    }], function () { return [{ type: ɵngcc1.PositioningService }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { activeChangeEvent: [{\n            type: Output,\n            args: ['activeChange']\n        }], \n    /**\n     * @return {?}\n     */\n    focusLost: [{\n            type: HostListener,\n            args: ['mouseleave']\n        }, {\n            type: HostListener,\n            args: ['blur']\n        }], ulElement: [{\n            type: ViewChild,\n            args: ['ulElement', { static: false }]\n        }], liElements: [{\n            type: ViewChildren,\n            args: ['liElements']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.activeChangeEvent;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.parent;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.query;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.isFocused;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.top;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.left;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.display;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.placement;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.dropup;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.guiHeight;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.needScrollbar;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.animationState;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.positionServiceSubscription;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.height;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.popupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TypeaheadContainerComponent.prototype._active;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TypeaheadContainerComponent.prototype._matches;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadContainerComponent.prototype.ulElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadContainerComponent.prototype.liElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadContainerComponent.prototype.isScrolledIntoView;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadContainerComponent.prototype.positionService;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadContainerComponent.prototype.renderer;\n    /** @type {?} */\n    TypeaheadContainerComponent.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadContainerComponent.prototype.changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default values provider for typeahead\n */\nclass TypeaheadConfig {\n    constructor() {\n        /**\n         * sets use adaptive position\n         */\n        this.adaptivePosition = false;\n        /**\n         * turn on/off animation\n         */\n        this.isAnimated = false;\n        /**\n         * used to hide results on blur\n         */\n        this.hideResultsOnBlur = true;\n        /**\n         * if true, typeahead will cancel async request on blur\n         */\n        this.cancelRequestOnFocusLost = false;\n        /**\n         * used to choose the first item in typeahead container\n         */\n        this.selectFirstItem = true;\n        /**\n         * used to active/inactive the first item in typeahead container\n         */\n        this.isFirstItemActive = true;\n        /**\n         * used to choose set minimal no of characters that needs to\n         * be entered before typeahead kicks-in\n         */\n        this.minLength = 1;\n    }\n}\nTypeaheadConfig.ɵfac = function TypeaheadConfig_Factory(t) { return new (t || TypeaheadConfig)(); };\n/** @nocollapse */ TypeaheadConfig.ɵprov = ɵɵdefineInjectable({ factory: function TypeaheadConfig_Factory() { return new TypeaheadConfig(); }, token: TypeaheadConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TypeaheadConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * sets use adaptive position\n     * @type {?}\n     */\n    TypeaheadConfig.prototype.adaptivePosition;\n    /**\n     * turn on/off animation\n     * @type {?}\n     */\n    TypeaheadConfig.prototype.isAnimated;\n    /**\n     * used to hide results on blur\n     * @type {?}\n     */\n    TypeaheadConfig.prototype.hideResultsOnBlur;\n    /**\n     * if true, typeahead will cancel async request on blur\n     * @type {?}\n     */\n    TypeaheadConfig.prototype.cancelRequestOnFocusLost;\n    /**\n     * used to choose the first item in typeahead container\n     * @type {?}\n     */\n    TypeaheadConfig.prototype.selectFirstItem;\n    /**\n     * used to active/inactive the first item in typeahead container\n     * @type {?}\n     */\n    TypeaheadConfig.prototype.isFirstItemActive;\n    /**\n     * used to choose set minimal no of characters that needs to\n     * be entered before typeahead kicks-in\n     * @type {?}\n     */\n    TypeaheadConfig.prototype.minLength;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TypeaheadDirective {\n    /**\n     * @param {?} cis\n     * @param {?} config\n     * @param {?} changeDetection\n     * @param {?} element\n     * @param {?} ngControl\n     * @param {?} renderer\n     * @param {?} viewContainerRef\n     */\n    constructor(cis, config, changeDetection, element, ngControl, renderer, viewContainerRef) {\n        this.changeDetection = changeDetection;\n        this.element = element;\n        this.ngControl = ngControl;\n        this.renderer = renderer;\n        /**\n         * minimal no of characters that needs to be entered before\n         * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n         * list of options (limited as normal by typeaheadOptionsLimit)\n         */\n        this.typeaheadMinLength = void 0;\n        /**\n         * turn on/off animation\n         */\n        this.isAnimated = false;\n        /**\n         * should be used only in case of typeahead attribute is Observable of array.\n         * If true - loading of options will be async, otherwise - sync.\n         * true make sense if options array is large.\n         */\n        this.typeaheadAsync = void 0;\n        /**\n         * match latin symbols.\n         * If true the word súper would match super and vice versa.\n         */\n        this.typeaheadLatinize = true;\n        /**\n         * Can be use to search words by inserting a single white space between each characters\n         *  for example 'C a l i f o r n i a' will match 'California'.\n         */\n        this.typeaheadSingleWords = true;\n        /**\n         * should be used only in case typeaheadSingleWords attribute is true.\n         * Sets the word delimiter to break words. Defaults to space.\n         */\n        this.typeaheadWordDelimiters = ' ';\n        /**\n         * Can be used to conduct a search of multiple items and have suggestion not for the\n         * whole value of the input but for the value that comes after a delimiter provided via\n         * typeaheadMultipleSearchDelimiters attribute. This option can only be used together with\n         * typeaheadSingleWords option if typeaheadWordDelimiters and typeaheadPhraseDelimiters\n         * are different from typeaheadMultipleSearchDelimiters to avoid conflict in determining\n         * when to delimit multiple searches and when a single word.\n         */\n        this.typeaheadMultipleSearch = void 0;\n        /**\n         * should be used only in case typeaheadMultipleSearch attribute is true.\n         * Sets the multiple search delimiter to know when to start a new search. Defaults to comma.\n         * If space needs to be used, then explicitly set typeaheadWordDelimiters to something else than space\n         * because space is used by default OR set typeaheadSingleWords attribute to false if you don't need\n         * to use it together with multiple search.\n         */\n        this.typeaheadMultipleSearchDelimiters = ',';\n        /**\n         * should be used only in case typeaheadSingleWords attribute is true.\n         * Sets the word delimiter to match exact phrase.\n         * Defaults to simple and double quotes.\n         */\n        this.typeaheadPhraseDelimiters = '\\'\"';\n        /**\n         * specifies if typeahead is scrollable\n         */\n        this.typeaheadScrollable = false;\n        /**\n         * specifies number of options to show in scroll view\n         */\n        this.typeaheadOptionsInScrollableView = 5;\n        /**\n         * fired when an options list was opened and the user clicked Tab\n         * If a value equal true, it will be chosen first or active item in the list\n         * If value equal false, it will be chosen an active item in the list or nothing\n         */\n        this.typeaheadSelectFirstItem = true;\n        /**\n         * makes active first item in a list\n         */\n        this.typeaheadIsFirstItemActive = true;\n        /**\n         * fired when 'busy' state of this component was changed,\n         * fired on async mode only, returns boolean\n         */\n        this.typeaheadLoading = new EventEmitter();\n        /**\n         * fired on every key event and returns true\n         * in case of matches are not detected\n         */\n        this.typeaheadNoResults = new EventEmitter();\n        /**\n         * fired when option was selected, return object with data of this option\n         */\n        this.typeaheadOnSelect = new EventEmitter();\n        /**\n         * fired when blur event occurs. returns the active item\n         */\n        this.typeaheadOnBlur = new EventEmitter();\n        /**\n         * This attribute indicates that the dropdown should be opened upwards\n         */\n        this.dropup = false;\n        this.isOpen = false;\n        this.list = 'list';\n        this.isActiveItemChanged = false;\n        this.isFocused = false;\n        this.cancelRequestOnFocusLost = false;\n        // tslint:disable-next-line:no-any\n        this.keyUpEventEmitter = new EventEmitter();\n        this._matches = [];\n        this.placement = 'bottom left';\n        this._subscriptions = [];\n        this._typeahead = cis.createLoader(element, viewContainerRef, renderer)\n            .provide({ provide: TypeaheadConfig, useValue: config });\n        Object.assign(this, {\n            typeaheadHideResultsOnBlur: config.hideResultsOnBlur,\n            cancelRequestOnFocusLost: config.cancelRequestOnFocusLost,\n            typeaheadSelectFirstItem: config.selectFirstItem,\n            typeaheadIsFirstItemActive: config.isFirstItemActive,\n            typeaheadMinLength: config.minLength,\n            adaptivePosition: config.adaptivePosition,\n            isAnimated: config.isAnimated\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n        this.typeaheadMinLength =\n            this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n        this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n        // async should be false in case of array\n        if (this.typeaheadAsync === undefined && !(isObservable(this.typeahead))) {\n            this.typeaheadAsync = false;\n        }\n        if (isObservable(this.typeahead)) {\n            this.typeaheadAsync = true;\n        }\n        if (this.typeaheadAsync) {\n            this.asyncActions();\n        }\n        else {\n            this.syncActions();\n        }\n        this.checkDelimitersConflict();\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    // tslint:disable-next-line:no-any\n    onInput(e) {\n        // For `<input>`s, use the `value` property. For others that don't have a\n        // `value` (such as `<span contenteditable=\"true\">`), use either\n        // `textContent` or `innerText` (depending on which one is supported, i.e.\n        // Firefox or IE).\n        /** @type {?} */\n        const value = e.target.value !== undefined\n            ? e.target.value\n            : e.target.textContent !== undefined\n                ? e.target.textContent\n                : e.target.innerText;\n        if (value != null && value.trim().length >= this.typeaheadMinLength) {\n            this.typeaheadLoading.emit(true);\n            this.keyUpEventEmitter.emit(e.target.value);\n        }\n        else {\n            this.typeaheadLoading.emit(false);\n            this.typeaheadNoResults.emit(false);\n            this.hide();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChange(event) {\n        if (this._container) {\n            // esc\n            /* tslint:disable-next-line: deprecation */\n            if (event.keyCode === 27 || event.key === 'Escape') {\n                this.hide();\n                return;\n            }\n            // up\n            /* tslint:disable-next-line: deprecation */\n            if (event.keyCode === 38 || event.key === 'ArrowUp') {\n                this.isActiveItemChanged = true;\n                this._container.prevActiveMatch();\n                return;\n            }\n            // down\n            /* tslint:disable-next-line: deprecation */\n            if (event.keyCode === 40 || event.key === 'ArrowDown') {\n                this.isActiveItemChanged = true;\n                this._container.nextActiveMatch();\n                return;\n            }\n            // enter\n            /* tslint:disable-next-line: deprecation */\n            if (event.keyCode === 13 || event.key === 'Enter') {\n                this._container.selectActiveMatch();\n                return;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onFocus() {\n        this.isFocused = true;\n        // add setTimeout to fix issue #5251\n        // to get and emit updated value if it's changed on focus\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this.typeaheadMinLength === 0) {\n                this.typeaheadLoading.emit(true);\n                this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n            }\n        }), 0);\n    }\n    /**\n     * @return {?}\n     */\n    onBlur() {\n        this.isFocused = false;\n        if (this._container && !this._container.isFocused) {\n            this.typeaheadOnBlur.emit(this._container.active);\n        }\n        if (!this.container && this._matches.length === 0) {\n            this.typeaheadOnBlur.emit(new TypeaheadMatch(this.element.nativeElement.value, this.element.nativeElement.value, false));\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeydown(event) {\n        // no container - no problems\n        if (!this._container) {\n            return;\n        }\n        /* tslint:disable-next-line: deprecation */\n        if (event.keyCode === 9 || event.key === 'Tab') {\n            this.onBlur();\n        }\n        /* tslint:disable-next-line: deprecation */\n        if (event.keyCode === 9 || event.key === 'Tab' || event.keyCode === 13 || event.key === 'Enter') {\n            event.preventDefault();\n            if (this.typeaheadSelectFirstItem) {\n                this._container.selectActiveMatch();\n                return;\n            }\n            if (!this.typeaheadSelectFirstItem) {\n                this._container.selectActiveMatch(this.isActiveItemChanged);\n                this.isActiveItemChanged = false;\n                this.hide();\n            }\n        }\n    }\n    /**\n     * @param {?} match\n     * @return {?}\n     */\n    changeModel(match) {\n        /** @type {?} */\n        let valueStr;\n        if (this.typeaheadMultipleSearch) {\n            /** @type {?} */\n            const tokens = this._allEnteredValue.split(new RegExp(`([${this.typeaheadMultipleSearchDelimiters}]+)`));\n            this._allEnteredValue = tokens.slice(0, tokens.length - 1).concat(match.value).join('');\n            valueStr = this._allEnteredValue;\n        }\n        else {\n            valueStr = match.value;\n        }\n        this.ngControl.viewToModelUpdate(valueStr);\n        (this.ngControl.control).setValue(valueStr);\n        this.changeDetection.markForCheck();\n        this.hide();\n    }\n    /**\n     * @return {?}\n     */\n    get matches() {\n        return this._matches;\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        this._typeahead\n            .attach(TypeaheadContainerComponent)\n            .to(this.container)\n            .position({ attachment: `${this.dropup ? 'top' : 'bottom'} left` })\n            .show({\n            typeaheadRef: this,\n            placement: this.placement,\n            animation: false,\n            dropup: this.dropup\n        });\n        this._outsideClickListener = this.renderer.listen('document', 'click', (/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => {\n            if (this.typeaheadMinLength === 0 && this.element.nativeElement.contains(e.target)) {\n                return undefined;\n            }\n            if (!this.typeaheadHideResultsOnBlur || this.element.nativeElement.contains(e.target)) {\n                return undefined;\n            }\n            this.onOutsideClick();\n        }));\n        this._container = this._typeahead.instance;\n        this._container.parent = this;\n        // This improves the speed as it won't have to be done for each list item\n        /** @type {?} */\n        const normalizedQuery = (this.typeaheadLatinize\n            ? latinize(this.ngControl.control.value)\n            : this.ngControl.control.value)\n            .toString()\n            .toLowerCase();\n        this._container.query = this.tokenizeQuery(normalizedQuery);\n        this._container.matches = this._matches;\n        this.element.nativeElement.focus();\n        this._container.activeChangeEvent.subscribe((/**\n         * @param {?} activeId\n         * @return {?}\n         */\n        (activeId) => {\n            this.activeDescendant = activeId;\n            this.changeDetection.markForCheck();\n        }));\n        this.isOpen = true;\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        if (this._typeahead.isShown) {\n            this._typeahead.hide();\n            this._outsideClickListener();\n            this._container = null;\n            this.isOpen = false;\n            this.changeDetection.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onOutsideClick() {\n        if (this._container && !this._container.isFocused) {\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // clean up subscriptions\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n        this._typeahead.dispose();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    asyncActions() {\n        this._subscriptions.push(this.keyUpEventEmitter\n            .pipe(debounceTime(this.typeaheadWaitMs), tap((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._allEnteredValue = value;\n        })), switchMap((/**\n         * @return {?}\n         */\n        () => this.typeahead)))\n            .subscribe((/**\n         * @param {?} matches\n         * @return {?}\n         */\n        (matches) => {\n            this.finalizeAsyncCall(matches);\n        })));\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    syncActions() {\n        this._subscriptions.push(this.keyUpEventEmitter\n            .pipe(debounceTime(this.typeaheadWaitMs), mergeMap((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            this._allEnteredValue = value;\n            /** @type {?} */\n            const normalizedQuery = this.normalizeQuery(value);\n            return from(this.typeahead)\n                .pipe(filter((/**\n             * @param {?} option\n             * @return {?}\n             */\n            (option) => {\n                return option && this.testMatch(this.normalizeOption(option), normalizedQuery);\n            })), toArray());\n        })))\n            .subscribe((/**\n         * @param {?} matches\n         * @return {?}\n         */\n        (matches) => {\n            this.finalizeAsyncCall(matches);\n        })));\n    }\n    /**\n     * @protected\n     * @param {?} option\n     * @return {?}\n     */\n    normalizeOption(option) {\n        /** @type {?} */\n        const optionValue = getValueFromObject(option, this.typeaheadOptionField);\n        /** @type {?} */\n        const normalizedOption = this.typeaheadLatinize\n            ? latinize(optionValue)\n            : optionValue;\n        return normalizedOption.toLowerCase();\n    }\n    /**\n     * @protected\n     * @param {?} currentQuery\n     * @return {?}\n     */\n    tokenizeQuery(currentQuery) {\n        /** @type {?} */\n        let query = currentQuery;\n        if (this.typeaheadMultipleSearch && this.typeaheadSingleWords) {\n            if (!this.haveCommonCharacters(`${this.typeaheadPhraseDelimiters}${this.typeaheadWordDelimiters}`, this.typeaheadMultipleSearchDelimiters)) {\n                // single words and multiple search delimiters are different, can be used together\n                query = tokenize((/** @type {?} */ (query)), this.typeaheadWordDelimiters, this.typeaheadPhraseDelimiters, this.typeaheadMultipleSearchDelimiters);\n            }\n        }\n        else if (this.typeaheadSingleWords) {\n            query = tokenize((/** @type {?} */ (query)), this.typeaheadWordDelimiters, this.typeaheadPhraseDelimiters);\n        }\n        else {\n            // multiple searches\n            query = tokenize((/** @type {?} */ (query)), null, null, this.typeaheadMultipleSearchDelimiters);\n        }\n        return query;\n    }\n    /**\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    normalizeQuery(value) {\n        // If singleWords, break model here to not be doing extra work on each iteration\n        /** @type {?} */\n        let normalizedQuery = (this.typeaheadLatinize\n            ? latinize(value)\n            : value)\n            .toString()\n            .toLowerCase();\n        normalizedQuery = this.tokenizeQuery(normalizedQuery);\n        return normalizedQuery;\n    }\n    /**\n     * @protected\n     * @param {?} match\n     * @param {?} test\n     * @return {?}\n     */\n    testMatch(match, test) {\n        /** @type {?} */\n        let spaceLength;\n        if (typeof test === 'object') {\n            spaceLength = test.length;\n            for (let i = 0; i < spaceLength; i += 1) {\n                if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return match.indexOf(test) >= 0;\n    }\n    /**\n     * @protected\n     * @param {?} matches\n     * @return {?}\n     */\n    finalizeAsyncCall(matches) {\n        this.prepareMatches(matches || []);\n        this.typeaheadLoading.emit(false);\n        this.typeaheadNoResults.emit(!this.hasMatches());\n        if (!this.hasMatches()) {\n            this.hide();\n            return;\n        }\n        if (!this.isFocused && this.cancelRequestOnFocusLost) {\n            return;\n        }\n        if (this._container) {\n            // fix: remove usage of ngControl internals\n            /** @type {?} */\n            const _controlValue = (this.typeaheadLatinize\n                ? latinize(this.ngControl.control.value)\n                : this.ngControl.control.value) || '';\n            // This improves the speed as it won't have to be done for each list item\n            /** @type {?} */\n            const normalizedQuery = _controlValue.toString().toLowerCase();\n            this._container.query = this.tokenizeQuery(normalizedQuery);\n            this._container.matches = this._matches;\n        }\n        else {\n            this.show();\n        }\n    }\n    /**\n     * @protected\n     * @param {?} options\n     * @return {?}\n     */\n    prepareMatches(options) {\n        /** @type {?} */\n        const limited = options.slice(0, this.typeaheadOptionsLimit);\n        /** @type {?} */\n        const sorted = !this.typeaheadOrderBy ? limited : this.orderMatches(limited);\n        if (this.typeaheadGroupField) {\n            /** @type {?} */\n            let matches = [];\n            // extract all group names\n            /** @type {?} */\n            const groups = sorted\n                .map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            (option) => getValueFromObject(option, this.typeaheadGroupField)))\n                .filter((/**\n             * @param {?} v\n             * @param {?} i\n             * @param {?} a\n             * @return {?}\n             */\n            (v, i, a) => a.indexOf(v) === i));\n            groups.forEach((/**\n             * @param {?} group\n             * @return {?}\n             */\n            (group) => {\n                // add group header to array of matches\n                matches.push(new TypeaheadMatch(group, group, true));\n                // add each item of group to array of matches\n                matches = matches.concat(sorted\n                    .filter((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                (option) => getValueFromObject(option, this.typeaheadGroupField) === group))\n                    .map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                (option) => new TypeaheadMatch(option, getValueFromObject(option, this.typeaheadOptionField)))));\n            }));\n            this._matches = matches;\n        }\n        else {\n            this._matches = sorted.map((\n            // tslint:disable-next-line:no-any\n            /**\n             * @param {?} option\n             * @return {?}\n             */\n            (option) => new TypeaheadMatch(option, getValueFromObject(option, this.typeaheadOptionField))));\n        }\n    }\n    /**\n     * @protected\n     * @param {?} options\n     * @return {?}\n     */\n    orderMatches(options) {\n        if (!options.length) {\n            return options;\n        }\n        if (this.typeaheadOrderBy !== null\n            && this.typeaheadOrderBy !== undefined\n            && typeof this.typeaheadOrderBy === 'object'\n            && Object.keys(this.typeaheadOrderBy).length === 0) {\n            // tslint:disable-next-line:no-console\n            console.error('Field and direction properties for typeaheadOrderBy have to be set according to documentation!');\n            return options;\n        }\n        const { field, direction } = this.typeaheadOrderBy;\n        if (!direction || !(direction === 'asc' || direction === 'desc')) {\n            // tslint:disable-next-line:no-console\n            console.error('typeaheadOrderBy direction has to equal \"asc\" or \"desc\". Please follow the documentation.');\n            return options;\n        }\n        if (typeof options[0] === 'string') {\n            return direction === 'asc' ? options.sort() : options.sort().reverse();\n        }\n        if (!field || typeof field !== 'string') {\n            // tslint:disable-next-line:no-console\n            console.error('typeaheadOrderBy field has to set according to the documentation.');\n            return options;\n        }\n        return options.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            /** @type {?} */\n            const stringA = getValueFromObject(a, field);\n            /** @type {?} */\n            const stringB = getValueFromObject(b, field);\n            if (stringA < stringB) {\n                return direction === 'asc' ? -1 : 1;\n            }\n            if (stringA > stringB) {\n                return direction === 'asc' ? 1 : -1;\n            }\n            return 0;\n        }));\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    hasMatches() {\n        return this._matches.length > 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    checkDelimitersConflict() {\n        if (this.typeaheadMultipleSearch && this.typeaheadSingleWords\n            && (this.haveCommonCharacters(`${this.typeaheadPhraseDelimiters}${this.typeaheadWordDelimiters}`, this.typeaheadMultipleSearchDelimiters))) {\n            throw new Error(`Delimiters used in typeaheadMultipleSearchDelimiters must be different\n          from delimiters used in typeaheadWordDelimiters (current value: ${this.typeaheadWordDelimiters}) and\n          typeaheadPhraseDelimiters (current value: ${this.typeaheadPhraseDelimiters}).\n          Please refer to the documentation`);\n        }\n    }\n    /**\n     * @protected\n     * @param {?} str1\n     * @param {?} str2\n     * @return {?}\n     */\n    haveCommonCharacters(str1, str2) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1.charAt(i).indexOf(str2) > -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nTypeaheadDirective.ɵfac = function TypeaheadDirective_Factory(t) { return new (t || TypeaheadDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(TypeaheadConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nTypeaheadDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TypeaheadDirective, selectors: [[\"\", \"typeahead\", \"\"]], hostVars: 4, hostBindings: function TypeaheadDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function TypeaheadDirective_input_HostBindingHandler($event) { return ctx.onInput($event); })(\"keyup\", function TypeaheadDirective_keyup_HostBindingHandler($event) { return ctx.onChange($event); })(\"click\", function TypeaheadDirective_click_HostBindingHandler() { return ctx.onFocus(); })(\"focus\", function TypeaheadDirective_focus_HostBindingHandler() { return ctx.onFocus(); })(\"blur\", function TypeaheadDirective_blur_HostBindingHandler() { return ctx.onBlur(); })(\"keydown\", function TypeaheadDirective_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isOpen ? ctx._container.popupId : null)(\"aria-expanded\", ctx.isOpen)(\"aria-autocomplete\", ctx.list);\n    } }, inputs: { isAnimated: \"isAnimated\", typeaheadLatinize: \"typeaheadLatinize\", typeaheadSingleWords: \"typeaheadSingleWords\", typeaheadWordDelimiters: \"typeaheadWordDelimiters\", typeaheadMultipleSearchDelimiters: \"typeaheadMultipleSearchDelimiters\", typeaheadPhraseDelimiters: \"typeaheadPhraseDelimiters\", typeaheadScrollable: \"typeaheadScrollable\", typeaheadOptionsInScrollableView: \"typeaheadOptionsInScrollableView\", typeaheadSelectFirstItem: \"typeaheadSelectFirstItem\", typeaheadIsFirstItemActive: \"typeaheadIsFirstItemActive\", dropup: \"dropup\", typeaheadOptionsLimit: \"typeaheadOptionsLimit\", typeaheadMinLength: \"typeaheadMinLength\", typeaheadWaitMs: \"typeaheadWaitMs\", typeaheadAsync: \"typeaheadAsync\", typeahead: \"typeahead\", adaptivePosition: \"adaptivePosition\", typeaheadOptionField: \"typeaheadOptionField\", typeaheadGroupField: \"typeaheadGroupField\", typeaheadOrderBy: \"typeaheadOrderBy\", typeaheadMultipleSearch: \"typeaheadMultipleSearch\", typeaheadItemTemplate: \"typeaheadItemTemplate\", optionsListTemplate: \"optionsListTemplate\", typeaheadHideResultsOnBlur: \"typeaheadHideResultsOnBlur\", container: \"container\" }, outputs: { typeaheadLoading: \"typeaheadLoading\", typeaheadNoResults: \"typeaheadNoResults\", typeaheadOnSelect: \"typeaheadOnSelect\", typeaheadOnBlur: \"typeaheadOnBlur\" }, exportAs: [\"bs-typeahead\"] });\n/** @nocollapse */\nTypeaheadDirective.ctorParameters = () => [\n    { type: ComponentLoaderFactory },\n    { type: TypeaheadConfig },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: NgControl },\n    { type: Renderer2 },\n    { type: ViewContainerRef }\n];\nTypeaheadDirective.propDecorators = {\n    typeahead: [{ type: Input }],\n    typeaheadMinLength: [{ type: Input }],\n    adaptivePosition: [{ type: Input }],\n    isAnimated: [{ type: Input }],\n    typeaheadWaitMs: [{ type: Input }],\n    typeaheadOptionsLimit: [{ type: Input }],\n    typeaheadOptionField: [{ type: Input }],\n    typeaheadGroupField: [{ type: Input }],\n    typeaheadOrderBy: [{ type: Input }],\n    typeaheadAsync: [{ type: Input }],\n    typeaheadLatinize: [{ type: Input }],\n    typeaheadSingleWords: [{ type: Input }],\n    typeaheadWordDelimiters: [{ type: Input }],\n    typeaheadMultipleSearch: [{ type: Input }],\n    typeaheadMultipleSearchDelimiters: [{ type: Input }],\n    typeaheadPhraseDelimiters: [{ type: Input }],\n    typeaheadItemTemplate: [{ type: Input }],\n    optionsListTemplate: [{ type: Input }],\n    typeaheadScrollable: [{ type: Input }],\n    typeaheadOptionsInScrollableView: [{ type: Input }],\n    typeaheadHideResultsOnBlur: [{ type: Input }],\n    typeaheadSelectFirstItem: [{ type: Input }],\n    typeaheadIsFirstItemActive: [{ type: Input }],\n    typeaheadLoading: [{ type: Output }],\n    typeaheadNoResults: [{ type: Output }],\n    typeaheadOnSelect: [{ type: Output }],\n    typeaheadOnBlur: [{ type: Output }],\n    container: [{ type: Input }],\n    dropup: [{ type: Input }],\n    onInput: [{ type: HostListener, args: ['input', ['$event'],] }],\n    onChange: [{ type: HostListener, args: ['keyup', ['$event'],] }],\n    onFocus: [{ type: HostListener, args: ['click',] }, { type: HostListener, args: ['focus',] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }],\n    onKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TypeaheadDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[typeahead]',\n                exportAs: 'bs-typeahead',\n                host: {\n                    '[attr.aria-activedescendant]': 'activeDescendant',\n                    '[attr.aria-owns]': 'isOpen ? this._container.popupId : null',\n                    '[attr.aria-expanded]': 'isOpen',\n                    '[attr.aria-autocomplete]': 'list'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc3.ComponentLoaderFactory }, { type: TypeaheadConfig }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc4.NgControl }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ViewContainerRef }]; }, { isAnimated: [{\n            type: Input\n        }], typeaheadLatinize: [{\n            type: Input\n        }], typeaheadSingleWords: [{\n            type: Input\n        }], typeaheadWordDelimiters: [{\n            type: Input\n        }], typeaheadMultipleSearchDelimiters: [{\n            type: Input\n        }], typeaheadPhraseDelimiters: [{\n            type: Input\n        }], typeaheadScrollable: [{\n            type: Input\n        }], typeaheadOptionsInScrollableView: [{\n            type: Input\n        }], typeaheadSelectFirstItem: [{\n            type: Input\n        }], typeaheadIsFirstItemActive: [{\n            type: Input\n        }], typeaheadLoading: [{\n            type: Output\n        }], typeaheadNoResults: [{\n            type: Output\n        }], typeaheadOnSelect: [{\n            type: Output\n        }], typeaheadOnBlur: [{\n            type: Output\n        }], dropup: [{\n            type: Input\n        }], typeaheadOptionsLimit: [{\n            type: Input\n        }], typeaheadMinLength: [{\n            type: Input\n        }], typeaheadWaitMs: [{\n            type: Input\n        }], typeaheadAsync: [{\n            type: Input\n        }], \n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    // tslint:disable-next-line:no-any\n    onInput: [{\n            type: HostListener,\n            args: ['input', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['keyup', ['$event']]\n        }], \n    /**\n     * @return {?}\n     */\n    onFocus: [{\n            type: HostListener,\n            args: ['click']\n        }, {\n            type: HostListener,\n            args: ['focus']\n        }], \n    /**\n     * @return {?}\n     */\n    onBlur: [{\n            type: HostListener,\n            args: ['blur']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeydown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], typeahead: [{\n            type: Input\n        }], adaptivePosition: [{\n            type: Input\n        }], typeaheadOptionField: [{\n            type: Input\n        }], typeaheadGroupField: [{\n            type: Input\n        }], typeaheadOrderBy: [{\n            type: Input\n        }], typeaheadMultipleSearch: [{\n            type: Input\n        }], typeaheadItemTemplate: [{\n            type: Input\n        }], optionsListTemplate: [{\n            type: Input\n        }], typeaheadHideResultsOnBlur: [{\n            type: Input\n        }], container: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * options source, can be Array of strings, objects or\n     * an Observable for external matching process\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeahead;\n    /**\n     * minimal no of characters that needs to be entered before\n     * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n     * list of options (limited as normal by typeaheadOptionsLimit)\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadMinLength;\n    /**\n     * sets use adaptive position\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.adaptivePosition;\n    /**\n     * turn on/off animation\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.isAnimated;\n    /**\n     * minimal wait time after last character typed before typeahead kicks-in\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadWaitMs;\n    /**\n     * maximum length of options items list. The default value is 20\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadOptionsLimit;\n    /**\n     * when options source is an array of objects, the name of field\n     * that contains the options value, we use array item as option in case\n     * of this field is missing. Supports nested properties and methods.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadOptionField;\n    /**\n     * when options source is an array of objects, the name of field that\n     * contains the group value, matches are grouped by this field when set.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadGroupField;\n    /**\n     * Used to specify a custom order of matches. When options source is an array of objects\n     * a field for sorting has to be set up. In case of options source is an array of string,\n     * a field for sorting is absent. The ordering direction could be changed to ascending or descending.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadOrderBy;\n    /**\n     * should be used only in case of typeahead attribute is Observable of array.\n     * If true - loading of options will be async, otherwise - sync.\n     * true make sense if options array is large.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadAsync;\n    /**\n     * match latin symbols.\n     * If true the word súper would match super and vice versa.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadLatinize;\n    /**\n     * Can be use to search words by inserting a single white space between each characters\n     *  for example 'C a l i f o r n i a' will match 'California'.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadSingleWords;\n    /**\n     * should be used only in case typeaheadSingleWords attribute is true.\n     * Sets the word delimiter to break words. Defaults to space.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadWordDelimiters;\n    /**\n     * Can be used to conduct a search of multiple items and have suggestion not for the\n     * whole value of the input but for the value that comes after a delimiter provided via\n     * typeaheadMultipleSearchDelimiters attribute. This option can only be used together with\n     * typeaheadSingleWords option if typeaheadWordDelimiters and typeaheadPhraseDelimiters\n     * are different from typeaheadMultipleSearchDelimiters to avoid conflict in determining\n     * when to delimit multiple searches and when a single word.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadMultipleSearch;\n    /**\n     * should be used only in case typeaheadMultipleSearch attribute is true.\n     * Sets the multiple search delimiter to know when to start a new search. Defaults to comma.\n     * If space needs to be used, then explicitly set typeaheadWordDelimiters to something else than space\n     * because space is used by default OR set typeaheadSingleWords attribute to false if you don't need\n     * to use it together with multiple search.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadMultipleSearchDelimiters;\n    /**\n     * should be used only in case typeaheadSingleWords attribute is true.\n     * Sets the word delimiter to match exact phrase.\n     * Defaults to simple and double quotes.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadPhraseDelimiters;\n    /**\n     * used to specify a custom item template.\n     * Template variables exposed are called item and index;\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadItemTemplate;\n    /**\n     * used to specify a custom options list template.\n     * Template variables: matches, itemTemplate, query\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.optionsListTemplate;\n    /**\n     * specifies if typeahead is scrollable\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadScrollable;\n    /**\n     * specifies number of options to show in scroll view\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadOptionsInScrollableView;\n    /**\n     * used to hide result on blur\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadHideResultsOnBlur;\n    /**\n     * fired when an options list was opened and the user clicked Tab\n     * If a value equal true, it will be chosen first or active item in the list\n     * If value equal false, it will be chosen an active item in the list or nothing\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadSelectFirstItem;\n    /**\n     * makes active first item in a list\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadIsFirstItemActive;\n    /**\n     * fired when 'busy' state of this component was changed,\n     * fired on async mode only, returns boolean\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadLoading;\n    /**\n     * fired on every key event and returns true\n     * in case of matches are not detected\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadNoResults;\n    /**\n     * fired when option was selected, return object with data of this option\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadOnSelect;\n    /**\n     * fired when blur event occurs. returns the active item\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.typeaheadOnBlur;\n    /**\n     * A selector specifying the element the typeahead should be appended to.\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.container;\n    /**\n     * This attribute indicates that the dropdown should be opened upwards\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.dropup;\n    /**\n     * if false don't focus the input element the typeahead directive is associated with on selection\n     * @type {?}\n     */\n    TypeaheadDirective.prototype.activeDescendant;\n    /** @type {?} */\n    TypeaheadDirective.prototype.isOpen;\n    /** @type {?} */\n    TypeaheadDirective.prototype.list;\n    /** @type {?} */\n    TypeaheadDirective.prototype._container;\n    /** @type {?} */\n    TypeaheadDirective.prototype.isActiveItemChanged;\n    /** @type {?} */\n    TypeaheadDirective.prototype.isFocused;\n    /** @type {?} */\n    TypeaheadDirective.prototype.cancelRequestOnFocusLost;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TypeaheadDirective.prototype.keyUpEventEmitter;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TypeaheadDirective.prototype._matches;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TypeaheadDirective.prototype.placement;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadDirective.prototype._typeahead;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadDirective.prototype._subscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadDirective.prototype._outsideClickListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadDirective.prototype._allEnteredValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadDirective.prototype.changeDetection;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadDirective.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    TypeaheadDirective.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TypeaheadModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: TypeaheadModule,\n            providers: [ComponentLoaderFactory, PositioningService]\n        };\n    }\n}\nTypeaheadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TypeaheadModule });\nTypeaheadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TypeaheadModule_Factory(t) { return new (t || TypeaheadModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TypeaheadModule, { declarations: function () { return [TypeaheadContainerComponent, TypeaheadDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TypeaheadContainerComponent, TypeaheadDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TypeaheadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n                exports: [TypeaheadContainerComponent, TypeaheadDirective],\n                entryComponents: [TypeaheadContainerComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { TypeaheadConfig, TypeaheadContainerComponent, TypeaheadDirective, TypeaheadMatch, TypeaheadModule, TypeaheadOptions, TypeaheadOrder, escapeRegexp, getValueFromObject, latinMap, latinize, tokenize, typeaheadAnimation as ɵa };\n\n//# sourceMappingURL=ngx-bootstrap-typeahead.js.map"],"sourceRoot":"webpack:///"}