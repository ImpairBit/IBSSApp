{"version":3,"sources":["./src/app/view/view-routing.module.ts","./src/app/view/view.component.ts","./src/app/view/view.component.html","./src/app/view/view.module.ts"],"names":["routes","path","component","ViewComponent","route","ws","router","isLoading","config","wiz_config","_viewUrl","this","getBaseURL","RESOURCES","profileName","isView","isMock","url","toLowerCase","includes","snapshot","paramMap","get","profileData","getContent","navigate","toggleLoader","viewType","getViewData","subscribe","res","error","responseCode","err","ViewRoutingModule","forChild","ViewModule"],"mappings":"kPAKA,MAAMA,EAAiB,CAAC,CAAEC,KAAM,GAAIC,UCO7B,M,MAAMC,EAUX,YACUC,EACAC,EACAC,GAFA,KAAAF,QACA,KAAAC,KACA,KAAAC,SAXV,KAAAC,WAAY,EACZ,KAAAC,OAAwB,IACxB,KAAAC,WAAmC,IACnC,KAAAC,SAAWC,KAAKH,OAAOI,WAAW,IAAIC,WAAa,SACnD,KAAAC,YAAc,GAEd,KAAAC,QAAS,EACT,KAAAC,QAAS,EAMPL,KAAKH,OAAOO,QAAS,EACrBJ,KAAKK,OAASL,KAAKL,OAAOW,IAAIC,cAAcC,SAAS,gBAGvD,WAIE,GAFAR,KAAKG,YADeH,KAAKP,MAAMgB,SAASC,SACTC,IAAI,MAE9BX,KAAKK,OAmBNL,KAAKY,YAAaZ,KAAKF,WAAWe,WAAWb,KAAKG,aAClDH,KAAKJ,WAAY,EAEZI,KAAKY,aACRZ,KAAKL,OAAOmB,SAAS,CAAC,aAvBV,CAChBd,KAAKH,OAAOkB,cAAa,GACzB,IAAIC,EAAWhB,KAAKL,OAAOW,IAAIC,cAAcC,SAAS,WAAa,EAAI,EACvER,KAAKN,GAAGuB,YAAYjB,KAAKG,YAAc,IAAIa,EAAqB,IAAXA,GAClDE,UAAWC,IACNA,EAAIC,OAAoC,IAA3BD,EAAIC,MAAMC,cACzBrB,KAAKY,YAAcO,EAAIP,YAAcO,EAAIP,YAAc,KACvDZ,KAAKJ,WAAY,IAEjBI,KAAKJ,WAAY,EACjBI,KAAKL,OAAOmB,SAAS,CAAC,UAExBd,KAAKH,OAAOkB,cAAa,IACvBO,IACFtB,KAAKJ,WAAY,EACjBI,KAAKL,OAAOmB,SAAS,CAAC,SACtBd,KAAKH,OAAOkB,cAAa,O,6CAvCtBvB,GAAa,oH,mDAAbA,EAAa,+HCZ1B,gD,KAAiB,wDAA4B,wBAA5B,CAA4B,kBAA5B,CAA4B,qB,kCDYtC,KDDA,Y,MAAM+B,G,yDAAAA,I,+EAAAA,IAAiB,SAHnB,CAAC,IAAaC,SAASnC,IACtB,O,GAEL,G,gBGKA,Y,MAAMoC,G,yDAAAA,I,+EAAAA,IAAU,SANZ,CACP,eACA,EACA,Q,GAGG","file":"view-view-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ViewComponent } from './view.component';\n\nconst routes: Routes = [{ path: '', component: ViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ViewRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CONFIG } from '../config';\nimport { API } from '../enums/api.enum';\nimport { WIZARD_CONFIG } from '../wizard/wizard.config';\nimport { WizardService } from '../wizard/wizard.service';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n\n  isLoading = true;\n  config: typeof CONFIG = CONFIG;\n  wiz_config: typeof WIZARD_CONFIG = WIZARD_CONFIG;\n  _viewUrl = this.config.getBaseURL(API.RESOURCES) + \"/view/\";\n  profileName = \"\";\n  profileData: any;\n  isView = true;\n  isMock = false;\n  constructor(\n    private route: ActivatedRoute,\n    private ws: WizardService,\n    private router: Router\n  ) { \n    this.config.isView = true;\n    this.isMock = this.router.url.toLowerCase().includes('templateview');\n  }\n\n  ngOnInit(): void {\n    const routeParams = this.route.snapshot.paramMap;\n    this.profileName = routeParams.get('Id') as string;\n\n    if (!this.isMock) {\n      this.config.toggleLoader(true);\n      let viewType = this.router.url.toLowerCase().includes('preview')?  1 : 2;\n      this.ws.getViewData(this.profileName + \"/\"+viewType, viewType===1 )\n        .subscribe((res: any) => {\n          if (res.error && res.error.responseCode === 0) {\n            this.profileData = res.profileData ? res.profileData : null;\n            this.isLoading = false;\n          } else {\n            this.isLoading = false;\n            this.router.navigate(['/404']);\n          }\n          this.config.toggleLoader(false);\n        }, (err: any) => {\n          this.isLoading = false;\n          this.router.navigate(['/404']);\n          this.config.toggleLoader(false);\n        });\n      } else {\n        this.profileData= this.wiz_config.getContent(this.profileName);\n        this.isLoading = false;\n\n        if (!this.profileData) {\n          this.router.navigate(['/404']);\n        }\n    }\n  }\n\n}\n","<ibss-web-layout [inputPayload]=\"profileData\" [isLoading]=\"isLoading\" [isView]=\"isView\" [isDummy]=\"isMock\"></ibss-web-layout>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ViewRoutingModule } from './view-routing.module';\nimport { ViewComponent } from './view.component';\nimport { LayoutModule } from '../layouts/web/layout/layout.module';\n\n\n@NgModule({\n  declarations: [ViewComponent],\n  imports: [\n    CommonModule,\n    ViewRoutingModule,\n    LayoutModule\n  ]\n})\nexport class ViewModule { }\n"],"sourceRoot":"webpack:///"}