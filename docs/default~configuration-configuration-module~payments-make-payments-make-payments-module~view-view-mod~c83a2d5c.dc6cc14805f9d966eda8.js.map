{"version":3,"sources":["./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js"],"names":["_c0","BsModalRef","this","hide","Function","setClass","ɵfac","t","ɵprov","token","factory","ModalOptions","modalConfigDefaults","backdrop","keyboard","focus","show","ignoreBackdropClick","class","animated","initialState","MODAL_CONFIG_DEFAULT_OVERRIDE","CLASS_NAME","DISMISS_REASONS","ModalContainerComponent","options","_element","_renderer","isShown","isModalHiding","clickStartedInContent","config","Object","assign","isAnimated","addClass","nativeElement","setStyle","setTimeout","document","body","bsModalService","getModalsCount","checkScrollbar","setScrollbar","event","target","setDismissReason","keyCode","key","preventDefault","level","removeClass","id","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","$event","onClickStarted","onClickStop","onPopState","onEsc","ariaLabelledBy","ariaDescribedby","ngContentSelectors","decls","vars","consts","template","encapsulation","ModalBackdropComponent","element","renderer","_isShown","_isAnimated","value","reflow","ModalDirective","_viewContainerRef","clf","modalDefaultOption","onShow","onShown","onHide","onHidden","isBodyOverflowing","originalBodyPadding","scrollbarWidth","timerHideModal","timerRmBackDrop","isNested","_backdrop","createLoader","_config","conf","getConfig","dismissReason","hideModal","dispose","emit","clearTimeout","classList","contains","showBackdrop","showElement","parentNode","nodeType","Node","ELEMENT_NODE","appendChild","setAttribute","setProperty","transitionComplete","resetScrollbar","resetAdjustments","focusOtherModal","callback","instance","callbackRemove","removeBackdrop","attach","to","_componentRef","parentElement","otherOpenedModals","querySelectorAll","length","clientWidth","innerWidth","getScrollbarWidth","parseInt","getComputedStyle","getPropertyValue","style","paddingRight","scrollDiv","createElement","offsetWidth","removeChild","ɵdir","inputs","outputs","exportAs","BsModalService","rendererFactory","modalsCount","lastDismissReason","loaders","_backdropLoader","createRenderer","content","_createLoaders","Date","getUTCMilliseconds","_showBackdrop","_showModal","_hideBackdrop","_hideModal","removeLoaders","isBackdropEnabled","isBackdropInDOM","backdropRef","_a","modalLoader","providers","provider","provide","bsModalRef","modalContainerRef","useValue","newClass","copyEvent","onBeforeHide","getInnerComponent","indexToRemove","findIndex","loader","forEach","reason","window","onBeforeShow","push","splice","i","from","subscribe","data","ModalModule","ngModule","ɵmod","ɵinj"],"mappings":"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","file":"default~configuration-configuration-module~payments-make-payments-make-payments-module~view-view-mod~c83a2d5c.dc6cc14805f9d966eda8.js","sourcesContent":["import { Injectable, InjectionToken, Component, ElementRef, Renderer2, HostListener, EventEmitter, Directive, ViewContainerRef, Optional, Inject, Input, Output, RendererFactory2, NgModule } from '@angular/core';\nimport { isBs3, Utils, document as document$1, window as window$1 } from 'ngx-bootstrap/utils';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\n// tslint:disable-next-line:no-any\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-bootstrap/component-loader';\n\nconst _c0 = [\"*\"];\nclass BsModalRef {\n    constructor() {\n        /**\n         * Hides the modal\n         */\n        this.hide = Function;\n        /**\n         * Sets new class to modal window\n         */\n        this.setClass = Function;\n    }\n}\nBsModalRef.ɵfac = function BsModalRef_Factory(t) { return new (t || BsModalRef)(); };\nBsModalRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BsModalRef, factory: BsModalRef.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsModalRef, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     *  Allow user to ID for the modal. Otherwise, a unique number will be given\n     * @type {?}\n     */\n    BsModalRef.prototype.id;\n    /**\n     * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n     * @type {?}\n     */\n    BsModalRef.prototype.content;\n    /**\n     * Hides the modal\n     * @type {?}\n     */\n    BsModalRef.prototype.hide;\n    /**\n     * Sets new class to modal window\n     * @type {?}\n     */\n    BsModalRef.prototype.setClass;\n    /**\n     * Event that is fired when the modal behind the ref starts hiding\n     * @type {?}\n     */\n    BsModalRef.prototype.onHide;\n    /**\n     * Event that is fired when the modal behind the ref finishes hiding\n     * @type {?}\n     */\n    BsModalRef.prototype.onHidden;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalBackdropOptions {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.animate = true;\n        Object.assign(this, options);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ModalBackdropOptions.prototype.animate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ModalOptions {\n}\nModalOptions.ɵfac = function ModalOptions_Factory(t) { return new (t || ModalOptions)(); };\nModalOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ModalOptions, factory: ModalOptions.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalOptions, [{\n        type: Injectable\n    }], null, null); })();\nif (false) {\n    /**\n     *  Allow user to ID for the modal. Otherwise, a unique number will be given\n     * @type {?}\n     */\n    ModalOptions.prototype.id;\n    /**\n     *  Includes a modal-backdrop element. Alternatively,\n     *  specify static for a backdrop which doesn't close the modal on click.\n     * @type {?}\n     */\n    ModalOptions.prototype.backdrop;\n    /**\n     * Closes the modal when escape key is pressed.\n     * @type {?}\n     */\n    ModalOptions.prototype.keyboard;\n    /** @type {?} */\n    ModalOptions.prototype.focus;\n    /**\n     * Shows the modal when initialized.\n     * @type {?}\n     */\n    ModalOptions.prototype.show;\n    /**\n     * Ignore the backdrop click\n     * @type {?}\n     */\n    ModalOptions.prototype.ignoreBackdropClick;\n    /**\n     * Css class for opened modal\n     * @type {?}\n     */\n    ModalOptions.prototype.class;\n    /**\n     * Toggle animation\n     * @type {?}\n     */\n    ModalOptions.prototype.animated;\n    /**\n     * Modal data\n     * @type {?}\n     */\n    ModalOptions.prototype.initialState;\n    /**\n     * Modal providers\n     * @type {?}\n     */\n    ModalOptions.prototype.providers;\n    /**\n     * aria-labelledby attribute value to set on the modal window\n     * @type {?}\n     */\n    ModalOptions.prototype.ariaLabelledBy;\n    /**\n     * aria-describedby attribute value to set on the modal window\n     * @type {?}\n     */\n    ModalOptions.prototype.ariaDescribedby;\n}\n/** @type {?} */\nconst modalConfigDefaults = {\n    backdrop: true,\n    keyboard: true,\n    focus: true,\n    show: false,\n    ignoreBackdropClick: false,\n    class: '',\n    animated: true,\n    initialState: {}\n};\n/** @type {?} */\nconst MODAL_CONFIG_DEFAULT_OVERRIDE = new InjectionToken('override-default-config');\n/** @type {?} */\nconst CLASS_NAME = {\n    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n    BACKDROP: 'modal-backdrop',\n    OPEN: 'modal-open',\n    FADE: 'fade',\n    IN: 'in',\n    // bs3\n    SHOW: 'show' // bs4\n};\n/** @type {?} */\nconst SELECTOR = {\n    DIALOG: '.modal-dialog',\n    DATA_TOGGLE: '[data-toggle=\"modal\"]',\n    DATA_DISMISS: '[data-dismiss=\"modal\"]',\n    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n/** @type {?} */\nconst TRANSITION_DURATIONS = {\n    MODAL: 300,\n    BACKDROP: 150\n};\n/** @type {?} */\nconst DISMISS_REASONS = {\n    BACKRDOP: 'backdrop-click',\n    ESC: 'esc',\n    BACK: 'browser-back-navigation-clicked'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalContainerComponent {\n    /**\n     * @param {?} options\n     * @param {?} _element\n     * @param {?} _renderer\n     */\n    constructor(options, _element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.isShown = false;\n        this.isModalHiding = false;\n        this.clickStartedInContent = false;\n        this.config = Object.assign({}, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.isAnimated) {\n            this._renderer.addClass(this._element.nativeElement, CLASS_NAME.FADE);\n        }\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.isShown = true;\n            this._renderer.addClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n        }), this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n        if (document && document.body) {\n            if (this.bsModalService.getModalsCount() === 1) {\n                this.bsModalService.checkScrollbar();\n                this.bsModalService.setScrollbar();\n            }\n            this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n        }\n        if (this._element.nativeElement) {\n            this._element.nativeElement.focus();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted(event) {\n        this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop(event) {\n        /** @type {?} */\n        const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n        if (this.config.ignoreBackdropClick ||\n            this.config.backdrop === 'static' ||\n            !clickedInBackdrop) {\n            this.clickStartedInContent = false;\n            return;\n        }\n        this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n        this.hide();\n    }\n    /**\n     * @return {?}\n     */\n    onPopState() {\n        this.bsModalService.setDismissReason(DISMISS_REASONS.BACK);\n        this.hide();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc(event) {\n        if (!this.isShown) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 27 || event.key === 'Escape') {\n            event.preventDefault();\n        }\n        if (this.config.keyboard &&\n            this.level === this.bsModalService.getModalsCount()) {\n            this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.isShown) {\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        if (this.isModalHiding || !this.isShown) {\n            return;\n        }\n        this.isModalHiding = true;\n        this._renderer.removeClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.isShown = false;\n            if (document &&\n                document.body &&\n                this.bsModalService.getModalsCount() === 1) {\n                this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n            }\n            this.bsModalService.hide(this.config.id);\n            this.isModalHiding = false;\n        }), this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n    }\n}\nModalContainerComponent.ɵfac = function ModalContainerComponent_Factory(t) { return new (t || ModalContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ModalOptions), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nModalContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalContainerComponent, selectors: [[\"modal-container\"]], hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\", 1, \"modal\"], hostVars: 3, hostBindings: function ModalContainerComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function ModalContainerComponent_mousedown_HostBindingHandler($event) { return ctx.onClickStarted($event); })(\"mouseup\", function ModalContainerComponent_mouseup_HostBindingHandler($event) { return ctx.onClickStop($event); })(\"popstate\", function ModalContainerComponent_popstate_HostBindingHandler() { return ctx.onPopState(); }, false, ɵngcc0.ɵɵresolveWindow)(\"keydown.esc\", function ModalContainerComponent_keydown_esc_HostBindingHandler($event) { return ctx.onEsc($event); }, false, ɵngcc0.ɵɵresolveWindow);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.config.ariaLabelledBy)(\"aria-describedby\", ctx.config.ariaDescribedby);\n    } }, ngContentSelectors: _c0, decls: 3, vars: 2, consts: [[\"role\", \"document\"], [1, \"modal-content\"]], template: function ModalContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.config.class ? \" \" + ctx.config.class : \"\"));\n    } }, encapsulation: 2 });\n/** @nocollapse */\nModalContainerComponent.ctorParameters = () => [\n    { type: ModalOptions },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nModalContainerComponent.propDecorators = {\n    onClickStarted: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\n    onClickStop: [{ type: HostListener, args: ['mouseup', ['$event'],] }],\n    onPopState: [{ type: HostListener, args: ['window:popstate',] }],\n    onEsc: [{ type: HostListener, args: ['window:keydown.esc', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalContainerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'modal-container',\n                template: `\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n      <div class=\"modal-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n                host: {\n                    class: 'modal',\n                    role: 'dialog',\n                    tabindex: '-1',\n                    '[attr.aria-modal]': 'true',\n                    '[attr.aria-labelledby]': 'config.ariaLabelledBy',\n                    '[attr.aria-describedby]': 'config.ariaDescribedby'\n                }\n            }]\n    }], function () { return [{ type: ModalOptions }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop: [{\n            type: HostListener,\n            args: ['mouseup', ['$event']]\n        }], \n    /**\n     * @return {?}\n     */\n    onPopState: [{\n            type: HostListener,\n            args: ['window:popstate']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc: [{\n            type: HostListener,\n            args: ['window:keydown.esc', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    ModalContainerComponent.prototype.config;\n    /** @type {?} */\n    ModalContainerComponent.prototype.isShown;\n    /** @type {?} */\n    ModalContainerComponent.prototype.level;\n    /** @type {?} */\n    ModalContainerComponent.prototype.isAnimated;\n    /** @type {?} */\n    ModalContainerComponent.prototype.bsModalService;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype.isModalHiding;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype.clickStartedInContent;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalContainerComponent.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This component will be added as background layout for modals if enabled\n */\nclass ModalBackdropComponent {\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     */\n    constructor(element, renderer) {\n        this._isShown = false;\n        this.element = element;\n        this.renderer = renderer;\n    }\n    /**\n     * @return {?}\n     */\n    get isAnimated() {\n        return this._isAnimated;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isAnimated(value) {\n        this._isAnimated = value;\n        // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n    }\n    /**\n     * @return {?}\n     */\n    get isShown() {\n        return this._isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isShown(value) {\n        this._isShown = value;\n        if (value) {\n            this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\n        }\n        else {\n            this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\n        }\n        if (!isBs3()) {\n            if (value) {\n                this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);\n            }\n            else {\n                this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.isAnimated) {\n            this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.FADE}`);\n            Utils.reflow(this.element.nativeElement);\n        }\n        this.isShown = true;\n    }\n}\nModalBackdropComponent.ɵfac = function ModalBackdropComponent_Factory(t) { return new (t || ModalBackdropComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nModalBackdropComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalBackdropComponent, selectors: [[\"bs-modal-backdrop\"]], hostAttrs: [1, \"modal-backdrop\"], decls: 0, vars: 0, template: function ModalBackdropComponent_Template(rf, ctx) { }, encapsulation: 2 });\n/** @nocollapse */\nModalBackdropComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalBackdropComponent, [{\n        type: Component,\n        args: [{\n                selector: 'bs-modal-backdrop',\n                template: ' ',\n                host: { class: CLASS_NAME.BACKDROP }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    ModalBackdropComponent.prototype.element;\n    /** @type {?} */\n    ModalBackdropComponent.prototype.renderer;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalBackdropComponent.prototype._isAnimated;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalBackdropComponent.prototype._isShown;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TRANSITION_DURATION = 300;\n/** @type {?} */\nconst BACKDROP_TRANSITION_DURATION = 150;\n/**\n * Mark any code with directive to show it's content in modal\n */\nclass ModalDirective {\n    /**\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} clf\n     * @param {?} modalDefaultOption\n     */\n    constructor(_element, _viewContainerRef, _renderer, clf, modalDefaultOption) {\n        this._element = _element;\n        this._renderer = _renderer;\n        /**\n         * This event fires immediately when the `show` instance method is called.\n         */\n        this.onShow = new EventEmitter();\n        /**\n         * This event is fired when the modal has been made visible to the user\n         * (will wait for CSS transitions to complete)\n         */\n        this.onShown = new EventEmitter();\n        /**\n         * This event is fired immediately when\n         * the hide instance method has been called.\n         */\n        this.onHide = new EventEmitter();\n        /**\n         * This event is fired when the modal has finished being\n         * hidden from the user (will wait for CSS transitions to complete).\n         */\n        this.onHidden = new EventEmitter();\n        this._isShown = false;\n        this.isBodyOverflowing = false;\n        this.originalBodyPadding = 0;\n        this.scrollbarWidth = 0;\n        this.timerHideModal = 0;\n        this.timerRmBackDrop = 0;\n        this.isNested = false;\n        this.clickStartedInContent = false;\n        this._backdrop = clf.createLoader(_element, _viewContainerRef, _renderer);\n        this._config = modalDefaultOption || modalConfigDefaults;\n    }\n    /**\n     * allows to set modal configuration via element property\n     * @param {?} conf\n     * @return {?}\n     */\n    set config(conf) {\n        this._config = this.getConfig(conf);\n    }\n    /**\n     * @return {?}\n     */\n    get config() {\n        return this._config;\n    }\n    /**\n     * @return {?}\n     */\n    get isShown() {\n        return this._isShown;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted(event) {\n        this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop(event) {\n        /** @type {?} */\n        const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n        if (this.config.ignoreBackdropClick ||\n            this.config.backdrop === 'static' ||\n            !clickedInBackdrop) {\n            this.clickStartedInContent = false;\n            return;\n        }\n        this.dismissReason = DISMISS_REASONS.BACKRDOP;\n        this.hide(event);\n    }\n    // todo: consider preventing default and stopping propagation\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc(event) {\n        if (!this._isShown) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 27 || event.key === 'Escape') {\n            event.preventDefault();\n        }\n        if (this.config.keyboard) {\n            this.dismissReason = DISMISS_REASONS.ESC;\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.config = void 0;\n        if (this._isShown) {\n            this._isShown = false;\n            this.hideModal();\n            this._backdrop.dispose();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._config = this._config || this.getConfig();\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this._config.show) {\n                this.show();\n            }\n        }), 0);\n    }\n    /* Public methods */\n    /**\n     * Allows to manually toggle modal visibility\n     * @return {?}\n     */\n    toggle() {\n        return this._isShown ? this.hide() : this.show();\n    }\n    /**\n     * Allows to manually open modal\n     * @return {?}\n     */\n    show() {\n        this.dismissReason = null;\n        this.onShow.emit(this);\n        if (this._isShown) {\n            return;\n        }\n        clearTimeout(this.timerHideModal);\n        clearTimeout(this.timerRmBackDrop);\n        this._isShown = true;\n        this.checkScrollbar();\n        this.setScrollbar();\n        if (document$1 && document$1.body) {\n            if (document$1.body.classList.contains(CLASS_NAME.OPEN)) {\n                this.isNested = true;\n            }\n            else {\n                this._renderer.addClass(document$1.body, CLASS_NAME.OPEN);\n            }\n        }\n        this.showBackdrop((/**\n         * @return {?}\n         */\n        () => {\n            this.showElement();\n        }));\n    }\n    /**\n     * Allows to manually close modal\n     * @param {?=} event\n     * @return {?}\n     */\n    hide(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        this.onHide.emit(this);\n        // todo: add an option to prevent hiding\n        if (!this._isShown) {\n            return;\n        }\n        window$1.clearTimeout(this.timerHideModal);\n        window$1.clearTimeout(this.timerRmBackDrop);\n        this._isShown = false;\n        this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n        if (!isBs3()) {\n            this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n        }\n        // this._addClassIn = false;\n        if (this._config.animated) {\n            this.timerHideModal = window$1.setTimeout((/**\n             * @return {?}\n             */\n            () => this.hideModal()), TRANSITION_DURATION);\n        }\n        else {\n            this.hideModal();\n        }\n    }\n    /**\n     * Private methods \\@internal\n     * @protected\n     * @param {?=} config\n     * @return {?}\n     */\n    getConfig(config) {\n        return Object.assign({}, this._config, config);\n    }\n    /**\n     *  Show dialog\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    showElement() {\n        // todo: replace this with component loader usage\n        if (!this._element.nativeElement.parentNode ||\n            this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE) {\n            // don't move modals dom position\n            if (document$1 && document$1.body) {\n                document$1.body.appendChild(this._element.nativeElement);\n            }\n        }\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-modal', 'true');\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n        this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n        if (this._config.animated) {\n            Utils.reflow(this._element.nativeElement);\n        }\n        // this._addClassIn = true;\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n        if (!isBs3()) {\n            this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n        }\n        /** @type {?} */\n        const transitionComplete = (/**\n         * @return {?}\n         */\n        () => {\n            if (this._config.focus) {\n                this._element.nativeElement.focus();\n            }\n            this.onShown.emit(this);\n        });\n        if (this._config.animated) {\n            setTimeout(transitionComplete, TRANSITION_DURATION);\n        }\n        else {\n            transitionComplete();\n        }\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    hideModal() {\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n        this.showBackdrop((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.isNested) {\n                if (document$1 && document$1.body) {\n                    this._renderer.removeClass(document$1.body, CLASS_NAME.OPEN);\n                }\n                this.resetScrollbar();\n            }\n            this.resetAdjustments();\n            this.focusOtherModal();\n            this.onHidden.emit(this);\n        }));\n    }\n    // todo: original show was calling a callback when done, but we can use\n    // promise\n    /**\n     * \\@internal\n     * @protected\n     * @param {?=} callback\n     * @return {?}\n     */\n    showBackdrop(callback) {\n        if (this._isShown &&\n            this.config.backdrop &&\n            (!this.backdrop || !this.backdrop.instance.isShown)) {\n            this.removeBackdrop();\n            this._backdrop\n                .attach(ModalBackdropComponent)\n                .to('body')\n                .show({ isAnimated: this._config.animated });\n            this.backdrop = this._backdrop._componentRef;\n            if (!callback) {\n                return;\n            }\n            if (!this._config.animated) {\n                callback();\n                return;\n            }\n            setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n        }\n        else if (!this._isShown && this.backdrop) {\n            this.backdrop.instance.isShown = false;\n            /** @type {?} */\n            const callbackRemove = (/**\n             * @return {?}\n             */\n            () => {\n                this.removeBackdrop();\n                if (callback) {\n                    callback();\n                }\n            });\n            if (this.backdrop.instance.isAnimated) {\n                this.timerRmBackDrop = window$1.setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n            }\n            else {\n                callbackRemove();\n            }\n        }\n        else if (callback) {\n            callback();\n        }\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    removeBackdrop() {\n        this._backdrop.hide();\n    }\n    /**\n     * Events tricks\n     * @protected\n     * @return {?}\n     */\n    // no need for it\n    // protected setEscapeEvent():void {\n    //   if (this._isShown && this._config.keyboard) {\n    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n    //       if (event.which === 27) {\n    //         this.hide()\n    //       }\n    //     })\n    //\n    //   } else if (!this._isShown) {\n    //     $(this._element).off(Event.KEYDOWN_DISMISS)\n    //   }\n    // }\n    // protected setResizeEvent():void {\n    // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n    // if (this._isShown) {\n    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n    // } else {\n    //   $(window).off(Event.RESIZE)\n    // }\n    // }\n    focusOtherModal() {\n        if (this._element.nativeElement.parentElement == null) {\n            return;\n        }\n        /** @type {?} */\n        const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n        if (!otherOpenedModals.length) {\n            return;\n        }\n        otherOpenedModals[otherOpenedModals.length - 1].focus();\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    resetAdjustments() {\n        this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n        this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n    }\n    /** Scroll bar tricks */\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    checkScrollbar() {\n        this.isBodyOverflowing = document$1.body.clientWidth < window$1.innerWidth;\n        this.scrollbarWidth = this.getScrollbarWidth();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    setScrollbar() {\n        if (!document$1) {\n            return;\n        }\n        this.originalBodyPadding = parseInt(window$1\n            .getComputedStyle(document$1.body)\n            .getPropertyValue('padding-right') || 0, 10);\n        if (this.isBodyOverflowing) {\n            document$1.body.style.paddingRight = `${this.originalBodyPadding +\n                this.scrollbarWidth}px`;\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    resetScrollbar() {\n        document$1.body.style.paddingRight = `${this.originalBodyPadding}px`;\n    }\n    // thx d.walsh\n    /**\n     * @protected\n     * @return {?}\n     */\n    getScrollbarWidth() {\n        /** @type {?} */\n        const scrollDiv = this._renderer.createElement('div');\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n        this._renderer.appendChild(document$1.body, scrollDiv);\n        /** @type {?} */\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        this._renderer.removeChild(document$1.body, scrollDiv);\n        return scrollbarWidth;\n    }\n}\nModalDirective.ɵfac = function ModalDirective_Factory(t) { return new (t || ModalDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(MODAL_CONFIG_DEFAULT_OVERRIDE, 8)); };\nModalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ModalDirective, selectors: [[\"\", \"bsModal\", \"\"]], hostBindings: function ModalDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function ModalDirective_mousedown_HostBindingHandler($event) { return ctx.onClickStarted($event); })(\"mouseup\", function ModalDirective_mouseup_HostBindingHandler($event) { return ctx.onClickStop($event); })(\"keydown.esc\", function ModalDirective_keydown_esc_HostBindingHandler($event) { return ctx.onEsc($event); });\n    } }, inputs: { config: \"config\" }, outputs: { onShow: \"onShow\", onShown: \"onShown\", onHide: \"onHide\", onHidden: \"onHidden\" }, exportAs: [\"bs-modal\"] });\n/** @nocollapse */\nModalDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: Renderer2 },\n    { type: ComponentLoaderFactory },\n    { type: ModalOptions, decorators: [{ type: Optional }, { type: Inject, args: [MODAL_CONFIG_DEFAULT_OVERRIDE,] }] }\n];\nModalDirective.propDecorators = {\n    config: [{ type: Input }],\n    onShow: [{ type: Output }],\n    onShown: [{ type: Output }],\n    onHide: [{ type: Output }],\n    onHidden: [{ type: Output }],\n    onClickStarted: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\n    onClickStop: [{ type: HostListener, args: ['mouseup', ['$event'],] }],\n    onEsc: [{ type: HostListener, args: ['keydown.esc', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[bsModal]',\n                exportAs: 'bs-modal'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.ComponentLoaderFactory }, { type: ModalOptions, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MODAL_CONFIG_DEFAULT_OVERRIDE]\n            }] }]; }, { onShow: [{\n            type: Output\n        }], onShown: [{\n            type: Output\n        }], onHide: [{\n            type: Output\n        }], onHidden: [{\n            type: Output\n        }], config: [{\n            type: Input\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop: [{\n            type: HostListener,\n            args: ['mouseup', ['$event']]\n        }], \n    // todo: consider preventing default and stopping propagation\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc: [{\n            type: HostListener,\n            args: ['keydown.esc', ['$event']]\n        }] }); })();\nif (false) {\n    /**\n     * This event fires immediately when the `show` instance method is called.\n     * @type {?}\n     */\n    ModalDirective.prototype.onShow;\n    /**\n     * This event is fired when the modal has been made visible to the user\n     * (will wait for CSS transitions to complete)\n     * @type {?}\n     */\n    ModalDirective.prototype.onShown;\n    /**\n     * This event is fired immediately when\n     * the hide instance method has been called.\n     * @type {?}\n     */\n    ModalDirective.prototype.onHide;\n    /**\n     * This event is fired when the modal has finished being\n     * hidden from the user (will wait for CSS transitions to complete).\n     * @type {?}\n     */\n    ModalDirective.prototype.onHidden;\n    /**\n     * This field contains last dismiss reason.\n     * Possible values: `backdrop-click`, `esc` and `id: number`\n     * (if modal was closed by direct call of `.hide()`).\n     * @type {?}\n     */\n    ModalDirective.prototype.dismissReason;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype._config;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype._isShown;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.isBodyOverflowing;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.originalBodyPadding;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.scrollbarWidth;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.timerHideModal;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.timerRmBackDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.backdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._backdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype.isNested;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype.clickStartedInContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BsModalService {\n    /**\n     * @param {?} rendererFactory\n     * @param {?} clf\n     * @param {?} modalDefaultOption\n     */\n    constructor(rendererFactory, clf, modalDefaultOption) {\n        this.clf = clf;\n        this.modalDefaultOption = modalDefaultOption;\n        // tslint:disable-next-line:no-any\n        this.onShow = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onShown = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onHide = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onHidden = new EventEmitter();\n        this.isBodyOverflowing = false;\n        this.originalBodyPadding = 0;\n        this.scrollbarWidth = 0;\n        this.modalsCount = 0;\n        this.lastDismissReason = null;\n        this.loaders = [];\n        this._backdropLoader = this.clf.createLoader(null, null, null);\n        this._renderer = rendererFactory.createRenderer(null, null);\n        this.config = modalDefaultOption ?\n            (Object.assign({}, modalConfigDefaults, modalDefaultOption)) :\n            modalConfigDefaults;\n    }\n    /**\n     * Shows a modal\n     * @template T\n     * @param {?} content\n     * @param {?=} config\n     * @return {?}\n     */\n    show(\n    // tslint:disable-next-line:no-any\n    content, config) {\n        this.modalsCount++;\n        this._createLoaders();\n        /** @type {?} */\n        const id = (config === null || config === void 0 ? void 0 : config.id) || (new Date()).getUTCMilliseconds();\n        this.config = this.modalDefaultOption ?\n            Object.assign({}, modalConfigDefaults, this.modalDefaultOption, config) :\n            Object.assign({}, modalConfigDefaults, config);\n        this.config.id = id;\n        this._showBackdrop();\n        this.lastDismissReason = null;\n        return this._showModal(content);\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n    hide(id) {\n        if (this.modalsCount === 1 || id == null) {\n            this._hideBackdrop();\n            this.resetScrollbar();\n        }\n        this.modalsCount = this.modalsCount >= 1 && id != null ? this.modalsCount - 1 : 0;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._hideModal(id);\n            this.removeLoaders(id);\n        }), this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    }\n    /**\n     * @return {?}\n     */\n    _showBackdrop() {\n        /** @type {?} */\n        const isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n        /** @type {?} */\n        const isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n        if (this.modalsCount === 1) {\n            this.removeBackdrop();\n            if (isBackdropEnabled && isBackdropInDOM) {\n                this._backdropLoader\n                    .attach(ModalBackdropComponent)\n                    .to('body')\n                    .show({ isAnimated: this.config.animated });\n                this.backdropRef = this._backdropLoader._componentRef;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _hideBackdrop() {\n        if (!this.backdropRef) {\n            return;\n        }\n        this.backdropRef.instance.isShown = false;\n        /** @type {?} */\n        const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => this.removeBackdrop()), duration);\n    }\n    // tslint:disable-next-line:no-any\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _showModal(content) {\n        var _a;\n        /** @type {?} */\n        const modalLoader = this.loaders[this.loaders.length - 1];\n        if (this.config && this.config.providers) {\n            for (const provider of this.config.providers) {\n                modalLoader.provide(provider);\n            }\n        }\n        /** @type {?} */\n        const bsModalRef = new BsModalRef();\n        /** @type {?} */\n        const modalContainerRef = modalLoader\n            .provide({ provide: ModalOptions, useValue: this.config })\n            .provide({ provide: BsModalRef, useValue: bsModalRef })\n            .attach(ModalContainerComponent)\n            .to('body');\n        bsModalRef.hide = (/**\n         * @return {?}\n         */\n        () => modalContainerRef.instance.hide());\n        bsModalRef.setClass = (/**\n         * @param {?} newClass\n         * @return {?}\n         */\n        (newClass) => {\n            modalContainerRef.instance.config.class = newClass;\n        });\n        bsModalRef.onHidden = new EventEmitter();\n        bsModalRef.onHide = new EventEmitter();\n        this.copyEvent(modalLoader.onBeforeHide, bsModalRef.onHide);\n        this.copyEvent(modalLoader.onHidden, bsModalRef.onHidden);\n        // call 'show' method after assign setClass in bsModalRef.\n        // it makes modal component's bsModalRef available to call setClass method\n        modalContainerRef.show({\n            content,\n            isAnimated: this.config.animated,\n            initialState: this.config.initialState,\n            bsModalService: this,\n            id: this.config.id\n        });\n        modalContainerRef.instance.level = this.getModalsCount();\n        bsModalRef.content = modalLoader.getInnerComponent() || null;\n        bsModalRef.id = (_a = modalContainerRef.instance.config) === null || _a === void 0 ? void 0 : _a.id;\n        return bsModalRef;\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n    _hideModal(id) {\n        if (id != null) {\n            /** @type {?} */\n            const indexToRemove = this.loaders.findIndex((/**\n             * @param {?} loader\n             * @return {?}\n             */\n            loader => loader.instance.config.id === id));\n            /** @type {?} */\n            const modalLoader = this.loaders[indexToRemove];\n            if (modalLoader) {\n                modalLoader.hide(id);\n            }\n        }\n        else {\n            this.loaders.forEach((/**\n             * @param {?} loader\n             * @return {?}\n             */\n            (loader) => {\n                loader.hide(loader.instance.config.id);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getModalsCount() {\n        return this.modalsCount;\n    }\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n    setDismissReason(reason) {\n        this.lastDismissReason = reason;\n    }\n    /**\n     * @return {?}\n     */\n    removeBackdrop() {\n        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n        this._backdropLoader.hide();\n        this.backdropRef = null;\n    }\n    /** Checks if the body is overflowing and sets scrollbar width */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    checkScrollbar() {\n        this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n        this.scrollbarWidth = this.getScrollbarWidth();\n    }\n    /**\n     * @return {?}\n     */\n    setScrollbar() {\n        if (!document) {\n            return;\n        }\n        this.originalBodyPadding = parseInt(window\n            .getComputedStyle(document.body)\n            .getPropertyValue('padding-right') || '0', 10);\n        if (this.isBodyOverflowing) {\n            document.body.style.paddingRight = `${this.originalBodyPadding +\n                this.scrollbarWidth}px`;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    resetScrollbar() {\n        document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n    }\n    // thx d.walsh\n    /**\n     * @private\n     * @return {?}\n     */\n    getScrollbarWidth() {\n        /** @type {?} */\n        const scrollDiv = this._renderer.createElement('div');\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n        this._renderer.appendChild(document.body, scrollDiv);\n        /** @type {?} */\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        this._renderer.removeChild(document.body, scrollDiv);\n        return scrollbarWidth;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLoaders() {\n        /** @type {?} */\n        const loader = this.clf.createLoader(null, null, null);\n        this.copyEvent(loader.onBeforeShow, this.onShow);\n        this.copyEvent(loader.onShown, this.onShown);\n        this.copyEvent(loader.onBeforeHide, this.onHide);\n        this.copyEvent(loader.onHidden, this.onHidden);\n        this.loaders.push(loader);\n    }\n    /**\n     * @private\n     * @param {?=} id\n     * @return {?}\n     */\n    removeLoaders(id) {\n        if (id != null) {\n            /** @type {?} */\n            const indexToRemove = this.loaders.findIndex((/**\n             * @param {?} loader\n             * @return {?}\n             */\n            loader => loader.instance.config.id === id));\n            if (indexToRemove >= 0) {\n                this.loaders.splice(indexToRemove, 1);\n                this.loaders.forEach((/**\n                 * @param {?} loader\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (loader, i) => {\n                    loader.instance.level = i + 1;\n                }));\n            }\n        }\n        else {\n            this.loaders.splice(0, this.loaders.length);\n        }\n    }\n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @param {?} from\n     * @param {?} to\n     * @return {?}\n     */\n    copyEvent(from, to) {\n        from.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            to.emit(this.lastDismissReason || data);\n        }));\n    }\n}\nBsModalService.ɵfac = function BsModalService_Factory(t) { return new (t || BsModalService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc1.ComponentLoaderFactory), ɵngcc0.ɵɵinject(MODAL_CONFIG_DEFAULT_OVERRIDE, 8)); };\nBsModalService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BsModalService, factory: BsModalService.ɵfac });\n/** @nocollapse */\nBsModalService.ctorParameters = () => [\n    { type: RendererFactory2 },\n    { type: ComponentLoaderFactory },\n    { type: ModalOptions, decorators: [{ type: Optional }, { type: Inject, args: [MODAL_CONFIG_DEFAULT_OVERRIDE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsModalService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.RendererFactory2 }, { type: ɵngcc1.ComponentLoaderFactory }, { type: ModalOptions, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MODAL_CONFIG_DEFAULT_OVERRIDE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    BsModalService.prototype.config;\n    /** @type {?} */\n    BsModalService.prototype.onShow;\n    /** @type {?} */\n    BsModalService.prototype.onShown;\n    /** @type {?} */\n    BsModalService.prototype.onHide;\n    /** @type {?} */\n    BsModalService.prototype.onHidden;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.isBodyOverflowing;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.originalBodyPadding;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.scrollbarWidth;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.backdropRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype._backdropLoader;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.modalsCount;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.lastDismissReason;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.loaders;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.clf;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.modalDefaultOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: ModalModule,\n            providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n        };\n    }\n    /**\n     * @return {?}\n     */\n    static forChild() {\n        return {\n            ngModule: ModalModule,\n            providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n        };\n    }\n}\nModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ModalModule });\nModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ModalModule_Factory(t) { return new (t || ModalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, { declarations: [ModalBackdropComponent, ModalDirective, ModalContainerComponent], exports: [ModalBackdropComponent, ModalDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    ModalBackdropComponent,\n                    ModalDirective,\n                    ModalContainerComponent\n                ],\n                exports: [ModalBackdropComponent, ModalDirective],\n                entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BsModalRef, BsModalService, MODAL_CONFIG_DEFAULT_OVERRIDE, ModalBackdropComponent, ModalBackdropOptions, ModalContainerComponent, ModalDirective, ModalModule, ModalOptions, CLASS_NAME as ɵa };\n\n//# sourceMappingURL=ngx-bootstrap-modal.js.map"],"sourceRoot":"webpack:///"}