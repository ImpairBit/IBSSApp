{"version":3,"sources":["./src/app/messages/messages.service.ts","./node_modules/ngx-bootstrap/__ivy_ngcc__/collapse/fesm2015/ngx-bootstrap-collapse.js","./node_modules/ngx-bootstrap/__ivy_ngcc__/accordion/fesm2015/ngx-bootstrap-accordion.js","./src/app/messages/messages.component.html","./src/app/messages/messages-routing.module.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.module.ts","./node_modules/ngx-bootstrap/__ivy_ngcc__/utils/fesm2015/ngx-bootstrap-utils.js"],"names":["MessagesService","http","toastr","config","_listMessagesUrl","this","getBaseURL","RESOURCES","_readMessageUrl","profie","ibssApp","localStorage","getItem","JSON","parse","headers","append","token","access_token","get","conactId","COLLAPSE_ANIMATION_TIMING","expandAnimation","height","visibility","collapseAnimation","CollapseDirective","_el","_renderer","_builder","collapsed","collapses","expanded","expands","isExpanded","collapseNewValue","isCollapsed","isCollapse","isCollapsing","isAnimated","_display","_stylesLoaded","_COLLAPSE_ACTION_NAME","_EXPAND_ACTION_NAME","_factoryCollapseAnimation","build","_factoryExpandAnimation","value","show","hide","setStyle","nativeElement","_player","_isAnimationDone","toggle","reset","emit","animationRun","removeStyle","action","callback","addClass","factoryAnimation","destroy","create","play","onDone","ɵfac","t","ɵdir","type","selectors","hostVars","hostBindings","rf","ctx","inputs","display","collapse","outputs","exportAs","CollapseModule","ngModule","providers","ɵmod","ɵinj","factory","_c0","_c1","a0","AccordionPanelComponent_button_4_Template","ctx_r0","isDisabled","heading","_c2","_c3","AccordionConfig","closeOthers","ɵprov","providedIn","AccordionComponent","groups","Object","assign","openGroup","forEach","group","isOpen","push","index","indexOf","splice","ɵcmp","hostAttrs","ngContentSelectors","decls","vars","template","encapsulation","AccordionPanelComponent","accordion","isOpenChange","_isOpen","closeOtherPanels","Promise","resolve","then","catch","error","console","log","panelClass","addGroup","removeGroup","consts","toggleOpen","directives","styles","AccordionModule","imports","routes","path","component","MessagesComponent","messageService","route","serviceData","emailDetailsResponse","profileName","paginatedMessages","currentpage","startIndx","endIndx","itemsPerPage","snapshot","paramMap","loadInbox","event","page","slice","loadMessageList","subscribe","res","responseCode","sort","a","b","contactId","businessValidation","length","i","errorDesc","dataValidation","err","emailDetils","indx","mIndx","message","loadMessage","profileData","MessagesRoutingModule","forChild","MessagesModule","forRoot","Trigger","open","close","DEFAULT_ALIASES","hover","focus","parseTriggers","triggers","aliases","trimmedTriggers","trim","parsedTriggers","split","map","trigger","triggerPair","alias","manualTriggers","filter","isManual","Error","listenToTriggersV2","renderer","options","target","Function","prototype","listeners","_registerHide","registerHide","fn","useToggle","showFn","listen","unsubscribeFn","registerOutsideClick","outsideClick","contains","targets","some","registerEscClick","outsideEsc","win","window","document$1","document","guessedVersion","setTheme","theme","isBs3","__theme","spanEl","createElement","innerText","body","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","OnChange","defaultValue","sufix","propertyKey","_key","defineProperty","prevValue","Utils","element","elem","view","ownerDocument","defaultView","opener","getComputedStyle","_messagesHash","_hideMsg","warnOnce","msg","warn"],"mappings":"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","file":"messages-messages-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CONFIG } from '../config';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { API } from '../enums/api.enum';\r\n\r\n@Injectable()\r\nexport class MessagesService {\r\n    config: typeof CONFIG = CONFIG;\r\n    _listMessagesUrl = this.config.getBaseURL(API.RESOURCES) + \"/email/list/\";\r\n    _readMessageUrl = this.config.getBaseURL(API.RESOURCES) + \"/email/read/\";\r\n    constructor(\r\n        public http: HttpClient,\r\n        public toastr: ToastrService\r\n    ) { }\r\n    \r\n    loadMessageList(profie:any) {\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"GET\");\r\n        return this.http.get(this._listMessagesUrl+profie, { headers: headers });\r\n    }\r\n\r\n    loadMessage(conactId: number){\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"GET\");\r\n        return this.http.get(this._readMessageUrl+conactId, { headers: headers });\r\n    }\r\n}","import { style, animate, AnimationBuilder } from '@angular/animations';\nimport { EventEmitter, Directive, ElementRef, Renderer2, Output, HostBinding, Input, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/animations';\nconst COLLAPSE_ANIMATION_TIMING = '400ms cubic-bezier(0.4,0.0,0.2,1)';\n/** @type {?} */\nconst expandAnimation = [\n    style({ height: 0, visibility: 'hidden' }),\n    animate(COLLAPSE_ANIMATION_TIMING, style({ height: '*', visibility: 'visible' }))\n];\n/** @type {?} */\nconst collapseAnimation = [\n    style({ height: '*', visibility: 'visible' }),\n    animate(COLLAPSE_ANIMATION_TIMING, style({ height: 0, visibility: 'hidden' }))\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CollapseDirective {\n    /**\n     * @param {?} _el\n     * @param {?} _renderer\n     * @param {?} _builder\n     */\n    constructor(_el, _renderer, _builder) {\n        this._el = _el;\n        this._renderer = _renderer;\n        /**\n         * This event fires as soon as content collapses\n         */\n        this.collapsed = new EventEmitter();\n        /**\n         * This event fires when collapsing is started\n         */\n        this.collapses = new EventEmitter();\n        /**\n         * This event fires as soon as content becomes visible\n         */\n        this.expanded = new EventEmitter();\n        /**\n         * This event fires when expansion is started\n         */\n        this.expands = new EventEmitter();\n        // shown\n        this.isExpanded = true;\n        this.collapseNewValue = true;\n        // hidden\n        this.isCollapsed = false;\n        // stale state\n        this.isCollapse = true;\n        // animation state\n        this.isCollapsing = false;\n        /**\n         * turn on/off animation\n         */\n        this.isAnimated = false;\n        this._display = 'block';\n        this._stylesLoaded = false;\n        this._COLLAPSE_ACTION_NAME = 'collapse';\n        this._EXPAND_ACTION_NAME = 'expand';\n        this._factoryCollapseAnimation = _builder.build(collapseAnimation);\n        this._factoryExpandAnimation = _builder.build(expandAnimation);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set display(value) {\n        if (!this.isAnimated) {\n            this._renderer.setStyle(this._el.nativeElement, 'display', value);\n            return;\n        }\n        this._display = value;\n        if (value === 'none') {\n            this.hide();\n            return;\n        }\n        this.show();\n    }\n    /**\n     * A flag indicating visibility of content (shown or hidden)\n     * @param {?} value\n     * @return {?}\n     */\n    set collapse(value) {\n        this.collapseNewValue = value;\n        if (!this._player || this._isAnimationDone) {\n            this.isExpanded = value;\n            this.toggle();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get collapse() {\n        return this.isExpanded;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        this._stylesLoaded = true;\n        if (!this._player || !this._isAnimationDone) {\n            return;\n        }\n        this._player.reset();\n        this._renderer.setStyle(this._el.nativeElement, 'height', '*');\n    }\n    /**\n     * allows to manually toggle content visibility\n     * @return {?}\n     */\n    toggle() {\n        if (this.isExpanded) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n    /**\n     * allows to manually hide content\n     * @return {?}\n     */\n    hide() {\n        this.isCollapsing = true;\n        this.isExpanded = false;\n        this.isCollapsed = true;\n        this.isCollapsing = false;\n        this.collapses.emit(this);\n        this._isAnimationDone = false;\n        this.animationRun(this.isAnimated, this._COLLAPSE_ACTION_NAME)((/**\n         * @return {?}\n         */\n        () => {\n            this._isAnimationDone = true;\n            if (this.collapseNewValue !== this.isCollapsed && this.isAnimated) {\n                this.show();\n                return;\n            }\n            this.collapsed.emit(this);\n            this._renderer.setStyle(this._el.nativeElement, 'display', 'none');\n        }));\n    }\n    /**\n     * allows to manually show collapsed content\n     * @return {?}\n     */\n    show() {\n        this._renderer.setStyle(this._el.nativeElement, 'display', this._display);\n        this.isCollapsing = true;\n        this.isExpanded = true;\n        this.isCollapsed = false;\n        this.isCollapsing = false;\n        this.expands.emit(this);\n        this._isAnimationDone = false;\n        this.animationRun(this.isAnimated, this._EXPAND_ACTION_NAME)((/**\n         * @return {?}\n         */\n        () => {\n            this._isAnimationDone = true;\n            if (this.collapseNewValue !== this.isCollapsed && this.isAnimated) {\n                this.hide();\n                return;\n            }\n            this.expanded.emit(this);\n            this._renderer.removeStyle(this._el.nativeElement, 'overflow');\n        }));\n    }\n    /**\n     * @param {?} isAnimated\n     * @param {?} action\n     * @return {?}\n     */\n    animationRun(isAnimated, action) {\n        if (!isAnimated || !this._stylesLoaded) {\n            return (/**\n             * @param {?} callback\n             * @return {?}\n             */\n            (callback) => callback());\n        }\n        this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\n        this._renderer.addClass(this._el.nativeElement, 'collapse');\n        /** @type {?} */\n        const factoryAnimation = (action === this._EXPAND_ACTION_NAME)\n            ? this._factoryExpandAnimation\n            : this._factoryCollapseAnimation;\n        if (this._player) {\n            this._player.destroy();\n        }\n        this._player = factoryAnimation.create(this._el.nativeElement);\n        this._player.play();\n        return (/**\n         * @param {?} callback\n         * @return {?}\n         */\n        (callback) => this._player.onDone(callback));\n    }\n}\nCollapseDirective.ɵfac = function CollapseDirective_Factory(t) { return new (t || CollapseDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AnimationBuilder)); };\nCollapseDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CollapseDirective, selectors: [[\"\", \"collapse\", \"\"]], hostVars: 10, hostBindings: function CollapseDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-hidden\", ctx.isCollapsed);\n        ɵngcc0.ɵɵclassProp(\"collapse\", ctx.isCollapse)(\"in\", ctx.isExpanded)(\"show\", ctx.isExpanded)(\"collapsing\", ctx.isCollapsing);\n    } }, inputs: { isAnimated: \"isAnimated\", display: \"display\", collapse: \"collapse\" }, outputs: { collapsed: \"collapsed\", collapses: \"collapses\", expanded: \"expanded\", expands: \"expands\" }, exportAs: [\"bs-collapse\"] });\n/** @nocollapse */\nCollapseDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: AnimationBuilder }\n];\nCollapseDirective.propDecorators = {\n    collapsed: [{ type: Output }],\n    collapses: [{ type: Output }],\n    expanded: [{ type: Output }],\n    expands: [{ type: Output }],\n    isExpanded: [{ type: HostBinding, args: ['class.in',] }, { type: HostBinding, args: ['class.show',] }, { type: HostBinding, args: ['attr.aria-expanded',] }],\n    isCollapsed: [{ type: HostBinding, args: ['attr.aria-hidden',] }],\n    isCollapse: [{ type: HostBinding, args: ['class.collapse',] }],\n    isCollapsing: [{ type: HostBinding, args: ['class.collapsing',] }],\n    display: [{ type: Input }],\n    isAnimated: [{ type: Input }],\n    collapse: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CollapseDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[collapse]',\n                exportAs: 'bs-collapse',\n                host: {\n                    '[class.collapse]': 'true'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.AnimationBuilder }]; }, { collapsed: [{\n            type: Output\n        }], collapses: [{\n            type: Output\n        }], expanded: [{\n            type: Output\n        }], expands: [{\n            type: Output\n        }], isExpanded: [{\n            type: HostBinding,\n            args: ['class.in']\n        }, {\n            type: HostBinding,\n            args: ['class.show']\n        }, {\n            type: HostBinding,\n            args: ['attr.aria-expanded']\n        }], isCollapsed: [{\n            type: HostBinding,\n            args: ['attr.aria-hidden']\n        }], isCollapse: [{\n            type: HostBinding,\n            args: ['class.collapse']\n        }], isCollapsing: [{\n            type: HostBinding,\n            args: ['class.collapsing']\n        }], isAnimated: [{\n            type: Input\n        }], display: [{\n            type: Input\n        }], collapse: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * This event fires as soon as content collapses\n     * @type {?}\n     */\n    CollapseDirective.prototype.collapsed;\n    /**\n     * This event fires when collapsing is started\n     * @type {?}\n     */\n    CollapseDirective.prototype.collapses;\n    /**\n     * This event fires as soon as content becomes visible\n     * @type {?}\n     */\n    CollapseDirective.prototype.expanded;\n    /**\n     * This event fires when expansion is started\n     * @type {?}\n     */\n    CollapseDirective.prototype.expands;\n    /** @type {?} */\n    CollapseDirective.prototype.isExpanded;\n    /** @type {?} */\n    CollapseDirective.prototype.collapseNewValue;\n    /** @type {?} */\n    CollapseDirective.prototype.isCollapsed;\n    /** @type {?} */\n    CollapseDirective.prototype.isCollapse;\n    /** @type {?} */\n    CollapseDirective.prototype.isCollapsing;\n    /**\n     * turn on/off animation\n     * @type {?}\n     */\n    CollapseDirective.prototype.isAnimated;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._display;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._factoryCollapseAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._factoryExpandAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._isAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._player;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._stylesLoaded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._COLLAPSE_ACTION_NAME;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._EXPAND_ACTION_NAME;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._el;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CollapseModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: CollapseModule, providers: [] };\n    }\n}\nCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CollapseModule });\nCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CollapseModule_Factory(t) { return new (t || CollapseModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CollapseModule, { declarations: [CollapseDirective], exports: [CollapseDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CollapseModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CollapseDirective],\n                exports: [CollapseDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CollapseDirective, CollapseModule };\n\n//# sourceMappingURL=ngx-bootstrap-collapse.js.map","import { Injectable, ɵɵdefineInjectable, Component, Input, EventEmitter, Inject, Output, HostBinding, NgModule } from '@angular/core';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configuration service, provides default values for the AccordionComponent.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ngx-bootstrap/collapse';\n\nconst _c0 = [\"*\"];\nconst _c1 = function (a0) { return { \"text-muted\": a0 }; };\nfunction AccordionPanelComponent_button_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r0.isDisabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.heading, \" \");\n} }\nconst _c2 = [[[\"\", \"accordion-heading\", \"\"]], \"*\"];\nconst _c3 = [\"[accordion-heading]\", \"*\"];\nclass AccordionConfig {\n    constructor() {\n        /**\n         * Whether the other panels should be closed when a panel is opened\n         */\n        this.closeOthers = false;\n        /**\n         * turn on/off animation\n         */\n        this.isAnimated = false;\n    }\n}\nAccordionConfig.ɵfac = function AccordionConfig_Factory(t) { return new (t || AccordionConfig)(); };\n/** @nocollapse */ AccordionConfig.ɵprov = ɵɵdefineInjectable({ factory: function AccordionConfig_Factory() { return new AccordionConfig(); }, token: AccordionConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Whether the other panels should be closed when a panel is opened\n     * @type {?}\n     */\n    AccordionConfig.prototype.closeOthers;\n    /**\n     * turn on/off animation\n     * @type {?}\n     */\n    AccordionConfig.prototype.isAnimated;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Displays collapsible content panels for presenting information in a limited amount of space.\n */\nclass AccordionComponent {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        /**\n         * turn on/off animation\n         */\n        this.isAnimated = false;\n        this.groups = [];\n        Object.assign(this, config);\n    }\n    /**\n     * @param {?} openGroup\n     * @return {?}\n     */\n    closeOtherPanels(openGroup) {\n        if (!this.closeOthers) {\n            return;\n        }\n        this.groups.forEach((/**\n         * @param {?} group\n         * @return {?}\n         */\n        (group) => {\n            if (group !== openGroup) {\n                group.isOpen = false;\n            }\n        }));\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    addGroup(group) {\n        group.isAnimated = this.isAnimated;\n        this.groups.push(group);\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    removeGroup(group) {\n        /** @type {?} */\n        const index = this.groups.indexOf(group);\n        if (index !== -1) {\n            this.groups.splice(index, 1);\n        }\n    }\n}\nAccordionComponent.ɵfac = function AccordionComponent_Factory(t) { return new (t || AccordionComponent)(ɵngcc0.ɵɵdirectiveInject(AccordionConfig)); };\nAccordionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionComponent, selectors: [[\"accordion\"]], hostAttrs: [\"role\", \"tablist\", 1, \"panel-group\", 2, \"display\", \"block\"], hostVars: 1, hostBindings: function AccordionComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.closeOthers);\n    } }, inputs: { isAnimated: \"isAnimated\", closeOthers: \"closeOthers\" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AccordionComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nAccordionComponent.ctorParameters = () => [\n    { type: AccordionConfig }\n];\nAccordionComponent.propDecorators = {\n    isAnimated: [{ type: Input }],\n    closeOthers: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionComponent, [{\n        type: Component,\n        args: [{\n                selector: 'accordion',\n                template: `<ng-content></ng-content>`,\n                host: {\n                    '[attr.aria-multiselectable]': 'closeOthers',\n                    role: 'tablist',\n                    class: 'panel-group',\n                    style: 'display: block'\n                }\n            }]\n    }], function () { return [{ type: AccordionConfig }]; }, { isAnimated: [{\n            type: Input\n        }], closeOthers: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * turn on/off animation\n     * @type {?}\n     */\n    AccordionComponent.prototype.isAnimated;\n    /**\n     * if `true` expanding one item will close all others\n     * @type {?}\n     */\n    AccordionComponent.prototype.closeOthers;\n    /**\n     * @type {?}\n     * @protected\n     */\n    AccordionComponent.prototype.groups;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * ### Accordion heading\n * Instead of using `heading` attribute on the `accordion-group`, you can use\n * an `accordion-heading` attribute on `any` element inside of a group that\n * will be used as group's header template.\n */\nclass AccordionPanelComponent {\n    /**\n     * @param {?} accordion\n     */\n    constructor(accordion) {\n        /**\n         * turn on/off animation\n         */\n        this.isAnimated = false;\n        /**\n         * Emits when the opened state changes\n         */\n        this.isOpenChange = new EventEmitter();\n        this._isOpen = false;\n        this.accordion = accordion;\n    }\n    // Questionable, maybe .panel-open should be on child div.panel element?\n    /**\n     * Is accordion group open or closed. This property supports two-way binding\n     * @return {?}\n     */\n    get isOpen() {\n        return this._isOpen;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isOpen(value) {\n        if (value !== this.isOpen) {\n            if (value) {\n                this.accordion.closeOtherPanels(this);\n            }\n            this._isOpen = value;\n            Promise.resolve(null).then((/**\n             * @return {?}\n             */\n            () => {\n                this.isOpenChange.emit(value);\n            }))\n                .catch((/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                /* tslint:disable: no-console */\n                console.log(error);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isBs3() {\n        return isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.panelClass = this.panelClass || 'panel-default';\n        this.accordion.addGroup(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.accordion.removeGroup(this);\n    }\n    /**\n     * @return {?}\n     */\n    toggleOpen() {\n        if (!this.isDisabled) {\n            this.isOpen = !this.isOpen;\n        }\n    }\n}\nAccordionPanelComponent.ɵfac = function AccordionPanelComponent_Factory(t) { return new (t || AccordionPanelComponent)(ɵngcc0.ɵɵdirectiveInject(AccordionComponent)); };\nAccordionPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionPanelComponent, selectors: [[\"accordion-group\"], [\"accordion-panel\"]], hostAttrs: [1, \"panel\", 2, \"display\", \"block\"], hostVars: 2, hostBindings: function AccordionPanelComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"panel-open\", ctx.isOpen);\n    } }, inputs: { isOpen: \"isOpen\", panelClass: \"panelClass\", heading: \"heading\", isDisabled: \"isDisabled\" }, outputs: { isOpenChange: \"isOpenChange\" }, ngContentSelectors: _c3, decls: 9, vars: 6, consts: [[1, \"panel\", \"card\", 3, \"ngClass\"], [\"role\", \"tab\", 1, \"panel-heading\", \"card-header\", 3, \"ngClass\", \"click\"], [1, \"panel-title\"], [\"role\", \"button\", 1, \"accordion-toggle\"], [\"class\", \"btn btn-link\", \"type\", \"button\", 3, \"ngClass\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 1, \"panel-collapse\", \"collapse\", 3, \"collapse\", \"isAnimated\"], [1, \"panel-body\", \"card-block\", \"card-body\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"ngClass\"]], template: function AccordionPanelComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function AccordionPanelComponent_Template_div_click_1_listener() { return ctx.toggleOpen(); });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, AccordionPanelComponent_button_4_Template, 2, 4, \"button\", 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"div\", 6);\n        ɵngcc0.ɵɵprojection(8, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.panelClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.isDisabled ? \"panel-disabled\" : \"panel-enabled\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isOpen);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.heading);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"collapse\", !ctx.isOpen)(\"isAnimated\", ctx.isAnimated);\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc2.CollapseDirective], styles: [\"[_nghost-%COMP%]   .card-header.panel-enabled[_ngcontent-%COMP%]{cursor:pointer}[_nghost-%COMP%]   .card-header.panel-disabled[_ngcontent-%COMP%]   .btn.btn-link[_ngcontent-%COMP%]{cursor:default;text-decoration:none}\"] });\n/** @nocollapse */\nAccordionPanelComponent.ctorParameters = () => [\n    { type: AccordionComponent, decorators: [{ type: Inject, args: [AccordionComponent,] }] }\n];\nAccordionPanelComponent.propDecorators = {\n    heading: [{ type: Input }],\n    panelClass: [{ type: Input }],\n    isDisabled: [{ type: Input }],\n    isOpenChange: [{ type: Output }],\n    isOpen: [{ type: HostBinding, args: ['class.panel-open',] }, { type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionPanelComponent, [{\n        type: Component,\n        args: [{\n                selector: 'accordion-group, accordion-panel',\n                template: \"<div class=\\\"panel card\\\" [ngClass]=\\\"panelClass\\\">\\n  <div\\n    class=\\\"panel-heading card-header\\\"\\n    role=\\\"tab\\\"\\n    (click)=\\\"toggleOpen()\\\"\\n    [ngClass]=\\\"isDisabled ? 'panel-disabled' : 'panel-enabled'\\\"\\n  >\\n    <div class=\\\"panel-title\\\">\\n      <div role=\\\"button\\\" class=\\\"accordion-toggle\\\" [attr.aria-expanded]=\\\"isOpen\\\">\\n        <button class=\\\"btn btn-link\\\" *ngIf=\\\"heading\\\" [ngClass]=\\\"{ 'text-muted': isDisabled }\\\" type=\\\"button\\\">\\n          {{ heading }}\\n        </button>\\n        <ng-content select=\\\"[accordion-heading]\\\"></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" [collapse]=\\\"!isOpen\\\" [isAnimated]=\\\"isAnimated\\\">\\n    <div class=\\\"panel-body card-block card-body\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    class: 'panel',\n                    style: 'display: block'\n                },\n                styles: [\":host .card-header.panel-enabled{cursor:pointer}:host .card-header.panel-disabled .btn.btn-link{cursor:default;text-decoration:none}\"]\n            }]\n    }], function () { return [{ type: AccordionComponent, decorators: [{\n                type: Inject,\n                args: [AccordionComponent]\n            }] }]; }, { isOpenChange: [{\n            type: Output\n        }], isOpen: [{\n            type: HostBinding,\n            args: ['class.panel-open']\n        }, {\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], heading: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * turn on/off animation\n     * @type {?}\n     */\n    AccordionPanelComponent.prototype.isAnimated;\n    /**\n     * Clickable text in accordion's group header, check `accordion heading` below for using html in header\n     * @type {?}\n     */\n    AccordionPanelComponent.prototype.heading;\n    /**\n     * Provides an ability to use Bootstrap's contextual panel classes\n     * (`panel-primary`, `panel-success`, `panel-info`, etc...).\n     * List of all available classes [available here]\n     * (https://getbootstrap.com/docs/3.3/components/#panels-alternatives)\n     * @type {?}\n     */\n    AccordionPanelComponent.prototype.panelClass;\n    /**\n     * if <code>true</code> — disables accordion group\n     * @type {?}\n     */\n    AccordionPanelComponent.prototype.isDisabled;\n    /**\n     * Emits when the opened state changes\n     * @type {?}\n     */\n    AccordionPanelComponent.prototype.isOpenChange;\n    /**\n     * @type {?}\n     * @protected\n     */\n    AccordionPanelComponent.prototype._isOpen;\n    /**\n     * @type {?}\n     * @protected\n     */\n    AccordionPanelComponent.prototype.accordion;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AccordionModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: AccordionModule, providers: [] };\n    }\n}\nAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AccordionModule });\nAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AccordionModule_Factory(t) { return new (t || AccordionModule)(); }, imports: [[CommonModule, CollapseModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AccordionModule, { declarations: function () { return [AccordionComponent, AccordionPanelComponent]; }, imports: function () { return [CommonModule, CollapseModule]; }, exports: function () { return [AccordionComponent, AccordionPanelComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CollapseModule],\n                declarations: [AccordionComponent, AccordionPanelComponent],\n                exports: [AccordionComponent, AccordionPanelComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AccordionComponent, AccordionConfig, AccordionModule, AccordionPanelComponent };\n\n//# sourceMappingURL=ngx-bootstrap-accordion.js.map","\r\n<div>\r\n  <div class=\"p-3\">\r\n    <h3>Messages</h3>\r\n  </div>\r\n  <div *ngIf=\"paginatedMessages?.length > 0\">\r\n    <accordion [isAnimated]='true' [closeOthers]=\"true\">\r\n      <accordion-group *ngFor = \"let serviceData of paginatedMessages; let i = index;\" (isOpenChange)=\"onSelectOfMessageList(serviceData, i, $event)\">\r\n        <button class=\"btn btn-link btn-block clearfix\" accordion-heading type=\"button\" >\r\n          <div class=\"pull-left float-left\">{{'Message - '+ (emailDetailsResponse?.serviceData?.length - (startIndx +i)) }}</div>\r\n          <div class=\"float-right pull-right\">{{serviceData?.emailDate}}</div>\r\n        </button>\r\n        <div *ngIf=\"!serviceData?.message || serviceData?.message?.length === 0\">Loading, Please wait!!!.</div>\r\n        <div *ngIf=\"serviceData?.message?.length > 0\"  class=\"bg-light border p-3 rounded\">\r\n          <div *ngFor=\"let field of serviceData?.message\">\r\n            <div> \r\n              <strong>{{field?.label}}:</strong>\r\n              <span *ngIf=\"field?.type!=='textarea'\"> &nbsp;{{field?.value}}</span>\r\n            </div>\r\n            <div *ngIf=\"field?.type==='textarea'\">{{field?.value}}</div>\r\n          </div>\r\n        </div>\r\n      </accordion-group>\r\n    </accordion>\r\n    <div class=\"text-center pagination-container p-3\">\r\n      <pagination [totalItems]=\"emailDetailsResponse?.serviceData?.length\" [itemsPerPage]=\"itemsPerPage\" [maxSize]=\"5\" (pageChanged)=\"pageChanged($event)\" [(ngModel)]=\"currentpage\"></pagination>\r\n    </div>\r\n  </div>\r\n  <div class=\"text-center p-3\" *ngIf=\"paginatedMessages?.length === 0\">\r\n    <span class=\"material-icons-outlined\">error</span> &nbsp; No Message found.\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- <div *ngIf=\"messageList\" class=\"col-lg-11 site-list\">\r\n  <div class=\"site-table\">\r\n    <div class=\"tab-content\">\r\n      <div id=\"published\" class=\"tab-pane active\"><br>\r\n        <div class=\"ti-responsive-table\">\r\n          <table>\r\n            <tbody>\r\n              <tr *ngFor = \"let serviceData of emailDetailsResponse?.serviceData; let i = index;\"\r\n                (click) = \"onSelectOfMessageList(serviceData)\"\r\n              >\r\n                <td data-label=\"Site\" class=\"site-name\">{{serviceData?.senderName}}</td>\r\n                <td data-label=\"Date Created\">{{serviceData?.subject}}</td>\r\n                <td data-label=\"Icons\" class=\"act-btns\">{{serviceData?.emailDate}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div style=\"height: 100px; width: 100%;\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"message\">\r\n  <div class=\"ti-responsive-table\">\r\n    <table>\r\n      <tbody>\r\n        <tr >\r\n          <td data-label=\"Site\" class=\"site-name\">{{selectedMessage?.serviceData?.profileData?.name}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div style=\"height: 100px; width: 100%;\"></div>\r\n  </div>\r\n</div> -->\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MessagesComponent } from './messages.component';\r\n\r\nconst routes: Routes = [{ path: '', component: MessagesComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MessagesRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MessagesService} from \"../messages/messages.service\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EmailDetailsResponse } from './messages-types/emailDetailsResponse';\r\nimport { EmailDetailsDto } from './messages-types/emailDetailsDto';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  serviceData = \"Test serviceData\";\r\n  emailDetailsResponse: any = [];//EmailDetailsResponse =<EmailDetailsResponse>{};\r\n  selectedMessage: any;//EmailDetailsDto =<EmailDetailsDto> {};\r\n  profileName:any = \"\";\r\n  paginatedMessages:any = [];\r\n  currentpage:any = 1;\r\n  startIndx:any = 0;\r\n  endIndx:any = 0;\r\n  itemsPerPage:any = 10;\r\n  constructor(\r\n    public messageService: MessagesService,\r\n    public toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const routeParams = this.route.snapshot.paramMap;\r\n    this.profileName = routeParams.get('Id') as string;\r\n    this.loadInbox();\r\n  }\r\n  \r\n  pageChanged(event: PageChangedEvent): void {\r\n    this.startIndx = (event.page - 1) * this.itemsPerPage;\r\n    this.endIndx  = event.page * this.itemsPerPage;\r\n    if (this.emailDetailsResponse && this.emailDetailsResponse.serviceData) {\r\n      this.paginatedMessages = this.emailDetailsResponse.serviceData.slice(this.startIndx, this.endIndx);\r\n    }\r\n  }\r\n  \r\n  loadInbox(){\r\n    this.messageService.loadMessageList(this.profileName)\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        if(res.error && res.error.responseCode == 0){\r\n          this.emailDetailsResponse = res;\r\n          if (this.emailDetailsResponse && this.emailDetailsResponse.serviceData) {\r\n\r\n            this.emailDetailsResponse.serviceData = this.emailDetailsResponse.serviceData.sort((a:any,b:any)=> {\r\n              return a.contactId>b.contactId? -1 : 1; \r\n            });\r\n\r\n            this.paginatedMessages = this.emailDetailsResponse.serviceData.slice(0, this.itemsPerPage);\r\n          }\r\n        } else {\r\n          if (res.error) {\r\n              if (res.error.businessValidation.length > 0) {\r\n                  for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                      this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                  }\r\n              }\r\n  \r\n              if (res.error.dataValidation.length > 0) {\r\n                  for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                      this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                  }\r\n              }\r\n          } else if (res.responseCode == -1) {\r\n              this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      });\r\n  }\r\n\r\n  onSelectOfMessageList(emailDetils : EmailDetailsDto, indx: any, event: boolean){\r\n\r\n    const mIndx = this.startIndx+indx;\r\n    if (this.emailDetailsResponse && this.emailDetailsResponse.serviceData[mIndx]) {\r\n      if (!this.emailDetailsResponse.serviceData[mIndx].message) {\r\n        this.messageService.loadMessage(emailDetils.contactId)\r\n          .subscribe((res:any) =>{\r\n            console.log(res);\r\n            if(res.error && res.error.responseCode == 0){\r\n              this.emailDetailsResponse.serviceData[mIndx].message = res.serviceData.profileData.message;\r\n\r\n            } else {\r\n              if (res.error) {\r\n                  if (res.error.businessValidation.length > 0) {\r\n                      for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                          this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                      }\r\n                  }\r\n                  if (res.error.dataValidation.length > 0) {\r\n                      for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                          this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                      }\r\n                  }\r\n              } else if (res.responseCode == -1) {\r\n                  this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n              }\r\n            }\r\n        }, (err: any) => {\r\n          this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MessagesRoutingModule } from './messages-routing.module';\r\nimport { MessagesComponent } from './messages.component';\r\nimport { MessagesService } from './messages.service';\r\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [MessagesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MessagesRoutingModule,\r\n    AccordionModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [MessagesService]\r\n})\r\nexport class MessagesModule { }\r\n","import { isDevMode } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nclass Trigger {\n    /**\n     * @param {?} open\n     * @param {?=} close\n     */\n    constructor(open, close) {\n        this.open = open;\n        this.close = close || open;\n    }\n    /**\n     * @return {?}\n     */\n    isManual() {\n        return this.open === 'manual' || this.close === 'manual';\n    }\n}\nif (false) {\n    /** @type {?} */\n    Trigger.prototype.open;\n    /** @type {?} */\n    Trigger.prototype.close;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ListenOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    ListenOptions.prototype.target;\n    /** @type {?|undefined} */\n    ListenOptions.prototype.targets;\n    /** @type {?|undefined} */\n    ListenOptions.prototype.triggers;\n    /** @type {?|undefined} */\n    ListenOptions.prototype.outsideClick;\n    /** @type {?|undefined} */\n    ListenOptions.prototype.outsideEsc;\n    /** @type {?|undefined} */\n    ListenOptions.prototype.show;\n    /** @type {?|undefined} */\n    ListenOptions.prototype.hide;\n    /** @type {?|undefined} */\n    ListenOptions.prototype.toggle;\n}\n/** @type {?} */\nconst DEFAULT_ALIASES = {\n    hover: ['mouseover', 'mouseout'],\n    focus: ['focusin', 'focusout']\n};\n/* tslint:disable-next-line: no-any */\n/**\n * @param {?} triggers\n * @param {?=} aliases\n * @return {?}\n */\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n    /** @type {?} */\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    /** @type {?} */\n    const parsedTriggers = trimmedTriggers\n        .split(/\\s+/)\n        .map((/**\n     * @param {?} trigger\n     * @return {?}\n     */\n    (trigger) => trigger.split(':')))\n        .map((/**\n     * @param {?} triggerPair\n     * @return {?}\n     */\n    (triggerPair) => {\n        /** @type {?} */\n        const alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    }));\n    /** @type {?} */\n    const manualTriggers = parsedTriggers.filter((/**\n     * @param {?} triggerPair\n     * @return {?}\n     */\n    (triggerPair) => triggerPair.isManual()));\n    if (manualTriggers.length > 1) {\n        throw new Error('Triggers parse error: only one manual trigger is allowed');\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n    }\n    return parsedTriggers;\n}\n/**\n * @param {?} renderer\n * @param {?} target\n * @param {?} triggers\n * @param {?} showFn\n * @param {?} hideFn\n * @param {?} toggleFn\n * @return {?}\n */\nfunction listenToTriggers(renderer, \n/* tslint:disable-next-line: no-any */\ntarget, triggers, showFn, hideFn, toggleFn) {\n    /** @type {?} */\n    const parsedTriggers = parseTriggers(triggers);\n    /* tslint:disable-next-line: no-any */\n    /** @type {?} */\n    const listeners = [];\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return Function.prototype;\n    }\n    parsedTriggers.forEach((/**\n     * @param {?} trigger\n     * @return {?}\n     */\n    (trigger) => {\n        if (trigger.open === trigger.close) {\n            listeners.push(renderer.listen(target, trigger.open, toggleFn));\n            return;\n        }\n        listeners.push(renderer.listen(target, trigger.open, showFn), renderer.listen(target, trigger.close, hideFn));\n    }));\n    return (/**\n     * @return {?}\n     */\n    () => {\n        listeners.forEach((/**\n         * @param {?} unsubscribeFn\n         * @return {?}\n         */\n        (unsubscribeFn) => unsubscribeFn()));\n    });\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\nfunction listenToTriggersV2(renderer, options) {\n    /** @type {?} */\n    const parsedTriggers = parseTriggers(options.triggers);\n    /** @type {?} */\n    const target = options.target;\n    // do nothing\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return Function.prototype;\n    }\n    // all listeners\n    /* tslint:disable-next-line: no-any */\n    /** @type {?} */\n    const listeners = [];\n    // lazy listeners registration\n    /** @type {?} */\n    const _registerHide = [];\n    /** @type {?} */\n    const registerHide = (/**\n     * @return {?}\n     */\n    () => {\n        // add hide listeners to unregister array\n        _registerHide.forEach((/**\n         * @param {?} fn\n         * @return {?}\n         */\n        (fn) => listeners.push(fn())));\n        // register hide events only once\n        _registerHide.length = 0;\n    });\n    // register open\\close\\toggle listeners\n    parsedTriggers.forEach((/**\n     * @param {?} trigger\n     * @return {?}\n     */\n    (trigger) => {\n        /** @type {?} */\n        const useToggle = trigger.open === trigger.close;\n        /** @type {?} */\n        const showFn = useToggle ? options.toggle : options.show;\n        if (!useToggle) {\n            _registerHide.push((/**\n             * @return {?}\n             */\n            () => renderer.listen(target, trigger.close, options.hide)));\n        }\n        listeners.push(renderer.listen(target, trigger.open, (/**\n         * @return {?}\n         */\n        () => showFn(registerHide))));\n    }));\n    return (/**\n     * @return {?}\n     */\n    () => {\n        listeners.forEach((/**\n         * @param {?} unsubscribeFn\n         * @return {?}\n         */\n        (unsubscribeFn) => unsubscribeFn()));\n    });\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\nfunction registerOutsideClick(renderer, options) {\n    if (!options.outsideClick) {\n        return Function.prototype;\n    }\n    /* tslint:disable-next-line: no-any */\n    return renderer.listen('document', 'click', (/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => {\n        if (options.target && options.target.contains(event.target)) {\n            return undefined;\n        }\n        if (options.targets &&\n            options.targets.some((/**\n             * @param {?} target\n             * @return {?}\n             */\n            target => target.contains(event.target)))) {\n            return undefined;\n        }\n        options.hide();\n    }));\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\nfunction registerEscClick(renderer, options) {\n    if (!options.outsideEsc) {\n        return Function.prototype;\n    }\n    return renderer.listen('document', 'keyup.esc', (/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => {\n        if (options.target && options.target.contains(event.target)) {\n            return undefined;\n        }\n        if (options.targets &&\n            options.targets.some((/**\n             * @param {?} target\n             * @return {?}\n             */\n            target => target.contains(event.target)))) {\n            return undefined;\n        }\n        options.hide();\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * JS version of browser APIs. This library can only run in the browser.\n * @type {?}\n */\nconst win = (typeof window !== 'undefined' && window) || (/** @type {?} */ ({}));\n/** @type {?} */\nconst document$1 = win.document;\n/** @type {?} */\nconst location = win.location;\n/** @type {?} */\nconst gc = win.gc ? (/**\n * @return {?}\n */\n() => win.gc()) : (/**\n * @return {?}\n */\n() => null);\n/** @type {?} */\nconst performance = win.performance ? win.performance : null;\n/** @type {?} */\nconst Event = win.Event;\n/** @type {?} */\nconst MouseEvent = win.MouseEvent;\n/** @type {?} */\nconst KeyboardEvent = win.KeyboardEvent;\n/** @type {?} */\nconst EventTarget = win.EventTarget;\n/** @type {?} */\nconst History = win.History;\n/** @type {?} */\nconst Location = win.Location;\n/** @type {?} */\nconst EventListener = win.EventListener;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet guessedVersion;\n/**\n * @return {?}\n */\nfunction _guessBsVersion() {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    /** @type {?} */\n    const spanEl = document.createElement('span');\n    spanEl.innerText = 'test bs version';\n    document.body.appendChild(spanEl);\n    spanEl.classList.add('d-none');\n    /** @type {?} */\n    const rect = spanEl.getBoundingClientRect();\n    document.body.removeChild(spanEl);\n    if (!rect) {\n        return 'bs3';\n    }\n    return rect.top === 0 ? 'bs4' : 'bs3';\n}\n/**\n * @param {?} theme\n * @return {?}\n */\nfunction setTheme(theme) {\n    guessedVersion = theme;\n}\n// todo: in ngx-bootstrap, bs4 will became a default one\n/**\n * @return {?}\n */\nfunction isBs3() {\n    if (typeof win === 'undefined') {\n        return true;\n    }\n    if (typeof win.__theme === 'undefined') {\n        if (guessedVersion) {\n            return guessedVersion === 'bs3';\n        }\n        guessedVersion = _guessBsVersion();\n        return guessedVersion === 'bs3';\n    }\n    return win.__theme !== 'bs4';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass LinkedList {\n    constructor() {\n        this.length = 0;\n        this.asArray = [];\n        // Array methods overriding END\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    get(position) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            return void 0;\n        }\n        /** @type {?} */\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = current.next;\n        }\n        return current.value;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} position\n     * @return {?}\n     */\n    add(value, position = this.length) {\n        if (position < 0 || position > this.length) {\n            throw new Error('Position is out of the list');\n        }\n        /* tslint:disable-next-line: no-any*/\n        /** @type {?} */\n        const node = {\n            value,\n            next: undefined,\n            previous: undefined\n        };\n        if (this.length === 0) {\n            this.head = node;\n            this.tail = node;\n            this.current = node;\n        }\n        else {\n            if (position === 0) {\n                // first node\n                node.next = this.head;\n                this.head.previous = node;\n                this.head = node;\n            }\n            else if (position === this.length) {\n                // last node\n                this.tail.next = node;\n                node.previous = this.tail;\n                this.tail = node;\n            }\n            else {\n                // node in middle\n                /** @type {?} */\n                const currentPreviousNode = this.getNode(position - 1);\n                /** @type {?} */\n                const currentNextNode = currentPreviousNode.next;\n                currentPreviousNode.next = node;\n                currentNextNode.previous = node;\n                node.previous = currentPreviousNode;\n                node.next = currentNextNode;\n            }\n        }\n        this.length++;\n        this.createInternalArrayRepresentation();\n    }\n    /**\n     * @param {?=} position\n     * @return {?}\n     */\n    remove(position = 0) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        if (position === 0) {\n            // first node\n            this.head = this.head.next;\n            if (this.head) {\n                // there is no second node\n                this.head.previous = undefined;\n            }\n            else {\n                // there is no second node\n                this.tail = undefined;\n            }\n        }\n        else if (position === this.length - 1) {\n            // last node\n            this.tail = this.tail.previous;\n            this.tail.next = undefined;\n        }\n        else {\n            // middle node\n            /** @type {?} */\n            const removedNode = this.getNode(position);\n            removedNode.next.previous = removedNode.previous;\n            removedNode.previous.next = removedNode.next;\n        }\n        this.length--;\n        this.createInternalArrayRepresentation();\n    }\n    /**\n     * @param {?} position\n     * @param {?} value\n     * @return {?}\n     */\n    set(position, value) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        /** @type {?} */\n        const node = this.getNode(position);\n        node.value = value;\n        this.createInternalArrayRepresentation();\n    }\n    /**\n     * @return {?}\n     */\n    toArray() {\n        return this.asArray;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    findAll(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /* tslint:disable-next-line: no-any*/\n        /** @type {?} */\n        const result = [];\n        for (let index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result.push({ index, value: current.value });\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    // Array methods overriding start\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    push(...args) {\n        /* tslint:disable-next-line: no-any*/\n        args.forEach((/**\n         * @param {?} arg\n         * @return {?}\n         */\n        (arg) => {\n            this.add(arg);\n        }));\n        return this.length;\n    }\n    /**\n     * @return {?}\n     */\n    pop() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        /** @type {?} */\n        const last = this.tail;\n        this.remove(this.length - 1);\n        return last.value;\n    }\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    unshift(...args) {\n        args.reverse();\n        /* tslint:disable-next-line: no-any*/\n        args.forEach((/**\n         * @param {?} arg\n         * @return {?}\n         */\n        (arg) => {\n            this.add(arg, 0);\n        }));\n        return this.length;\n    }\n    /**\n     * @return {?}\n     */\n    shift() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        /** @type {?} */\n        const lastItem = this.head.value;\n        this.remove();\n        return lastItem;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        /** @type {?} */\n        let current = this.head;\n        for (let index = 0; index < this.length; index++) {\n            fn(current.value, index);\n            current = current.next;\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    indexOf(value) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let position = 0;\n        for (let index = 0; index < this.length; index++) {\n            if (current.value === value) {\n                position = index;\n                break;\n            }\n            current = current.next;\n        }\n        return position;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    some(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let result = false;\n        while (current && !result) {\n            if (fn(current.value)) {\n                result = true;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    every(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let result = true;\n        while (current && result) {\n            if (!fn(current.value)) {\n                result = false;\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return '[Linked List]';\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    find(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let result;\n        for (let index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result = current.value;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    findIndex(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let result;\n        for (let index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result = index;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @protected\n     * @param {?} position\n     * @return {?}\n     */\n    getNode(position) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        /** @type {?} */\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = current.next;\n        }\n        return current;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    createInternalArrayRepresentation() {\n        /* tslint:disable-next-line: no-any*/\n        /** @type {?} */\n        const outArray = [];\n        /** @type {?} */\n        let current = this.head;\n        while (current) {\n            outArray.push(current.value);\n            current = current.next;\n        }\n        this.asArray = outArray;\n    }\n}\nif (false) {\n    /** @type {?} */\n    LinkedList.prototype.length;\n    /**\n     * @type {?}\n     * @protected\n     */\n    LinkedList.prototype.head;\n    /**\n     * @type {?}\n     * @protected\n     */\n    LinkedList.prototype.tail;\n    /**\n     * @type {?}\n     * @protected\n     */\n    LinkedList.prototype.current;\n    /**\n     * @type {?}\n     * @protected\n     */\n    LinkedList.prototype.asArray;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/*tslint:disable:no-invalid-this */\n/* tslint:disable-next-line: no-any */\n/**\n * @param {?=} defaultValue\n * @return {?}\n */\nfunction OnChange(defaultValue) {\n    /** @type {?} */\n    const sufix = 'Change';\n    /* tslint:disable-next-line: no-any */\n    return (/**\n     * @param {?} target\n     * @param {?} propertyKey\n     * @return {?}\n     */\n    function OnChangeHandler(target, propertyKey) {\n        /** @type {?} */\n        const _key = ` __${propertyKey}Value`;\n        Object.defineProperty(target, propertyKey, {\n            /* tslint:disable-next-line: no-any */\n            /**\n             * @return {?}\n             */\n            get() {\n                return this[_key];\n            },\n            /* tslint:disable-next-line: no-any */\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set(value) {\n                /** @type {?} */\n                const prevValue = this[_key];\n                this[_key] = value;\n                if (prevValue !== value && this[propertyKey + sufix]) {\n                    this[propertyKey + sufix].emit(value);\n                }\n            }\n        });\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Utils {\n    /* tslint:disable-next-line: no-any */\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    static reflow(element) {\n        /* tslint:disable-next-line: no-any */\n        ((/**\n         * @param {?} bs\n         * @return {?}\n         */\n        (bs) => bs))(element.offsetHeight);\n    }\n    // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n    /* tslint:disable-next-line: no-any */\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    static getStyles(elem) {\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n        // IE throws on elements created in popups\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n        /** @type {?} */\n        let view = elem.ownerDocument.defaultView;\n        if (!view || !view.opener) {\n            view = win;\n        }\n        return view.getComputedStyle(elem);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _messagesHash = {};\n/** @type {?} */\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction warnOnce(msg) {\n    if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n        return;\n    }\n    _messagesHash[msg] = true;\n    /*tslint:disable-next-line*/\n    console.warn(msg);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { LinkedList, OnChange, Trigger, Utils, document$1 as document, isBs3, listenToTriggers, listenToTriggersV2, parseTriggers, registerEscClick, registerOutsideClick, setTheme, warnOnce, win as window };\n\n//# sourceMappingURL=ngx-bootstrap-utils.js.map"],"sourceRoot":"webpack:///"}