{"version":3,"sources":["./src/app/user-access-mgmt/create-group/create-group.component.html","./src/app/user-access-mgmt/create-group/create-group-routing.module.ts","./src/app/user-access-mgmt/create-group/create-group.component.ts","./src/app/user-access-mgmt/create-group/create-group.module.ts"],"names":["routes","path","component","CreateGroupComponent","uamService","toastr","route","router","config","categoryList","groupList","menuDetailsResponse","menuDetailsResponse4Group","currentUserRole","isCategoryRoleSelected","isCreateButtonEnabled","isAssignRightsCard","isRightsSelected","isCategoryCodeSelected","isViewAssignRightsCard","isModifyCategory","isAddCategory","isGroupCodeSelected","header","isRecordConfirmed","confirmMessage","routerLink","groupMaster","groupCode","createGroup","serviceData","groupName","groupDesc","categoryCode","categoryRole","menuId","console","log","this","params","subscribe","queryParams","ibssApp","localStorage","getItem","userRoles","JSON","parse","token","roleType","length","toggleLoader","fetchCategories","res","error","responseCode","businessValidation","i","errorDesc","dataValidation","err","fetchCategoriesRights","menu","onSelectGroupCode","fetchCategoryRights","fetchGroups","rights","forEach","selected","push","subMenu","fetchGroupRights","groupMenu","categoryMenu","groupSubMenu","categorySubMenu","currentUrl","url","navigateByUrl","skipLocationChange","then","navigate","CreateGroupRoutingModule","forChild","CreateGroupModule"],"mappings":"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","file":"user-access-mgmt-create-group-create-group-module.45414cde45b3763d27dd.js","sourcesContent":["<div class=\"row justify-content-center\" *ngIf=\"!isRecordConfirmed\">\r\n    <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">{{header}}</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-sm-12\" *ngIf=\"isAddCategory\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-4 col-form-label\">Group Code</label>\r\n                            <div class=\"col-sm-12 col-lg-8\">\r\n                                <input type=\"text\" name=\"groupCode\" id=\"groupCode\" class=\"form-control\" \r\n                                required minlength=\"7\" maxlength=\"7\" [(ngModel)] =\"createGroup.serviceData.groupCode\" \r\n                                 placeholder=\"Group Code\" #groupCode=\"ngModel\">\r\n                            </div>\r\n                            <div *ngIf=\"groupCode.invalid && groupCode.touched\"\r\n                            class=\"alert text-danger\">\r\n                                <div *ngIf=\"groupCode.errors?.required\">\r\n                                    Group Code is required.\r\n                                </div>\r\n                                <div *ngIf=\"groupCode.errors?.minlength\">\r\n                                    Group Code must be at least 7 characters long.\r\n                                </div>\r\n                                <div *ngIf=\"groupCode.errors?.maxlength\">\r\n                                    Group Code should not be more then 7 characters long.\r\n                                </div>                           \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-sm-12\" *ngIf=\"isAddCategory\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-4 col-form-label\">Group Name</label>\r\n                            <div class=\"col-sm-12 col-lg-8\">\r\n                                <input type=\"\" class=\"form-control\" id=\"groupName\" name=\"groupName\"\r\n                                required minlength=\"3\" maxlength=\"20\" [(ngModel)] =\"createGroup.serviceData.groupName\"  \r\n                                placeholder=\"Group Name\" #groupName=\"ngModel\">\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"groupName.invalid && groupName.touched\"\r\n                                class=\"alert text-danger\">\r\n                            <div *ngIf=\"groupName.errors?.required\">\r\n                                Group Name is required.\r\n                            </div>\r\n                            <div *ngIf=\"groupName.errors?.minlength\">\r\n                                Group Name must be at least 3 characters long.\r\n                            </div>\r\n                            <div *ngIf=\"groupName.errors?.maxlength\">\r\n                                Group Name should not be more then 20 characters long.\r\n                            </div>                           \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-12 col-sm-12\" *ngIf=\"isAddCategory\">\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-12 col-lg-2 col-form-label\">Group Desc</label>\r\n                            <div class=\"col-sm-12 col-lg-10\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"groupDesc\" name=\"groupDesc\"\r\n                                required minlength=\"3\" maxlength=\"50\" [(ngModel)] =\"createGroup.serviceData.groupDesc\" \r\n                                placeholder=\"Group Desc\" #groupDesc=\"ngModel\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-12 col-lg-4 col-form-label\">Category Role</label>\r\n                            <div class=\"col-sm-12 col-lg-8\" *ngFor=\"let manager of userRoles.rolesManager\">\r\n                                <select  *ngIf=\"currentUserRole == manager.managerRole\"\r\n                                class=\"form-control\" id=\"categoryRole\" name=\"categoryRole\"\r\n                                [(ngModel)] =\"createGroup.serviceData.categoryRole\" #categoryRole=\"ngModel\" (change) = \"onSelectingRoles()\"\r\n                                >\r\n                                    <option selected value=\"\">Category Role</option>\r\n                                    <option *ngFor = \"let roles of manager.rolesManaging\" [value]=roles.role>{{roles.desc}}</option>\r\n                                </select>                                                      \r\n                            </div>\r\n                            <div class=\"alert text-danger\" *ngIf=\"!isCategoryRoleSelected\">\r\n                                Please select Role to Create Category.\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\" *ngIf=\"categoryList.length>0\">\r\n                            <label class=\"col-sm-12 col-lg-4 col-form-label\">Category Code</label>\r\n                            <div class=\"col-sm-12 col-lg-8\">\r\n                                <select  class=\"form-control\" id=\"categoryCode\" name=\"categoryCode\"\r\n                                [(ngModel)] =\"createGroup.serviceData.categoryCode\" #categoryCodee=\"ngModel\" (change) = \"onSelectCategoryCode()\"\r\n                                >\r\n                                    <option selected value=\"\">Category Code</option>\r\n                                    <option *ngFor = \"let categoryCodeLst of categoryList\" [value]=categoryCodeLst.categoryCode>{{categoryCodeLst.categoryName}}</option>\r\n                                </select>                                                      \r\n                            </div>\r\n                            <div class=\"alert text-danger\" *ngIf=\"isCategoryCodeSelected\">\r\n                                Please select category code to Create Group.\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\" *ngIf=\"groupList.length>0\">\r\n                            <label class=\"col-sm-12 col-lg-4 col-form-label\">Group Code</label>\r\n                            <div class=\"col-sm-12 col-lg-8\">\r\n                                <select  class=\"form-control\" id=\"groupCode\" name=\"groupCode\"\r\n                                [(ngModel)] =\"groupMaster.groupCode\" #groupCode=\"ngModel\" (change) = \"fetchCategoryRights()\"\r\n                                >\r\n                                    <option selected value=\"\">Group Code</option>\r\n                                    <option *ngFor = \"let groupCodeLst of groupList\" [value]=groupCodeLst.groupCode>{{groupCodeLst.groupName}}</option>\r\n                                </select>                                                      \r\n                            </div>\r\n                            <div class=\"alert text-danger\" *ngIf=\"isGroupCodeSelected\">\r\n                                Please select group code to Search.\r\n                            </div>  \r\n                        </div>\r\n                    </div>                \r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\" *ngIf=\"isCreateButtonEnabled\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">Cancel</button>                        \r\n                    </div>                      \r\n                    <div class=\"col-xl-1 col-md-2 col-sm-12\" *ngIf=\"isAddCategory\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"onCreate()\">Create</button>\r\n                    </div>                         \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-12 col-sm-12\" *ngIf=\"isAssignRightsCard\">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">Assign Category Rights</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-md-6 col-sm-12\" *ngFor=\"let menu of menuDetailsResponse; let i = index\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"menu.selected\" (change) = \"onSelectRights()\">\r\n                            <label class=\"form-check-label\">\r\n                                {{menu.menuHirerarchy}}\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\" *ngIf =\"menu?.subMenu?.length>0\">\r\n                            <div *ngFor=\"let parentMenu of menu.subMenu; let j = index\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"parentMenu.selected\" (change) = \"onSelectRights()\">\r\n                                <label class=\"form-check-label\">\r\n                                    {{parentMenu.menuHirerarchy}}\r\n                                </label>\r\n                            </div>                            \r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"isRightsSelected\" class=\"alert text-danger\">\r\n                        Please select atleast one.\r\n                    </div>                                        \r\n                </div>                \r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">Cancel</button>                        \r\n                    </div>   \r\n                    <div class=\"col-xl-1 col-md-2 col-sm-12\">                        \r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) =\"onSubmit()\">Submit</button>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-12 col-sm-12\" *ngIf=\"isViewAssignRightsCard\">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">Assign Category Rights</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-md-6 col-sm-12\" *ngFor=\"let menu of menuDetailsResponse; let i = index\">\r\n                        <div class=\"form-check\" *ngIf=\"menu.selected\">\r\n                            <label class=\"form-check-label\">\r\n                                {{menu.menuHirerarchy}}\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\" *ngIf =\"menu?.subMenu?.length>0\">\r\n                            <div *ngFor=\"let parentMenu of menu.subMenu; let j = index\">\r\n                                <label class=\"form-check-label\" *ngIf=\"parentMenu.selected\">\r\n                                    {{parentMenu.menuHirerarchy}}\r\n                                </label>\r\n                            </div>                            \r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"isRightsSelected\" class=\"alert text-danger\">\r\n                        Please select atleast one.\r\n                    </div>                                        \r\n                </div>                \r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">Cancel</button>                        \r\n                    </div>   \r\n                    <div class=\"col-xl-1 col-md-2 col-sm-12\">                                                \r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) =\"onConfirm()\">Confirm</button>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row justify-content-center\" *ngIf=\"isRecordConfirmed\">\r\n    <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">{{header}}</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            {{confirmMessage}}\r\n                         </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">OK</button>                        \r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CreateGroupComponent } from './create-group.component';\r\n\r\nconst routes: Routes = [{ path: '', component: CreateGroupComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CreateGroupRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { UAMService } from '../user-access-mgmt.service';\r\n\r\n@Component({\r\n  selector: 'app-create-group',\r\n  templateUrl: './create-group.component.html',\r\n  styleUrls: ['./create-group.component.scss']\r\n})\r\nexport class CreateGroupComponent implements OnInit {\r\n\r\n  config: typeof CONFIG = CONFIG;\r\n  categoryList: any = [];\r\n  groupList: any = [];\r\n  menuDetailsResponse: any = [];\r\n  menuDetailsResponse4Group: any = [];\r\n  userRoles: any; \r\n  currentUserRole: String = \"\";\r\n  isCategoryRoleSelected: boolean = true;\r\n  isCreateButtonEnabled: boolean = false;\r\n  isAssignRightsCard: boolean = false;\r\n  isRightsSelected: boolean = false;\r\n  isCategoryCodeSelected: boolean = false;\r\n  isViewAssignRightsCard: boolean = false;\r\n  isModifyCategory: boolean = false;\r\n  isAddCategory: boolean = false;\r\n  isGroupCodeSelected: boolean = false;\r\n  header: String = \"Modify Category\";\r\n  isRecordConfirmed: boolean = false;\r\n  confirmMessage: String = \"\";\r\n\r\n  routerLink: String = \"\";\r\n  groupMaster = {\r\n    groupCode : \"\"\r\n  };\r\n  createGroup = {\r\n    serviceData : {\r\n      groupCode : \"\",\r\n      groupName : \"\",\r\n      groupDesc : \"\",\r\n      categoryCode : \"\",\r\n      categoryRole : \"\",\r\n      menuId : []\r\n    }\r\n  };\r\n  constructor(\r\n    public uamService: UAMService,\r\n    public toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.route);\r\n    this.route.params.subscribe(queryParams => {\r\n      let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n      this.userRoles = this.config.userRoles;\r\n        if (ibssApp) {\r\n          ibssApp = JSON.parse(ibssApp);\r\n        }\r\n      this.currentUserRole = ibssApp.token.roleType;\r\n      this.routerLink = queryParams['Id'];\r\n      if(this.routerLink == \"add\"){\r\n        this.isAddCategory = true;\r\n        this.header = \"Create Category\";\r\n      }else{\r\n        this.isAddCategory = false;\r\n        this.header = \"Modify Category\";\r\n      }\r\n    });\r\n  }\r\n\r\n  onSelectingRoles(){\r\n    this.createGroup.serviceData.categoryCode = \"\";\r\n    this.categoryList = [];\r\n    if(this.createGroup.serviceData.categoryRole.length <= 0){\r\n      this.isCategoryRoleSelected = false;\r\n    }\r\n\r\n    this.config.toggleLoader(true);\r\n    this.uamService.fetchCategories(this.createGroup.serviceData.categoryRole)\r\n    .subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.categoryList = res.serviceData;\r\n        this.isCategoryRoleSelected = true; \r\n        this.isCreateButtonEnabled = true; \r\n        this.config.toggleLoader(false);\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                  this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }        \r\n        this.config.toggleLoader(false);      \r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      this.config.toggleLoader(false);\r\n    });\r\n  }\r\n\r\n  fetchCategoryRights(){\r\n    this.config.toggleLoader(true);\r\n    this.uamService.fetchCategoriesRights(this.createGroup.serviceData.categoryCode,\r\n      this.createGroup.serviceData.categoryRole)\r\n    .subscribe((res: any) => {\r\n      console.log(res);\r\n      this.config.toggleLoader(false);\r\n      if(res.error && res.error.responseCode == 0){\r\n        //this.menuDetailsResponse = res.serviceData.menu.map((menu:any, index:any) => { menu.selected == (index == 1); return menu;});\r\n        this.menuDetailsResponse = res.serviceData.menu;\r\n        this.isCreateButtonEnabled = false;\r\n        this.isAssignRightsCard = true; \r\n\r\n        if (!this.isAddCategory) {\r\n          this.onSelectGroupCode();\r\n        }\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                  this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }        \r\n        this.config.toggleLoader(false); \r\n      }      \r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      this.config.toggleLoader(false);\r\n    });\r\n  }\r\n  onCreate(){\r\n    if(this.createGroup.serviceData.categoryCode.length <= 0){\r\n      this.isCategoryCodeSelected = true;\r\n      return;\r\n    }\r\n    this.fetchCategoryRights();\r\n  }\r\n  onSelectRights(){\r\n    this.isRightsSelected = false;\r\n  }\r\n  onSelectCategoryCode(){\r\n    this.groupList = [];\r\n    \r\n    if(this.isAddCategory){\r\n      this.isCategoryCodeSelected = false;\r\n    }else{\r\n      this.createGroup.serviceData.groupCode = \"\";\r\n      this.config.toggleLoader(true);\r\n      this.uamService.fetchGroups(this.createGroup.serviceData.categoryCode, this.createGroup.serviceData.categoryRole)\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        if(res.error && res.error.responseCode == 0){\r\n          this.groupList = res.serviceData;\r\n          this.isGroupCodeSelected = false;          \r\n          this.config.toggleLoader(false);\r\n        } else {\r\n          if (res.error) {\r\n              if (res.error.businessValidation.length > 0) {\r\n                  for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                    this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                  }\r\n              }\r\n              if (res.error.dataValidation.length > 0) {\r\n                  for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                    this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                  }\r\n              }\r\n          } else if (res.responseCode == -1) {\r\n              this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n          }        \r\n          this.config.toggleLoader(false);  \r\n        }\r\n      }, (err: any) => {\r\n        this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        this.config.toggleLoader(false);  \r\n      });\r\n    }\r\n  }\r\n  onSubmit(){\r\n    const rights: any = [];\r\n    this.menuDetailsResponse.forEach((menu:any) => { \r\n      if (menu.selected) {\r\n        rights.push(menu.menuId);\r\n        if(menu.subMenu){\r\n          menu.subMenu.forEach((subMenu:any)=>{\r\n            if(subMenu.selected)\r\n              rights.push(subMenu.menuId);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    if(rights.length <= 0){\r\n      this.isRightsSelected = true;\r\n      return;\r\n    }\r\n\r\n    this.createGroup.serviceData.menuId = rights;\r\n    this.isViewAssignRightsCard = true;\r\n    this.isAssignRightsCard = false;\r\n  }\r\n  onConfirm(){\r\n    this.config.toggleLoader(true);\r\n    this.uamService.createGroup(this.createGroup).subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.isRecordConfirmed = true;\r\n        if(this.isAddCategory){\r\n          this.confirmMessage = \"Group Created Successfully\";\r\n        }else{\r\n          this.confirmMessage = \"Group Modified Successfully\";\r\n        }\r\n        this.config.toggleLoader(false);\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                    this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                    this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }\r\n        this.config.toggleLoader(false);\r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      this.config.toggleLoader(false);\r\n    });\r\n  }\r\n\r\n  onSelectGroupCode(){    \r\n    if(this.groupMaster.groupCode.length <= 0){\r\n      this.isGroupCodeSelected = true;\r\n      return;\r\n    }\r\n    this.config.toggleLoader(true);\r\n    this.uamService.fetchGroupRights(this.groupMaster.groupCode)\r\n    .subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.menuDetailsResponse4Group = res.serviceData.menu;\r\n        this.menuDetailsResponse4Group.forEach((groupMenu: any) => {\r\n          for(let categoryMenu of this.menuDetailsResponse){\r\n            if(groupMenu.menuId === categoryMenu.menuId){\r\n              categoryMenu.selected = true;\r\n              if(groupMenu.subMenu && groupMenu.subMenu.length > 0){\r\n                groupMenu.subMenu.forEach((groupSubMenu: any) => {\r\n                  for(let categorySubMenu of categoryMenu.subMenu){\r\n                    if(categorySubMenu.menuId === groupSubMenu.menuId){\r\n                      categorySubMenu.selected = true;\r\n                    }\r\n                  };\r\n                });\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        this.isAssignRightsCard = true;\r\n        this.createGroup.serviceData.groupCode = this.groupMaster.groupCode;\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                  this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }                \r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }                \r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }        \r\n      }\r\n      this.config.toggleLoader(false);\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");     \r\n      this.config.toggleLoader(false);  \r\n    });\r\n     \r\n  }\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;    \r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n         this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CreateGroupComponent } from './create-group.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CreateGroupRoutingModule } from './create-group-routing.module';\r\nimport { UAMService } from '../user-access-mgmt.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CreateGroupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CreateGroupRoutingModule\r\n  ],\r\n  providers: [UAMService]\r\n})\r\nexport class CreateGroupModule { }\r\n"],"sourceRoot":"webpack:///"}