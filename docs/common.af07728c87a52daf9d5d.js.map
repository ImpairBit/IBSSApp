{"version":3,"sources":["./src/app/services/configuration.service.ts","./src/app/wizard/search-wizard/search-wizard.component.html","./src/app/wizard/search-wizard/search-wizard.-routing.module.ts","./src/app/wizard/search-wizard/search-wizard.component.ts","./src/app/wizard/search-wizard/search-wizard.module.ts","./src/app/enums/theme.enum.ts","./src/app/services/main.service.ts","./src/app/user-access-mgmt/user-access-mgmt.service.ts"],"names":["ConfigurationService","http","config","_setThemeUrl","this","getBaseURL","RESOURCES","_draftThemeUrl","_getThemeUrl","payload","ibssApp","localStorage","getItem","JSON","parse","headers","append","token","access_token","post","profile","type","draft","get","routes","path","component","SearchWizardComponent","wizardService","toastr","profileName","currentPage","itemsPerPage","sortOrder","searchResult","totalRecords","maxPageSize","isSearch","toggleLoader","getProfiles","event","page","subscribe","res","console","log","error","responseCode","serviceData","totalPages","length","businessValidation","i","errorDesc","dataValidation","err","onSearch","SearchWizardRoutingModule","forChild","SearchWizardModule","forRoot","themeType","MainService","_dashboardUrl","UAMService","_createCategoryUrl","_isCategoryExists","_fetchCategoryLists","_fetchGroupsLists","_fetchCategoryRights","_createGroupUrl","_fetchGroupRights","_createUserUrl","_searchAllUrl","role","categoryCode","categoryData","groupData","groupCode","userData","extendedUrl"],"mappings":"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","file":"common.af07728c87a52daf9d5d.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CONFIG } from '../config';\nimport { API } from '../enums/api.enum';\nimport { themeType } from '../enums/theme.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConfigurationService {\n  config: typeof CONFIG = CONFIG;\n  _setThemeUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/theme/write\";\n  _draftThemeUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/theme/preview/profileName/\";\n  _getThemeUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/theme/view/profileName/\";\n\n  constructor(public http: HttpClient) { }\n\n  setTheme(payload: any) {\n\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\n    if (ibssApp) {\n      ibssApp = JSON.parse(ibssApp);\n    }\n    let headers: HttpHeaders = new HttpHeaders();\n    headers = headers.append('Accept', 'application/json');\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\n    headers = headers.append(\"X-HTTP-Method\", \"POST\");\n    return this.http.post(this._setThemeUrl, payload, { headers: headers });\n  }\n\n  getTheme(profile:any, type: any) {\n    \n    \n    let headers: HttpHeaders = new HttpHeaders();\n    headers = headers.append('Accept', 'application/json');\n    headers = headers.append('Content-Type', 'application/json');\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");\n    \n    if (type == themeType.draft) {\n      \n      let ibssApp: any = localStorage.getItem(\"ibssApp\");\n      if (ibssApp) {\n        ibssApp = JSON.parse(ibssApp);\n      }\n      headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\n    }\n    const _url = type == themeType.draft ? this._draftThemeUrl :  this._getThemeUrl;\n    return this.http.get(_url+profile, { headers: headers });\n  }\n}\n","<div class=\"search-profile row justify-content-center\">\r\n    <!-- <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">Search Profiles</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-12 col-lg-5 col-form-label\">Profile Name</label>\r\n                            <div class=\"col-sm-12 col-lg-5\">\r\n                                <input type=\"text\" name=\"searchProfileName\" id=\"searchProfileName\" class=\"form-control \"\r\n                                required minlength=\"2\" maxlength=\"75\" [(ngModel)]=\"profileName\"\r\n                                placeholder=\"Profile Name\">\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"clearfix\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSearch()\">Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    <div class=\"ti-search-card\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-4 col-sm-12\">\r\n                <h5>Search Site</h5>\r\n            </div>\r\n            <div class=\"col-lg-8 col-sm-12\">\r\n                <div class=\"input-group\">\r\n                    <input type=\"text\" name=\"searchProfileName\" id=\"searchProfileName\" class=\"form-control \"\r\n                    required minlength=\"2\" maxlength=\"75\" [(ngModel)]=\"profileName\"\r\n                    placeholder=\"Site Name\">\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSearch()\">Search</button>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"site-table\" *ngIf=\"isSearch\">\r\n        <div class=\"ti-card\">\r\n            <div class=\"row\">\r\n                <h5 class=\"my-0 col-md-6\">\r\n                    Search Results\r\n                </h5>\r\n                <div class=\"form-group col-md-6\" *ngIf=\"searchResult?.length>0\">\r\n                    <div class=\"input-group\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"\">Items</span>\r\n                        </div>\r\n                        <select class=\"form-control\" [(ngModel)]=\"itemsPerPage\" (change)=\"onSearch()\" >\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"25\">25</option>\r\n                            <option value=\"50\">50</option>\r\n                            <option value=\"75\">75</option>\r\n                            <option value=\"100\">100</option>\r\n                        </select>\r\n                        <select class=\"form-control\" [(ngModel)]=\"sortOrder\" (change)=\"onSearch()\" >\r\n                            <option value=\"asc\">Ascending (A-Z)</option>\r\n                            <option value=\"desc\">Descending (Z-A)</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"ti-responsive-table\">\r\n            <table >\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Site Link</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let result of searchResult; let i=index;\">\r\n                        <td class=\"no\">{{ ((currentPage-1) * itemsPerPage) + (i+1) }}</td>\r\n                        <td data-label=\"Title\">{{result.profileName}} <span class=\"badge badge-pill badge-info\" *ngIf=\"result?.noOfViews>0\">{{result?.noOfViews}}</span></td>\r\n                        <td data-label=\"Site\" class=\"site-name\">\r\n                            <a class=\"site-link\" href=\"javascript:void(0)\" [routerLink]=\"['../preview/',result.profileName]\" target=\"_blank\">\r\n                                <i class=\"material-icons\">language</i>\r\n                                http://techintent.in/preview/{{result.profileName}}</a>\r\n                        </td>\r\n                        <td data-label=\"Icons\" class=\"act-btns\">\r\n                            <a class=\"rounded-buttons btn purple\" href=\"javascript:void(0)\" [routerLink]=\"['../../edit/',result.profileName]\">\r\n                                <span class=\"material-icons\">edit</span>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngIf=\"searchResult?.length==0\">\r\n                        <td class=\"text-center\" colspan=\"4\"> <span class=\"material-icons-outlined\">error</span>\r\n                            &nbsp; No site found. <a class=\"create\" [routerLink]=\"['../../site/add']\">Click here to create new site</a></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"text-center pagination-container p-3\">\r\n                <pagination *ngIf=\"totalRecords > itemsPerPage\" [totalItems]=\"totalRecords\" [itemsPerPage]=\"itemsPerPage\" [maxSize]=\"maxPageSize\" (pageChanged)=\"pageChanged($event)\" [(ngModel)]=\"currentPage\"></pagination>\r\n              </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SearchWizardComponent } from './search-wizard.component';\r\n\r\nconst routes: Routes = [{ path: '', component: SearchWizardComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SearchWizardRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { WizardService } from '../wizard.service';\r\n\r\n@Component({\r\n  selector: 'ibss-search-wizard',\r\n  templateUrl: './search-wizard.component.html',\r\n  styleUrls: ['./search-wizard.component.scss']\r\n})\r\nexport class SearchWizardComponent implements OnInit {\r\n\r\n  config: typeof CONFIG = CONFIG;\r\n  profileName: String = \"\";\r\n  currentPage =1;\r\n  itemsPerPage = 10;\r\n  sortOrder = \"asc\";\r\n  searchResult: any=[];\r\n  totalRecords = 0;\r\n  maxPageSize = 5;\r\n  isSearch = false;\r\n\r\n  constructor(\r\n    public wizardService: WizardService,\r\n    public toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSearch(){\r\n    this.config.toggleLoader(true);\r\n    this.searchResult =[];\r\n    this.currentPage = 1;\r\n    this.getProfiles();\r\n  }\r\n\r\n    \r\n  pageChanged(event: PageChangedEvent): void {\r\n    this.currentPage = event.page;\r\n    this.getProfiles();\r\n  }\r\n\r\n  getProfiles() {\r\n    const extUrl= `${this.profileName}/${this.currentPage-1}/${this.itemsPerPage}/${this.sortOrder}`;\r\n    this.wizardService.get(extUrl)\r\n    .subscribe((res: any) => {\r\n      console.log(\"onSearch\",res);\r\n      this.isSearch = true;\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.searchResult=res.serviceData;\r\n        this.totalRecords = res.totalPages > 1 ? res.totalPages * this.itemsPerPage : res.serviceData.length;\r\n        this.config.toggleLoader(false);\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                  this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }        \r\n        this.config.toggleLoader(false);      \r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n      this.config.toggleLoader(false);\r\n    });\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchWizardRoutingModule } from './search-wizard.-routing.module';\r\nimport { WizardService } from '../wizard.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    SearchWizardRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n  ],  \r\n  providers: [\r\n    WizardService\r\n  ]\r\n})\r\nexport class SearchWizardModule { }","export enum themeType{\r\n    draft = 1,\r\n    published = 2\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { API } from 'src/app/enums/api.enum';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MainService {\r\n  config: typeof CONFIG = CONFIG;\r\n  _dashboardUrl = this.config.getBaseURL(API.RESOURCES) + \"/user/dashboard\";\r\n  constructor(\r\n    public http: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  getDashboardData() {\r\n\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");\r\n    return this.http.get(this._dashboardUrl, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CONFIG } from '../config';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { API } from '../enums/api.enum';\r\n\r\n@Injectable()\r\nexport class UAMService {\r\n    config: typeof CONFIG = CONFIG;\r\n    _createCategoryUrl = this.config.getBaseURL(API.RESOURCES) + \"/user/category/create\";\r\n    _isCategoryExists = this.config.getBaseURL(API.RESOURCES) + \"/user/category/\";\r\n    _fetchCategoryLists = this.config.getBaseURL(API.RESOURCES) + \"/user/category/list/\";\r\n    _fetchGroupsLists = this.config.getBaseURL(API.RESOURCES) + \"/user/group/list/\";\r\n    _fetchCategoryRights = this.config.getBaseURL(API.RESOURCES) + \"/user/category/rights/\";\r\n    _createGroupUrl = this.config.getBaseURL(API.RESOURCES) + \"/user/group/create\";\r\n    _fetchGroupRights = this.config.getBaseURL(API.RESOURCES) + \"/user/group/rights/\";\r\n    _createUserUrl = this.config.getBaseURL(API.RESOURCES) + \"/user/create\";\r\n    _searchAllUrl = this.config.getBaseURL(API.RESOURCES) + \"/user/search/\";\r\n    constructor(\r\n        public http: HttpClient,\r\n        public toastr: ToastrService\r\n    ) { }\r\n    isCategoryExists(role:String, categoryCode:String) {\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n        return this.http.get(this._isCategoryExists+role+\"/\"+categoryCode, { headers: headers });\r\n    }\r\n    createCategory(categoryData:any) {\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"POST\");        \r\n        return this.http.post(this._createCategoryUrl, categoryData, { headers: headers });\r\n    }\r\n    fetchCategories(role: String){\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n        return this.http.get(this._fetchCategoryLists+role, { headers: headers });\r\n    }\r\n\r\n    fetchCategoriesRights(categoryCode: String, role: String){\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n        return this.http.get(this._fetchCategoryRights+categoryCode+\"/\"+role, { headers: headers });\r\n    }\r\n    createGroup(groupData:any) {\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"POST\");        \r\n        return this.http.post(this._createGroupUrl, groupData, { headers: headers });\r\n    }\r\n\r\n    fetchGroups(categoryCode: String, role: String){\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n        return this.http.get(this._fetchGroupsLists+categoryCode+\"/\"+role, { headers: headers });\r\n    }\r\n    fetchGroupRights(groupCode: String){\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n        return this.http.get(this._fetchGroupRights+groupCode, { headers: headers });\r\n    }\r\n\r\n    createUser(userData:any) {\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"POST\");        \r\n        return this.http.post(this._createUserUrl, userData, { headers: headers });\r\n    }\r\n\r\n    fetchUsers(extendedUrl: any){\r\n        let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n        if (ibssApp) {\r\n            ibssApp = JSON.parse(ibssApp);\r\n        }\r\n\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/json');\r\n        headers = headers.append('Content-Type', 'application/json');\r\n        headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n        headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n        return this.http.get(this._searchAllUrl + extendedUrl, { headers: headers });\r\n    }\r\n}"],"sourceRoot":"webpack:///"}