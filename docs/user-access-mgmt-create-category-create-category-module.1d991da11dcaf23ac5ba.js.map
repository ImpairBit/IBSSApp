{"version":3,"sources":["./src/app/user-access-mgmt/create-category/create-category.component.html","./src/app/user-access-mgmt/create-category/create-category-routing.module.ts","./src/app/user-access-mgmt/create-category/create-category.component.ts","./src/app/user-access-mgmt/create-category/create-category.module.ts"],"names":["routes","path","component","CreateCategoryComponent","uamService","toastr","route","router","menuDetailsResponse","rightsList","config","isAssignRightsCard","isRightsSelected","isViewAssignRightsCard","isCategoryRoleSelected","isCreateButtonEnabled","currentUserRole","errorMessage","isErrorExists","isRecordConfirmed","confirmMessage","isNew","createCategory","serviceData","categoryCode","categoryName","categoryDesc","categoryRole","menuId","this","params","subscribe","queryParams","console","log","ibssApp","localStorage","getItem","userRoles","JSON","parse","res","menu","map","index","temp","filter","selected","token","roleType","length","toggleLoader","isCategoryExists","error","responseCode","businessValidation","i","errorDesc","dataValidation","err","role","trim","rights","forEach","push","subMenu","currentUrl","url","navigateByUrl","skipLocationChange","then","navigate","CreateCategoryRoutingModule","forChild","CreateCategoryModule"],"mappings":"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","file":"user-access-mgmt-create-category-create-category-module.1d991da11dcaf23ac5ba.js","sourcesContent":["<div class=\"row justify-content-center\" *ngIf=\"!isRecordConfirmed\">\r\n    <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">Create Category</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                         <label for=\"\" class=\"col-sm-12 col-lg-4 col-form-label\">Category Code</label>\r\n                         <div class=\"col-sm-12 col-lg-8\">\r\n                           <input type=\"text\" name=\"categoryCode\" id=\"categoryCode\" class=\"form-control\" \r\n                           required minlength=\"7\" maxlength=\"7\" [(ngModel)] =\"createCategory.serviceData.categoryCode\" \r\n                            placeholder=\"Category Code\" #categoryCode=\"ngModel\">\r\n                         </div>\r\n                        </div>\r\n                        <div *ngIf=\"categoryCode.invalid && categoryCode.touched\"\r\n                            class=\"alert text-danger\">\r\n                            <div *ngIf=\"categoryCode.errors?.required\">\r\n                                Category Code is required.\r\n                            </div>\r\n                            <div *ngIf=\"categoryCode.errors?.minlength\">\r\n                                Category Code must be at least 7 characters long.\r\n                            </div>\r\n                            <div *ngIf=\"categoryCode.errors?.maxlength\">\r\n                                Category Code should not be more then 7 characters long.\r\n                            </div>                           \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"\" class=\"col-sm-12 col-lg-4 col-form-label\">Category Name</label>\r\n                            <div class=\"col-sm-12 col-lg-8\">\r\n                            <input type=\"\" class=\"form-control\" id=\"categoryName\" name=\"categoryName\"\r\n                            required minlength=\"3\" maxlength=\"20\" [(ngModel)] =\"createCategory.serviceData.categoryName\"  \r\n                            placeholder=\"Category Name\" #categoryName=\"ngModel\">\r\n                            </div>\r\n                            <div *ngIf=\"categoryName.invalid && categoryName.touched\"\r\n                                class=\"alert text-danger\">\r\n                                <div *ngIf=\"categoryName.errors?.required\">\r\n                                    Category Name is required.\r\n                                </div>\r\n                                <div *ngIf=\"categoryName.errors?.minlength\">\r\n                                    Category Name must be at least 3 characters long.\r\n                                </div>\r\n                                <div *ngIf=\"categoryName.errors?.maxlength\">\r\n                                    Category Name should not be more then 20 characters long.\r\n                                </div>                           \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-sm-12 col-lg-4 col-form-label\">Category Role</label>\r\n                            <div class=\"col-sm-12 col-lg-8\" *ngFor=\"let manager of userRoles.rolesManager\">\r\n                                <select  *ngIf=\"currentUserRole == manager.managerRole\"\r\n                                class=\"form-control\" id=\"categoryRole\" name=\"categoryRole\"\r\n                                [(ngModel)] =\"createCategory.serviceData.categoryRole\" #categoryRole=\"ngModel\" (change) = \"onSelectingRoles()\"\r\n                                >\r\n                                    <option selected value=\"\">Category Role</option>\r\n                                    <option *ngFor = \"let roles of manager.rolesManaging\" [value]=roles.role>{{roles.desc}}</option>\r\n                                </select>                                                      \r\n                            </div>\r\n                            <div class=\"alert text-danger\" *ngIf=\"!isCategoryRoleSelected\">\r\n                                Please select Role to Create Category.\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                        <label class=\"col-sm-12 col-lg-4 col-form-label\">Category Desc</label>\r\n                         <div class=\"col-sm-12 col-lg-8\">\r\n                           <input type=\"text\" class=\"form-control\" id=\"categoryDesc\" name=\"categoryDesc\"\r\n                            required minlength=\"3\" maxlength=\"50\" [(ngModel)] =\"createCategory.serviceData.categoryDesc\" \r\n                            placeholder=\"Category Desc\" #categoryDesc=\"ngModel\">\r\n                         </div>\r\n                        </div>\r\n                        <div *ngIf=\"categoryDesc.invalid && categoryDesc.touched\"\r\n                            class=\"alert text-danger\">\r\n                            <div *ngIf=\"categoryDesc.errors?.required\">\r\n                                Category Desc is required.\r\n                            </div>\r\n                            <div *ngIf=\"categoryDesc.errors?.minlength\">\r\n                                Category Desc must be at least 3 characters long.\r\n                            </div>\r\n                            <div *ngIf=\"categoryDesc.errors?.maxlength\">\r\n                                Category Desc should not be more then 50 characters long.\r\n                            </div>                           \r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"isErrorExists\" class=\"text-danger\">\r\n                        {{errorMessage}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\" *ngIf=\"isCreateButtonEnabled\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">Cancel</button>\r\n                    </div>                   \r\n                    <div class=\"col-xl-1 col-md-2 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"onCreate()\">Create</button>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-12 col-sm-12\" *ngIf=\"!isAssignRightsCard\">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">Assign Category Rights</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-md-6 col-sm-12\" *ngFor=\"let menu of menuDetailsResponse; let i = index\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"menu.selected\" (change) = \"onSelectRights()\">\r\n                            <label class=\"form-check-label\">\r\n                                {{menu.menuHirerarchy}}\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\" *ngIf =\"menu?.subMenu?.length>0\">\r\n                            <div *ngFor=\"let parentMenu of menu.subMenu; let j = index\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"parentMenu.selected\" (change) = \"onSelectRights()\">\r\n                                <label class=\"form-check-label\">\r\n                                    {{parentMenu.menuHirerarchy}}\r\n                                </label>\r\n                            </div>                            \r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"isRightsSelected\" class=\"alert text-danger\">\r\n                        Please select atleast one.\r\n                    </div>                                        \r\n                </div>                \r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">Cancel</button>\r\n                    </div>\r\n                    <div class=\"col-xl-1 col-md-2 col-sm-12\">                        \r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) =\"onSubmit()\">Submit</button>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n    <div class=\"col-xl-12 col-sm-12\" *ngIf=\"!isViewAssignRightsCard\">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">Assign Category Rights</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-md-6 col-sm-12\" *ngFor=\"let menu of menuDetailsResponse; let i = index\">\r\n                        <div class=\"form-check\" *ngIf=\"menu.selected\">\r\n                            <label class=\"form-check-label\">\r\n                                {{menu.menuHirerarchy}}\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\" *ngIf =\"menu?.subMenu?.length>0\">\r\n                            <div *ngFor=\"let parentMenu of menu.subMenu; let j = index\">\r\n                                <label class=\"form-check-label\" *ngIf=\"parentMenu.selected\">\r\n                                    {{parentMenu.menuHirerarchy}}\r\n                                </label>\r\n                            </div>                            \r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"isRightsSelected\" class=\"alert text-danger\">\r\n                        Please select atleast one.\r\n                    </div>                                        \r\n                </div>                \r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">Cancel</button>\r\n                    </div>\r\n                    <div class=\"col-xl-1 col-md-2 col-sm-12\">                                                \r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) =\"onConfirm()\">Confirm</button>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row justify-content-center\" *ngIf=\"isRecordConfirmed\">\r\n    <div class=\"col-xl-12 col-sm-12 \">\r\n        <div class=\"card ti-card mb-3\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"my-0\">Create Category</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-sm-12\">\r\n                        <div class=\"form-group row\">\r\n                            {{confirmMessage}}\r\n                         </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-1 col-md-6 col-sm-12\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click) = \"reloadCurrentRoute()\">OK</button>                        \r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CreateCategoryComponent } from './create-category.component';\r\n\r\nconst routes: Routes = [{ path: '', component: CreateCategoryComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CreateCategoryRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { UAMService } from '../user-access-mgmt.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-create-category',\r\n  templateUrl: './create-category.component.html',\r\n  styleUrls: ['./create-category.component.scss']\r\n})\r\nexport class CreateCategoryComponent implements OnInit {\r\n  menuDetailsResponse: any = [];\r\n  rightsList: any = [];\r\n  config: typeof CONFIG = CONFIG;\r\n  isAssignRightsCard: boolean = true;\r\n  isRightsSelected: boolean = false;\r\n  isViewAssignRightsCard: boolean = true;\r\n  isCategoryRoleSelected: boolean = true;\r\n  isCreateButtonEnabled: boolean = true;\r\n  userRoles: any; \r\n  currentUserRole: String = \"\";\r\n  errorMessage: String = \"\";\r\n  isErrorExists: boolean = false;\r\n  isRecordConfirmed: boolean = false;\r\n  confirmMessage: String = \"\";\r\n  isNew = true;\r\n  createCategory = {\r\n    serviceData :{\r\n      categoryCode : \"\",\r\n      categoryName : \"\",\r\n      categoryDesc : \"\",\r\n      categoryRole: \"\",\r\n      menuId:[]\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public uamService: UAMService,\r\n    public toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    public router: Router\r\n  ) { }\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(queryParams => {\r\n      this.isNew = queryParams['Id'] ===\"add\";\r\n      console.log(\"isNew\", this.isNew);\r\n      let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n      this.userRoles = this.config.userRoles;\r\n        if (ibssApp) {\r\n          ibssApp = JSON.parse(ibssApp);\r\n        }\r\n      console.log(\"ibssApp is \", ibssApp);\r\n      this.menuDetailsResponse = ibssApp.res.serviceData.menu.map((menu:any, index:any) => { return menu;});\r\n      const temp = this.menuDetailsResponse.filter((menu:any) => menu.selected);\r\n      this.currentUserRole = ibssApp.token.roleType;\r\n      console.log(temp);\r\n    });\r\n  }\r\n  onCreate(){\r\n    this.isErrorExists = false;\r\n    if(this.createCategory.serviceData.categoryRole.length <=0){\r\n      this.isCategoryRoleSelected = false;\r\n      this.config.toggleLoader(false);\r\n      return;\r\n    }\r\n\r\n    this.uamService.isCategoryExists(this.createCategory.serviceData.categoryRole,\r\n      this.createCategory.serviceData.categoryCode).subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.isAssignRightsCard = false;\r\n        this.isCreateButtonEnabled = false;\r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                    this.errorMessage = this.errorMessage + \"\\t\" + res.error.businessValidation[i].errorDesc;                  \r\n                }\r\n                this.isErrorExists = true;\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                  this.errorMessage = this.errorMessage + \"\\t\" + res.error.businessValidation[i].errorDesc;                \r\n                }\r\n                this.isErrorExists = true;\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }\r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n    });\r\n  \r\n    if(this.isErrorExists){\r\n      return;\r\n    }\r\n  }\r\n  onSubmit(){\r\n    this.config.toggleLoader(true);\r\n    const role = (this.createCategory.serviceData.categoryRole && this.createCategory.serviceData.categoryRole.trim().length <= 0);\r\n    \r\n    const rights: any = [];\r\n    this.menuDetailsResponse.forEach((menu:any) => { \r\n      if (menu.selected) {\r\n        rights.push(menu.menuId);\r\n        if(menu.subMenu){\r\n          menu.subMenu.forEach((subMenu:any)=>{\r\n            if(subMenu.selected)\r\n              rights.push(subMenu.menuId);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    if(role){\r\n      this.isCategoryRoleSelected = false;\r\n      this.config.toggleLoader(false);\r\n      return;\r\n    }\r\n\r\n    if(rights.length <= 0){\r\n      this.isRightsSelected = true;\r\n      this.config.toggleLoader(false);\r\n      return;\r\n    }\r\n    this.createCategory.serviceData.menuId = rights;\r\n    console.log(this.createCategory);\r\n    this.config.toggleLoader(false);\r\n    this.isViewAssignRightsCard = false;\r\n    this.isAssignRightsCard = true;\r\n  }\r\n\r\n  onSelectRights(){\r\n    this.isRightsSelected = false;\r\n  }\r\n  onSelectingRoles(){\r\n    if(this.createCategory.serviceData.categoryRole.length >0){\r\n      this.isCategoryRoleSelected = true;\r\n    }    \r\n  }\r\n  onConfirm(){\r\n    this.uamService.createCategory(this.createCategory).subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        this.isRecordConfirmed = true;\r\n        this.confirmMessage = \"Category Created Successfully\";        \r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                    this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                    this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }\r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n    });\r\n  }\r\n  isCategoryExists(role:String, categoryCode:String){\r\n    this.uamService.isCategoryExists(role,categoryCode).subscribe((res: any) => {\r\n      console.log(res);\r\n      if(res.error && res.error.responseCode == 0){\r\n        \r\n      } else {\r\n        if (res.error) {\r\n            if (res.error.businessValidation.length > 0) {\r\n                for (let i = 0; i < res.error.businessValidation.length; i++) {\r\n                    this.toastr.error(res.error.businessValidation[i].errorDesc);\r\n                }\r\n            }\r\n            if (res.error.dataValidation.length > 0) {\r\n                for (let i = 0; i < res.error.dataValidation.length; i++) {\r\n                    this.toastr.error(res.error.dataValidation[i].errorDesc);\r\n                }\r\n            }\r\n        } else if (res.responseCode == -1) {\r\n            this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n        }\r\n      }\r\n    }, (err: any) => {\r\n      this.toastr.error(\"Internal Error Occured, Please report to admin\");\r\n    });\r\n  }\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;    \r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n         this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CreateCategoryComponent } from './create-category.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UAMService } from '../user-access-mgmt.service';\r\nimport { CreateCategoryRoutingModule } from './create-category-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CreateCategoryComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CreateCategoryRoutingModule\r\n  ],\r\n  providers: [UAMService]\r\n})\r\nexport class CreateCategoryModule { }\r\n"],"sourceRoot":"webpack:///"}