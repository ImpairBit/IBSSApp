{"version":3,"sources":["./src/app/wizard/wizard.service.ts"],"names":["WizardService","http","config","_profileUrl","this","getBaseURL","RESOURCES","_saveUrl","_viewUrl","_previewUrl","_saveFileUrl","_deleteFileUrl","_googleFontsUrl","_userSearchUrl","modifyIndex","profile","signupData","ibssApp","localStorage","getItem","JSON","parse","headers","append","token","access_token","post","id","isAuth","get","extendedUrl","params","put","payload","currAssetsPath","assetsPath","type","title","filePath","toLowerCase","indexOf"],"mappings":"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","file":"wizard-search-wizard-search-wizard-module.99db0b670f2938dca002.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CONFIG } from 'src/app/config';\r\nimport { API } from 'src/app/enums/api.enum';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WizardService {\r\n  config: typeof CONFIG = CONFIG;\r\n  _profileUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/\";\r\n  _saveUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/write\";\r\n  _viewUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/view/1/\";\r\n  _previewUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/preview/1/\";\r\n  _saveFileUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/file/add\";\r\n  _deleteFileUrl = this.config.getBaseURL(API.RESOURCES) + \"/profile/file/delete\";\r\n  _googleFontsUrl = \"https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity\";\r\n  _userSearchUrl = this.config.getBaseURL(API.RESOURCES) + \"/user/search/\";\r\n  modifyIndex = -1;\r\n\r\n  profile:any;\r\n  constructor(\r\n    public http: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  setProfileData(profile:any) {\r\n    this.profile = profile;\r\n  }\r\n\r\n  getProfileData() {\r\n    return this.profile;\r\n  }\r\n\r\n  save(signupData: any) {\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"POST\");\r\n    return this.http.post(this._saveUrl, signupData, { headers: headers });\r\n  }\r\n\r\n  getViewData(id: any, isAuth:any = false) {\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n\r\n    if (isAuth) {\r\n      headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    }\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");\r\n    const _url = isAuth ? this._previewUrl: this._viewUrl;\r\n    return this.http.get(_url+id, { headers: headers });\r\n  }\r\n\r\n  getGoogleFonts() {\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");\r\n    return this.http.get(this._googleFontsUrl, { headers: headers });\r\n  }\r\n\r\n  get(extendedUrl: any){\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n        ibssApp = JSON.parse(ibssApp);\r\n    }\r\n\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n    return this.http.get(this._profileUrl + extendedUrl, { headers: headers });\r\n  }\r\n\r\n  searchUser(extendedUrl: any){\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n        ibssApp = JSON.parse(ibssApp);\r\n    }\r\n\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"GET\");        \r\n    return this.http.get(this._userSearchUrl + extendedUrl, { headers: headers });\r\n  }\r\n\r\n  assignUser(params: any){\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"PUT\");\r\n    return this.http.put(this._profileUrl+\"assign/\", params, { headers: headers });\r\n  }\r\n\r\n  saveFile(payload:any) {\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Accept', 'application/json');\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n    headers = headers.append(\"X-HTTP-Method\", \"POST\");\r\n    return this.http.post(this._saveFileUrl, payload, { headers: headers });\r\n  } \r\n\r\n  deleteFile(payload:any): Observable<any> {\r\n    let ibssApp: any = localStorage.getItem(\"ibssApp\");\r\n    if (ibssApp) {\r\n      ibssApp = JSON.parse(ibssApp);\r\n    }\r\n\r\n    const currAssetsPath = this.config.assetsPath+this.profile.type+\"/\"+this.profile.title+\"/\";\r\n    if (payload.filePath.toLowerCase().indexOf(currAssetsPath.toLowerCase())===-1) {\r\n      const inputParams = {\r\n        \"serviceData\": {\r\n          \"imageData\": \"\",\r\n          \"parentProfileName\": \"\",\r\n          \"profileCategory\": \"1\",\r\n          \"profileName\": this.profile.title,\r\n          \"profileType\": this.profile.type,\r\n          \"rootProfileName\": \"\",\r\n          \"sectionName\" : payload.sectionName,\r\n          \"fileNames\" : payload.fileNames,\r\n        }\r\n      }\r\n      let headers: HttpHeaders = new HttpHeaders();\r\n      headers = headers.append('Accept', 'application/json');\r\n      headers = headers.append('Content-Type', 'application/json');\r\n      headers = headers.append('Authorization', 'Bearer ' + ibssApp.token.access_token);\r\n      headers = headers.append(\"X-HTTP-Method\", \"DELETE\");\r\n      // return this.http.post(this._deleteFileUrl, inputParams, { headers: headers });\r\n    }\r\n\r\n    return of({});\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}